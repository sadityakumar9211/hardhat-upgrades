{"id":"912ff1a1d11b8062afab0e5ef647cc07","_format":"hh-sol-build-info-1","solcVersion":"0.8.9","solcLongVersion":"0.8.9+commit.e5eed63a","input":{"language":"Solidity","sources":{"contracts/Box.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.8;\n\n//Implementation or Logic Contract\ncontract Box {\n    uint256 internal value;\n    event valueChanged(uint256 newVale);\n\n    function store(uint256 newValue) public {\n        value = newValue;\n        emit valueChanged(newValue);\n    }\n\n    function retrieve() public view returns (uint256) {\n        return value;\n    }\n\n    function version() public pure returns (string memory) {\n        return '1.0';\n    }\n}\n"},"contracts/BoxV2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.8;\n\n//Implementation or Logic Contract\ncontract BoxV2 {\n    uint256 internal value;\n    event valueChanged(uint256 newVale);\n\n    function store(uint256 newValue) public {\n        value = newValue;\n        emit valueChanged(newValue);\n    }\n    function retrieve() public view  returns (uint256) {\n        return value;\n    }\n\n    function increment() public returns (uint256){\n        value = value + 1;\n        emit valueChanged(value);\n        return value;\n    }\n\n    function version() public pure returns (string memory) {\n        return \"2.0\";\n    }\n\n}"},"contracts/Proxy/BoxProxyAdmin.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\nimport '@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol';\n\ncontract BoxProxyAdmin is ProxyAdmin {\n    constructor(\n        address /*owner*/\n    ) ProxyAdmin() {}\n     \n}\n"},"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/transparent/ProxyAdmin.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./TransparentUpgradeableProxy.sol\";\nimport \"../../access/Ownable.sol\";\n\n/**\n * @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\n * explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\n */\ncontract ProxyAdmin is Ownable {\n    /**\n     * @dev Returns the current implementation of `proxy`.\n     *\n     * Requirements:\n     *\n     * - This contract must be the admin of `proxy`.\n     */\n    function getProxyImplementation(TransparentUpgradeableProxy proxy) public view virtual returns (address) {\n        // We need to manually run the static call since the getter cannot be flagged as view\n        // bytes4(keccak256(\"implementation()\")) == 0x5c60da1b\n        (bool success, bytes memory returndata) = address(proxy).staticcall(hex\"5c60da1b\");\n        require(success);\n        return abi.decode(returndata, (address));\n    }\n\n    /**\n     * @dev Returns the current admin of `proxy`.\n     *\n     * Requirements:\n     *\n     * - This contract must be the admin of `proxy`.\n     */\n    function getProxyAdmin(TransparentUpgradeableProxy proxy) public view virtual returns (address) {\n        // We need to manually run the static call since the getter cannot be flagged as view\n        // bytes4(keccak256(\"admin()\")) == 0xf851a440\n        (bool success, bytes memory returndata) = address(proxy).staticcall(hex\"f851a440\");\n        require(success);\n        return abi.decode(returndata, (address));\n    }\n\n    /**\n     * @dev Changes the admin of `proxy` to `newAdmin`.\n     *\n     * Requirements:\n     *\n     * - This contract must be the current admin of `proxy`.\n     */\n    function changeProxyAdmin(TransparentUpgradeableProxy proxy, address newAdmin) public virtual onlyOwner {\n        proxy.changeAdmin(newAdmin);\n    }\n\n    /**\n     * @dev Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}.\n     *\n     * Requirements:\n     *\n     * - This contract must be the admin of `proxy`.\n     */\n    function upgrade(TransparentUpgradeableProxy proxy, address implementation) public virtual onlyOwner {\n        proxy.upgradeTo(implementation);\n    }\n\n    /**\n     * @dev Upgrades `proxy` to `implementation` and calls a function on the new implementation. See\n     * {TransparentUpgradeableProxy-upgradeToAndCall}.\n     *\n     * Requirements:\n     *\n     * - This contract must be the admin of `proxy`.\n     */\n    function upgradeAndCall(\n        TransparentUpgradeableProxy proxy,\n        address implementation,\n        bytes memory data\n    ) public payable virtual onlyOwner {\n        proxy.upgradeToAndCall{value: msg.value}(implementation, data);\n    }\n}\n"},"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/transparent/TransparentUpgradeableProxy.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC1967/ERC1967Proxy.sol\";\n\n/**\n * @dev This contract implements a proxy that is upgradeable by an admin.\n *\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\n * clashing], which can potentially be used in an attack, this contract uses the\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\n * things that go hand in hand:\n *\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\n * that call matches one of the admin functions exposed by the proxy itself.\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\n * \"admin cannot fallback to proxy target\".\n *\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\n * to sudden errors when trying to call a function from the proxy implementation.\n *\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\n * you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\n */\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\n    /**\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\n     * optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\n     */\n    constructor(\n        address _logic,\n        address admin_,\n        bytes memory _data\n    ) payable ERC1967Proxy(_logic, _data) {\n        _changeAdmin(admin_);\n    }\n\n    /**\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\n     */\n    modifier ifAdmin() {\n        if (msg.sender == _getAdmin()) {\n            _;\n        } else {\n            _fallback();\n        }\n    }\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function admin() external ifAdmin returns (address admin_) {\n        admin_ = _getAdmin();\n    }\n\n    /**\n     * @dev Returns the current implementation.\n     *\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\n     */\n    function implementation() external ifAdmin returns (address implementation_) {\n        implementation_ = _implementation();\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     *\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\n     */\n    function changeAdmin(address newAdmin) external virtual ifAdmin {\n        _changeAdmin(newAdmin);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy.\n     *\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\n     */\n    function upgradeTo(address newImplementation) external ifAdmin {\n        _upgradeToAndCall(newImplementation, bytes(\"\"), false);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\n     * proxied contract.\n     *\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\n     */\n    function upgradeToAndCall(address newImplementation, bytes calldata data) external payable ifAdmin {\n        _upgradeToAndCall(newImplementation, data, true);\n    }\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _admin() internal view virtual returns (address) {\n        return _getAdmin();\n    }\n\n    /**\n     * @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}.\n     */\n    function _beforeFallback() internal virtual override {\n        require(msg.sender != _getAdmin(), \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\");\n        super._beforeFallback();\n    }\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/ERC1967/ERC1967Proxy.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Proxy.sol\";\nimport \"./ERC1967Upgrade.sol\";\n\n/**\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n * implementation address that can be changed. This address is stored in storage in the location specified by\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n * implementation behind the proxy.\n */\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\n    /**\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n     *\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n     * function call, and allows initializing the storage of the proxy like a Solidity constructor.\n     */\n    constructor(address _logic, bytes memory _data) payable {\n        _upgradeToAndCall(_logic, _data, false);\n    }\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _implementation() internal view virtual override returns (address impl) {\n        return ERC1967Upgrade._getImplementation();\n    }\n}\n"},"@openzeppelin/contracts/proxy/Proxy.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n     * and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _beforeFallback();\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n     * is empty.\n     */\n    receive() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n     * call, or as part of the Solidity `fallback` or `receive` functions.\n     *\n     * If overridden should call `super._beforeFallback()`.\n     */\n    function _beforeFallback() internal virtual {}\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeacon.sol\";\nimport \"../../interfaces/draft-IERC1822.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n *\n * @custom:oz-upgrades-unsafe-allow delegatecall\n */\nabstract contract ERC1967Upgrade {\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(\n        address newImplementation,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(\n        address newImplementation,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Emitted when the beacon is upgraded.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(Address.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            Address.isContract(IBeacon(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(\n        address newBeacon,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        }\n    }\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1140],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":1141,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1140,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,1140],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1885:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1914:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1895:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1895:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1895:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1875:9:0"},"nodeType":"ModifierInvocation","src":"1875:9:0"}],"name":"renounceOwnership","nameLocation":"1840:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1857:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1885:0:0"},"scope":112,"src":"1831:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2151:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2169:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2161:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2161:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2263:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2244:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2244:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2244:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1938:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2141:9:0"},"nodeType":"ModifierInvocation","src":"2141:9:0"}],"name":"transferOwnership","nameLocation":"2090:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2108:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2151:0:0"},"scope":112,"src":"2081:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2496:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2506:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2525:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2541:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2550:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2541:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2594:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2573:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2568:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2285:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2461:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2496:0:0"},"scope":112,"src":"2433:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1968:0","usedErrors":[]}],"src":"102:2521:0"},"id":0},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[122]},"id":123,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"138:203:1","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":122,"linearizedBaseContracts":[122],"name":"IERC1822Proxiable","nameLocation":"352:17:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"376:438:1","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":121,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"828:13:1","nodeType":"FunctionDefinition","parameters":{"id":117,"nodeType":"ParameterList","parameters":[],"src":"841:2:1"},"returnParameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":121,"src":"867:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"867:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"866:9:1"},"scope":122,"src":"819:57:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":123,"src":"342:536:1","usedErrors":[]}],"src":"113:766:1"},"id":1},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol","exportedSymbols":{"Address":[1118],"ERC1967Proxy":[159],"ERC1967Upgrade":[477],"IBeacon":[539],"IERC1822Proxiable":[122],"Proxy":[529],"StorageSlot":[1200]},"id":160,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":124,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"114:23:2"},{"absolutePath":"@openzeppelin/contracts/proxy/Proxy.sol","file":"../Proxy.sol","id":125,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":160,"sourceUnit":530,"src":"139:22:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol","file":"./ERC1967Upgrade.sol","id":126,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":160,"sourceUnit":478,"src":"162:30:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":128,"name":"Proxy","nodeType":"IdentifierPath","referencedDeclaration":529,"src":"592:5:2"},"id":129,"nodeType":"InheritanceSpecifier","src":"592:5:2"},{"baseName":{"id":130,"name":"ERC1967Upgrade","nodeType":"IdentifierPath","referencedDeclaration":477,"src":"599:14:2"},"id":131,"nodeType":"InheritanceSpecifier","src":"599:14:2"}],"canonicalName":"ERC1967Proxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"194:372:2","text":" @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n implementation address that can be changed. This address is stored in storage in the location specified by\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n implementation behind the proxy."},"fullyImplemented":true,"id":159,"linearizedBaseContracts":[159,477,529],"name":"ERC1967Proxy","nameLocation":"576:12:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":145,"nodeType":"Block","src":"1014:56:2","statements":[{"expression":{"arguments":[{"id":140,"name":"_logic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"1042:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":141,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"1050:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1057:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":139,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"1024:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1024:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"ExpressionStatement","src":"1024:39:2"}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"620:333:2","text":" @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n function call, and allows initializing the storage of the proxy like a Solidity constructor."},"id":146,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"mutability":"mutable","name":"_logic","nameLocation":"978:6:2","nodeType":"VariableDeclaration","scope":146,"src":"970:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"970:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":136,"mutability":"mutable","name":"_data","nameLocation":"999:5:2","nodeType":"VariableDeclaration","scope":146,"src":"986:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":135,"name":"bytes","nodeType":"ElementaryTypeName","src":"986:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"969:36:2"},"returnParameters":{"id":138,"nodeType":"ParameterList","parameters":[],"src":"1014:0:2"},"scope":159,"src":"958:112:2","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[494],"body":{"id":157,"nodeType":"Block","src":"1229:59:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":153,"name":"ERC1967Upgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"1246:14:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Upgrade_$477_$","typeString":"type(contract ERC1967Upgrade)"}},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_getImplementation","nodeType":"MemberAccess","referencedDeclaration":191,"src":"1246:33:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1246:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":152,"id":156,"nodeType":"Return","src":"1239:42:2"}]},"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"1076:67:2","text":" @dev Returns the current implementation address."},"id":158,"implemented":true,"kind":"function","modifiers":[],"name":"_implementation","nameLocation":"1157:15:2","nodeType":"FunctionDefinition","overrides":{"id":149,"nodeType":"OverrideSpecifier","overrides":[],"src":"1197:8:2"},"parameters":{"id":148,"nodeType":"ParameterList","parameters":[],"src":"1172:2:2"},"returnParameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"mutability":"mutable","name":"impl","nameLocation":"1223:4:2","nodeType":"VariableDeclaration","scope":158,"src":"1215:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"1215:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1214:14:2"},"scope":159,"src":"1148:140:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":160,"src":"567:723:2","usedErrors":[]}],"src":"114:1177:2"},"id":2},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol","exportedSymbols":{"Address":[1118],"ERC1967Upgrade":[477],"IBeacon":[539],"IERC1822Proxiable":[122],"StorageSlot":[1200]},"id":478,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":161,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"116:23:3"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":162,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":478,"sourceUnit":540,"src":"141:31:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"../../interfaces/draft-IERC1822.sol","id":163,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":478,"sourceUnit":123,"src":"173:45:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":164,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":478,"sourceUnit":1119,"src":"219:33:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":165,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":478,"sourceUnit":1201,"src":"253:37:3","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"ERC1967Upgrade","contractDependencies":[],"contractKind":"contract","documentation":{"id":166,"nodeType":"StructuredDocumentation","src":"292:236:3","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._\n @custom:oz-upgrades-unsafe-allow delegatecall"},"fullyImplemented":true,"id":477,"linearizedBaseContracts":[477],"name":"ERC1967Upgrade","nameLocation":"547:14:3","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":169,"mutability":"constant","name":"_ROLLBACK_SLOT","nameLocation":"672:14:3","nodeType":"VariableDeclaration","scope":477,"src":"647:108:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":167,"name":"bytes32","nodeType":"ElementaryTypeName","src":"647:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433","id":168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"689:66:3","typeDescriptions":{"typeIdentifier":"t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1","typeString":"int_const 3304...(69 digits omitted)...9347"},"value":"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"},"visibility":"private"},{"constant":true,"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"762:214:3","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."},"id":173,"mutability":"constant","name":"_IMPLEMENTATION_SLOT","nameLocation":"1007:20:3","nodeType":"VariableDeclaration","scope":477,"src":"981:115:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":171,"name":"bytes32","nodeType":"ElementaryTypeName","src":"981:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1030:66:3","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"anonymous":false,"documentation":{"id":174,"nodeType":"StructuredDocumentation","src":"1103:68:3","text":" @dev Emitted when the implementation is upgraded."},"id":178,"name":"Upgraded","nameLocation":"1182:8:3","nodeType":"EventDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":176,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"1207:14:3","nodeType":"VariableDeclaration","scope":178,"src":"1191:30:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":175,"name":"address","nodeType":"ElementaryTypeName","src":"1191:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1190:32:3"},"src":"1176:47:3"},{"body":{"id":190,"nodeType":"Block","src":"1363:78:3","statements":[{"expression":{"expression":{"arguments":[{"id":186,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"1407:20:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":184,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"1380:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1200_$","typeString":"type(library StorageSlot)"}},"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1166,"src":"1380:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1146_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1380:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1146_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":188,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1145,"src":"1380:54:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":183,"id":189,"nodeType":"Return","src":"1373:61:3"}]},"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"1229:67:3","text":" @dev Returns the current implementation address."},"id":191,"implemented":true,"kind":"function","modifiers":[],"name":"_getImplementation","nameLocation":"1310:18:3","nodeType":"FunctionDefinition","parameters":{"id":180,"nodeType":"ParameterList","parameters":[],"src":"1328:2:3"},"returnParameters":{"id":183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":191,"src":"1354:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":181,"name":"address","nodeType":"ElementaryTypeName","src":"1354:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1353:9:3"},"scope":477,"src":"1301:140:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":214,"nodeType":"Block","src":"1595:196:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":200,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"1632:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":198,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"1613:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1118_$","typeString":"type(library Address)"}},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":841,"src":"1613:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1613:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1652:47:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""},"value":"ERC1967: new implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""}],"id":197,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1605:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1605:95:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":204,"nodeType":"ExpressionStatement","src":"1605:95:3"},{"expression":{"id":212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":208,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"1737:20:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":205,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"1710:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1200_$","typeString":"type(library StorageSlot)"}},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1166,"src":"1710:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1146_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1710:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1146_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":210,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1145,"src":"1710:54:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":211,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"1767:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1710:74:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":213,"nodeType":"ExpressionStatement","src":"1710:74:3"}]},"documentation":{"id":192,"nodeType":"StructuredDocumentation","src":"1447:80:3","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":215,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1541:18:3","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":194,"mutability":"mutable","name":"newImplementation","nameLocation":"1568:17:3","nodeType":"VariableDeclaration","scope":215,"src":"1560:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":193,"name":"address","nodeType":"ElementaryTypeName","src":"1560:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1559:27:3"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[],"src":"1595:0:3"},"scope":477,"src":"1532:259:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":229,"nodeType":"Block","src":"1953:96:3","statements":[{"expression":{"arguments":[{"id":222,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"1982:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":221,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"1963:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1963:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":224,"nodeType":"ExpressionStatement","src":"1963:37:3"},{"eventCall":{"arguments":[{"id":226,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"2024:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":225,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"2015:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2015:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":228,"nodeType":"EmitStatement","src":"2010:32:3"}]},"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"1797:95:3","text":" @dev Perform implementation upgrade\n Emits an {Upgraded} event."},"id":230,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeTo","nameLocation":"1906:10:3","nodeType":"FunctionDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"newImplementation","nameLocation":"1925:17:3","nodeType":"VariableDeclaration","scope":230,"src":"1917:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"1917:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1916:27:3"},"returnParameters":{"id":220,"nodeType":"ParameterList","parameters":[],"src":"1953:0:3"},"scope":477,"src":"1897:152:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":259,"nodeType":"Block","src":"2311:167:3","statements":[{"expression":{"arguments":[{"id":241,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"2332:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":240,"name":"_upgradeTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"2321:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2321:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":243,"nodeType":"ExpressionStatement","src":"2321:29:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":244,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"2364:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2364:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2378:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":248,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"2383:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2364:28:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":258,"nodeType":"IfStatement","src":"2360:112:3","trueBody":{"id":257,"nodeType":"Block","src":"2394:78:3","statements":[{"expression":{"arguments":[{"id":253,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"2437:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":254,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"2456:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":250,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"2408:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1118_$","typeString":"type(library Address)"}},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1051,"src":"2408:28:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2408:53:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":256,"nodeType":"ExpressionStatement","src":"2408:53:3"}]}}]},"documentation":{"id":231,"nodeType":"StructuredDocumentation","src":"2055:123:3","text":" @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."},"id":260,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCall","nameLocation":"2192:17:3","nodeType":"FunctionDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":233,"mutability":"mutable","name":"newImplementation","nameLocation":"2227:17:3","nodeType":"VariableDeclaration","scope":260,"src":"2219:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":232,"name":"address","nodeType":"ElementaryTypeName","src":"2219:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":235,"mutability":"mutable","name":"data","nameLocation":"2267:4:3","nodeType":"VariableDeclaration","scope":260,"src":"2254:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":234,"name":"bytes","nodeType":"ElementaryTypeName","src":"2254:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":237,"mutability":"mutable","name":"forceCall","nameLocation":"2286:9:3","nodeType":"VariableDeclaration","scope":260,"src":"2281:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":236,"name":"bool","nodeType":"ElementaryTypeName","src":"2281:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2209:92:3"},"returnParameters":{"id":239,"nodeType":"ParameterList","parameters":[],"src":"2311:0:3"},"scope":477,"src":"2183:295:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":312,"nodeType":"Block","src":"2782:820:3","statements":[{"condition":{"expression":{"arguments":[{"id":272,"name":"_ROLLBACK_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"3123:14:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":270,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"3096:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1200_$","typeString":"type(library StorageSlot)"}},"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getBooleanSlot","nodeType":"MemberAccess","referencedDeclaration":1177,"src":"3096:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$1149_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.BooleanSlot storage pointer)"}},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3096:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1149_storage_ptr","typeString":"struct StorageSlot.BooleanSlot storage pointer"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1148,"src":"3096:48:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":310,"nodeType":"Block","src":"3214:382:3","statements":[{"clauses":[{"block":{"id":295,"nodeType":"Block","src":"3308:115:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":289,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"3334:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":290,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"3342:20:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3334:28:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3364:43:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""},"value":"ERC1967Upgrade: unsupported proxiableUUID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""}],"id":288,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3326:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3326:82:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":294,"nodeType":"ExpressionStatement","src":"3326:82:3"}]},"errorName":"","id":296,"nodeType":"TryCatchClause","parameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"slot","nameLocation":"3302:4:3","nodeType":"VariableDeclaration","scope":296,"src":"3294:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3294:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3293:14:3"},"src":"3285:138:3"},{"block":{"id":301,"nodeType":"Block","src":"3430:89:3","statements":[{"expression":{"arguments":[{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053","id":298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3455:48:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""},"value":"ERC1967Upgrade: new implementation is not UUPS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""}],"id":297,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3448:6:3","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3448:56:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":300,"nodeType":"ExpressionStatement","src":"3448:56:3"}]},"errorName":"","id":302,"nodeType":"TryCatchClause","src":"3424:95:3"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":281,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"3250:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":280,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"3232:17:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$122_$","typeString":"type(contract IERC1822Proxiable)"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3232:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$122","typeString":"contract IERC1822Proxiable"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":121,"src":"3232:50:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3232:52:3","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":303,"nodeType":"TryStatement","src":"3228:291:3"},{"expression":{"arguments":[{"id":305,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"3550:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":306,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"3569:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":307,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"3575:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":304,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"3532:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3532:53:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":309,"nodeType":"ExpressionStatement","src":"3532:53:3"}]},"id":311,"nodeType":"IfStatement","src":"3092:504:3","trueBody":{"id":279,"nodeType":"Block","src":"3146:62:3","statements":[{"expression":{"arguments":[{"id":276,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"3179:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":275,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"3160:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3160:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":278,"nodeType":"ExpressionStatement","src":"3160:37:3"}]}}]},"documentation":{"id":261,"nodeType":"StructuredDocumentation","src":"2484:161:3","text":" @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."},"id":313,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"2659:21:3","nodeType":"FunctionDefinition","parameters":{"id":268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"mutability":"mutable","name":"newImplementation","nameLocation":"2698:17:3","nodeType":"VariableDeclaration","scope":313,"src":"2690:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":262,"name":"address","nodeType":"ElementaryTypeName","src":"2690:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":265,"mutability":"mutable","name":"data","nameLocation":"2738:4:3","nodeType":"VariableDeclaration","scope":313,"src":"2725:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":264,"name":"bytes","nodeType":"ElementaryTypeName","src":"2725:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":267,"mutability":"mutable","name":"forceCall","nameLocation":"2757:9:3","nodeType":"VariableDeclaration","scope":313,"src":"2752:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":266,"name":"bool","nodeType":"ElementaryTypeName","src":"2752:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2680:92:3"},"returnParameters":{"id":269,"nodeType":"ParameterList","parameters":[],"src":"2782:0:3"},"scope":477,"src":"2650:952:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":314,"nodeType":"StructuredDocumentation","src":"3608:189:3","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."},"id":317,"mutability":"constant","name":"_ADMIN_SLOT","nameLocation":"3828:11:3","nodeType":"VariableDeclaration","scope":477,"src":"3802:106:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3802:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3842:66:3","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"anonymous":false,"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"3915:67:3","text":" @dev Emitted when the admin account has changed."},"id":324,"name":"AdminChanged","nameLocation":"3993:12:3","nodeType":"EventDefinition","parameters":{"id":323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"4014:13:3","nodeType":"VariableDeclaration","scope":324,"src":"4006:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":322,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"4037:8:3","nodeType":"VariableDeclaration","scope":324,"src":"4029:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"4029:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4005:41:3"},"src":"3987:60:3"},{"body":{"id":336,"nodeType":"Block","src":"4161:69:3","statements":[{"expression":{"expression":{"arguments":[{"id":332,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"4205:11:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":330,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"4178:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1200_$","typeString":"type(library StorageSlot)"}},"id":331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1166,"src":"4178:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1146_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4178:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1146_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":334,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1145,"src":"4178:45:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":329,"id":335,"nodeType":"Return","src":"4171:52:3"}]},"documentation":{"id":325,"nodeType":"StructuredDocumentation","src":"4053:50:3","text":" @dev Returns the current admin."},"id":337,"implemented":true,"kind":"function","modifiers":[],"name":"_getAdmin","nameLocation":"4117:9:3","nodeType":"FunctionDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[],"src":"4126:2:3"},"returnParameters":{"id":329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":337,"src":"4152:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":327,"name":"address","nodeType":"ElementaryTypeName","src":"4152:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4151:9:3"},"scope":477,"src":"4108:122:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":362,"nodeType":"Block","src":"4357:156:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":344,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"4375:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4395:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4387:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":345,"name":"address","nodeType":"ElementaryTypeName","src":"4387:7:3","typeDescriptions":{}}},"id":348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4387:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4375:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373","id":350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4399:40:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""},"value":"ERC1967: new admin is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""}],"id":343,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4367:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4367:73:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":352,"nodeType":"ExpressionStatement","src":"4367:73:3"},{"expression":{"id":360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":356,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"4477:11:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":353,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"4450:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1200_$","typeString":"type(library StorageSlot)"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1166,"src":"4450:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1146_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4450:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1146_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":358,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1145,"src":"4450:45:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":359,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"4498:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4450:56:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":361,"nodeType":"ExpressionStatement","src":"4450:56:3"}]},"documentation":{"id":338,"nodeType":"StructuredDocumentation","src":"4236:71:3","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":363,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4321:9:3","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"newAdmin","nameLocation":"4339:8:3","nodeType":"VariableDeclaration","scope":363,"src":"4331:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"4331:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4330:18:3"},"returnParameters":{"id":342,"nodeType":"ParameterList","parameters":[],"src":"4357:0:3"},"scope":477,"src":"4312:201:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":379,"nodeType":"Block","src":"4673:86:3","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":370,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"4701:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4701:11:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":372,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"4714:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":369,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"4688:12:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4688:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":374,"nodeType":"EmitStatement","src":"4683:40:3"},{"expression":{"arguments":[{"id":376,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"4743:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":375,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"4733:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4733:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":378,"nodeType":"ExpressionStatement","src":"4733:19:3"}]},"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"4519:100:3","text":" @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."},"id":380,"implemented":true,"kind":"function","modifiers":[],"name":"_changeAdmin","nameLocation":"4633:12:3","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"newAdmin","nameLocation":"4654:8:3","nodeType":"VariableDeclaration","scope":380,"src":"4646:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"4646:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4645:18:3"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"4673:0:3"},"scope":477,"src":"4624:135:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":381,"nodeType":"StructuredDocumentation","src":"4765:232:3","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."},"id":384,"mutability":"constant","name":"_BEACON_SLOT","nameLocation":"5028:12:3","nodeType":"VariableDeclaration","scope":477,"src":"5002:107:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":382,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5002:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5043:66:3","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"anonymous":false,"documentation":{"id":385,"nodeType":"StructuredDocumentation","src":"5116:60:3","text":" @dev Emitted when the beacon is upgraded."},"id":389,"name":"BeaconUpgraded","nameLocation":"5187:14:3","nodeType":"EventDefinition","parameters":{"id":388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":387,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"5218:6:3","nodeType":"VariableDeclaration","scope":389,"src":"5202:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"5202:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5201:24:3"},"src":"5181:45:3"},{"body":{"id":401,"nodeType":"Block","src":"5342:70:3","statements":[{"expression":{"expression":{"arguments":[{"id":397,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"5386:12:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":395,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"5359:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1200_$","typeString":"type(library StorageSlot)"}},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1166,"src":"5359:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1146_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5359:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1146_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":399,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1145,"src":"5359:46:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":394,"id":400,"nodeType":"Return","src":"5352:53:3"}]},"documentation":{"id":390,"nodeType":"StructuredDocumentation","src":"5232:51:3","text":" @dev Returns the current beacon."},"id":402,"implemented":true,"kind":"function","modifiers":[],"name":"_getBeacon","nameLocation":"5297:10:3","nodeType":"FunctionDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[],"src":"5307:2:3"},"returnParameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":402,"src":"5333:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"5333:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5332:9:3"},"scope":477,"src":"5288:124:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"5541:324:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":411,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"5578:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":409,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"5559:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1118_$","typeString":"type(library Address)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":841,"src":"5559:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5559:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374","id":413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5590:39:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""},"value":"ERC1967: new beacon is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""}],"id":408,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5551:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5551:79:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":415,"nodeType":"ExpressionStatement","src":"5551:79:3"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":420,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"5688:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":419,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"5680:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$539_$","typeString":"type(contract IBeacon)"}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5680:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$539","typeString":"contract IBeacon"}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":538,"src":"5680:33:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5680:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":417,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"5661:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1118_$","typeString":"type(library Address)"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":841,"src":"5661:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5661:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5730:50:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""},"value":"ERC1967: beacon implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""}],"id":416,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5640:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5640:150:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":427,"nodeType":"ExpressionStatement","src":"5640:150:3"},{"expression":{"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":431,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"5827:12:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":428,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"5800:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1200_$","typeString":"type(library StorageSlot)"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1166,"src":"5800:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1146_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5800:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1146_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":433,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1145,"src":"5800:46:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":434,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"5849:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5800:58:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":436,"nodeType":"ExpressionStatement","src":"5800:58:3"}]},"documentation":{"id":403,"nodeType":"StructuredDocumentation","src":"5418:71:3","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":438,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5503:10:3","nodeType":"FunctionDefinition","parameters":{"id":406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":405,"mutability":"mutable","name":"newBeacon","nameLocation":"5522:9:3","nodeType":"VariableDeclaration","scope":438,"src":"5514:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":404,"name":"address","nodeType":"ElementaryTypeName","src":"5514:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5513:19:3"},"returnParameters":{"id":407,"nodeType":"ParameterList","parameters":[],"src":"5541:0:3"},"scope":477,"src":"5494:371:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":475,"nodeType":"Block","src":"6294:217:3","statements":[{"expression":{"arguments":[{"id":449,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"6315:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":448,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"6304:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6304:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":451,"nodeType":"ExpressionStatement","src":"6304:21:3"},{"eventCall":{"arguments":[{"id":453,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"6355:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":452,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"6340:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6340:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":455,"nodeType":"EmitStatement","src":"6335:30:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":456,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"6379:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6379:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6393:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6379:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":460,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"6398:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6379:28:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":474,"nodeType":"IfStatement","src":"6375:130:3","trueBody":{"id":473,"nodeType":"Block","src":"6409:96:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":466,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"6460:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":465,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"6452:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$539_$","typeString":"type(contract IBeacon)"}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6452:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$539","typeString":"contract IBeacon"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":538,"src":"6452:33:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6452:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":470,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"6489:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":462,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"6423:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1118_$","typeString":"type(library Address)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1051,"src":"6423:28:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6423:71:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":472,"nodeType":"ExpressionStatement","src":"6423:71:3"}]}}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"5871:292:3","text":" @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."},"id":476,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeBeaconToAndCall","nameLocation":"6177:23:3","nodeType":"FunctionDefinition","parameters":{"id":446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"mutability":"mutable","name":"newBeacon","nameLocation":"6218:9:3","nodeType":"VariableDeclaration","scope":476,"src":"6210:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":440,"name":"address","nodeType":"ElementaryTypeName","src":"6210:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":443,"mutability":"mutable","name":"data","nameLocation":"6250:4:3","nodeType":"VariableDeclaration","scope":476,"src":"6237:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":442,"name":"bytes","nodeType":"ElementaryTypeName","src":"6237:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":445,"mutability":"mutable","name":"forceCall","nameLocation":"6269:9:3","nodeType":"VariableDeclaration","scope":476,"src":"6264:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":444,"name":"bool","nodeType":"ElementaryTypeName","src":"6264:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6200:84:3"},"returnParameters":{"id":447,"nodeType":"ParameterList","parameters":[],"src":"6294:0:3"},"scope":477,"src":"6168:343:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":478,"src":"529:5984:3","usedErrors":[]}],"src":"116:6398:3"},"id":3},"@openzeppelin/contracts/proxy/Proxy.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/Proxy.sol","exportedSymbols":{"Proxy":[529]},"id":530,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":479,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:4"},{"abstract":true,"baseContracts":[],"canonicalName":"Proxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":480,"nodeType":"StructuredDocumentation","src":"124:598:4","text":" @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."},"fullyImplemented":false,"id":529,"linearizedBaseContracts":[529],"name":"Proxy","nameLocation":"741:5:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":487,"nodeType":"Block","src":"1008:835:4","statements":[{"AST":{"nodeType":"YulBlock","src":"1027:810:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1280:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1283:1:4","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"1286:12:4"},"nodeType":"YulFunctionCall","src":"1286:14:4"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1267:12:4"},"nodeType":"YulFunctionCall","src":"1267:34:4"},"nodeType":"YulExpressionStatement","src":"1267:34:4"},{"nodeType":"YulVariableDeclaration","src":"1428:74:4","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"1455:3:4"},"nodeType":"YulFunctionCall","src":"1455:5:4"},{"name":"implementation","nodeType":"YulIdentifier","src":"1462:14:4"},{"kind":"number","nodeType":"YulLiteral","src":"1478:1:4","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"1481:12:4"},"nodeType":"YulFunctionCall","src":"1481:14:4"},{"kind":"number","nodeType":"YulLiteral","src":"1497:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1500:1:4","type":"","value":"0"}],"functionName":{"name":"delegatecall","nodeType":"YulIdentifier","src":"1442:12:4"},"nodeType":"YulFunctionCall","src":"1442:60:4"},"variables":[{"name":"result","nodeType":"YulTypedName","src":"1432:6:4","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1570:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1573:1:4","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1576:14:4"},"nodeType":"YulFunctionCall","src":"1576:16:4"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"1555:14:4"},"nodeType":"YulFunctionCall","src":"1555:38:4"},"nodeType":"YulExpressionStatement","src":"1555:38:4"},{"cases":[{"body":{"nodeType":"YulBlock","src":"1688:59:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1713:1:4","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1716:14:4"},"nodeType":"YulFunctionCall","src":"1716:16:4"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1706:6:4"},"nodeType":"YulFunctionCall","src":"1706:27:4"},"nodeType":"YulExpressionStatement","src":"1706:27:4"}]},"nodeType":"YulCase","src":"1681:66:4","value":{"kind":"number","nodeType":"YulLiteral","src":"1686:1:4","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"1768:59:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1793:1:4","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1796:14:4"},"nodeType":"YulFunctionCall","src":"1796:16:4"}],"functionName":{"name":"return","nodeType":"YulIdentifier","src":"1786:6:4"},"nodeType":"YulFunctionCall","src":"1786:27:4"},"nodeType":"YulExpressionStatement","src":"1786:27:4"}]},"nodeType":"YulCase","src":"1760:67:4","value":"default"}],"expression":{"name":"result","nodeType":"YulIdentifier","src":"1614:6:4"},"nodeType":"YulSwitch","src":"1607:220:4"}]},"evmVersion":"london","externalReferences":[{"declaration":483,"isOffset":false,"isSlot":false,"src":"1462:14:4","valueSize":1}],"id":486,"nodeType":"InlineAssembly","src":"1018:819:4"}]},"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"753:190:4","text":" @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."},"id":488,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"957:9:4","nodeType":"FunctionDefinition","parameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":483,"mutability":"mutable","name":"implementation","nameLocation":"975:14:4","nodeType":"VariableDeclaration","scope":488,"src":"967:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"967:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"966:24:4"},"returnParameters":{"id":485,"nodeType":"ParameterList","parameters":[],"src":"1008:0:4"},"scope":529,"src":"948:895:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"1849:173:4","text":" @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n and {_fallback} should delegate."},"id":494,"implemented":false,"kind":"function","modifiers":[],"name":"_implementation","nameLocation":"2036:15:4","nodeType":"FunctionDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[],"src":"2051:2:4"},"returnParameters":{"id":493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":494,"src":"2085:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":491,"name":"address","nodeType":"ElementaryTypeName","src":"2085:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2084:9:4"},"scope":529,"src":"2027:67:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":506,"nodeType":"Block","src":"2360:72:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":498,"name":"_beforeFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"2370:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2370:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":500,"nodeType":"ExpressionStatement","src":"2370:17:4"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":502,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"2407:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2407:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":501,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"2397:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2397:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":505,"nodeType":"ExpressionStatement","src":"2397:28:4"}]},"documentation":{"id":495,"nodeType":"StructuredDocumentation","src":"2100:217:4","text":" @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."},"id":507,"implemented":true,"kind":"function","modifiers":[],"name":"_fallback","nameLocation":"2331:9:4","nodeType":"FunctionDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[],"src":"2340:2:4"},"returnParameters":{"id":497,"nodeType":"ParameterList","parameters":[],"src":"2360:0:4"},"scope":529,"src":"2322:110:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":514,"nodeType":"Block","src":"2665:28:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":511,"name":"_fallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"2675:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2675:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":513,"nodeType":"ExpressionStatement","src":"2675:11:4"}]},"documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"2438:186:4","text":" @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."},"id":515,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[],"src":"2637:2:4"},"returnParameters":{"id":510,"nodeType":"ParameterList","parameters":[],"src":"2665:0:4"},"scope":529,"src":"2629:64:4","stateMutability":"payable","virtual":true,"visibility":"external"},{"body":{"id":522,"nodeType":"Block","src":"2888:28:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":519,"name":"_fallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"2898:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2898:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":521,"nodeType":"ExpressionStatement","src":"2898:11:4"}]},"documentation":{"id":516,"nodeType":"StructuredDocumentation","src":"2699:149:4","text":" @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n is empty."},"id":523,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":517,"nodeType":"ParameterList","parameters":[],"src":"2860:2:4"},"returnParameters":{"id":518,"nodeType":"ParameterList","parameters":[],"src":"2888:0:4"},"scope":529,"src":"2853:63:4","stateMutability":"payable","virtual":true,"visibility":"external"},{"body":{"id":527,"nodeType":"Block","src":"3242:2:4","statements":[]},"documentation":{"id":524,"nodeType":"StructuredDocumentation","src":"2922:271:4","text":" @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n call, or as part of the Solidity `fallback` or `receive` functions.\n If overridden should call `super._beforeFallback()`."},"id":528,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeFallback","nameLocation":"3207:15:4","nodeType":"FunctionDefinition","parameters":{"id":525,"nodeType":"ParameterList","parameters":[],"src":"3222:2:4"},"returnParameters":{"id":526,"nodeType":"ParameterList","parameters":[],"src":"3242:0:4"},"scope":529,"src":"3198:46:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":530,"src":"723:2523:4","usedErrors":[]}],"src":"99:3148:4"},"id":4},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[539]},"id":540,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":531,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"93:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":532,"nodeType":"StructuredDocumentation","src":"118:79:5","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":539,"linearizedBaseContracts":[539],"name":"IBeacon","nameLocation":"208:7:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":533,"nodeType":"StructuredDocumentation","src":"222:162:5","text":" @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."},"functionSelector":"5c60da1b","id":538,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"398:14:5","nodeType":"FunctionDefinition","parameters":{"id":534,"nodeType":"ParameterList","parameters":[],"src":"412:2:5"},"returnParameters":{"id":537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":538,"src":"438:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":535,"name":"address","nodeType":"ElementaryTypeName","src":"438:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"437:9:5"},"scope":539,"src":"389:58:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":540,"src":"198:251:5","usedErrors":[]}],"src":"93:357:5"},"id":5},"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol","exportedSymbols":{"Address":[1118],"Context":[1140],"ERC1967Proxy":[159],"ERC1967Upgrade":[477],"IBeacon":[539],"IERC1822Proxiable":[122],"Ownable":[112],"Proxy":[529],"ProxyAdmin":[675],"StorageSlot":[1200],"TransparentUpgradeableProxy":[823]},"id":676,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":541,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:6"},{"absolutePath":"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol","file":"./TransparentUpgradeableProxy.sol","id":542,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":676,"sourceUnit":824,"src":"126:43:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"../../access/Ownable.sol","id":543,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":676,"sourceUnit":113,"src":"170:34:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":545,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":112,"src":"458:7:6"},"id":546,"nodeType":"InheritanceSpecifier","src":"458:7:6"}],"canonicalName":"ProxyAdmin","contractDependencies":[],"contractKind":"contract","documentation":{"id":544,"nodeType":"StructuredDocumentation","src":"206:228:6","text":" @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\n explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}."},"fullyImplemented":true,"id":675,"linearizedBaseContracts":[675,112,1140],"name":"ProxyAdmin","nameLocation":"444:10:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":579,"nodeType":"Block","src":"740:332:6","statements":[{"assignments":[556,558],"declarations":[{"constant":false,"id":556,"mutability":"mutable","name":"success","nameLocation":"913:7:6","nodeType":"VariableDeclaration","scope":579,"src":"908:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":555,"name":"bool","nodeType":"ElementaryTypeName","src":"908:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":558,"mutability":"mutable","name":"returndata","nameLocation":"935:10:6","nodeType":"VariableDeclaration","scope":579,"src":"922:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":557,"name":"bytes","nodeType":"ElementaryTypeName","src":"922:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":566,"initialValue":{"arguments":[{"hexValue":"5c60da1b","id":564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"975:13:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29","typeString":"literal_string hex\"5c60da1b\""}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29","typeString":"literal_string hex\"5c60da1b\""}],"expression":{"arguments":[{"id":561,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"957:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_TransparentUpgradeableProxy_$823","typeString":"contract TransparentUpgradeableProxy"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TransparentUpgradeableProxy_$823","typeString":"contract TransparentUpgradeableProxy"}],"id":560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"949:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":559,"name":"address","nodeType":"ElementaryTypeName","src":"949:7:6","typeDescriptions":{}}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"949:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"949:25:6","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"949:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"907:82:6"},{"expression":{"arguments":[{"id":568,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"1007:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":567,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"999:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"999:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":570,"nodeType":"ExpressionStatement","src":"999:16:6"},{"expression":{"arguments":[{"id":573,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"1043:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1056:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":574,"name":"address","nodeType":"ElementaryTypeName","src":"1056:7:6","typeDescriptions":{}}}],"id":576,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1055:9:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}],"expression":{"id":571,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1032:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"1032:10:6","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1032:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"functionReturnParameters":554,"id":578,"nodeType":"Return","src":"1025:40:6"}]},"documentation":{"id":547,"nodeType":"StructuredDocumentation","src":"472:158:6","text":" @dev Returns the current implementation of `proxy`.\n Requirements:\n - This contract must be the admin of `proxy`."},"functionSelector":"204e1c7a","id":580,"implemented":true,"kind":"function","modifiers":[],"name":"getProxyImplementation","nameLocation":"644:22:6","nodeType":"FunctionDefinition","parameters":{"id":551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":550,"mutability":"mutable","name":"proxy","nameLocation":"695:5:6","nodeType":"VariableDeclaration","scope":580,"src":"667:33:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_TransparentUpgradeableProxy_$823","typeString":"contract TransparentUpgradeableProxy"},"typeName":{"id":549,"nodeType":"UserDefinedTypeName","pathNode":{"id":548,"name":"TransparentUpgradeableProxy","nodeType":"IdentifierPath","referencedDeclaration":823,"src":"667:27:6"},"referencedDeclaration":823,"src":"667:27:6","typeDescriptions":{"typeIdentifier":"t_contract$_TransparentUpgradeableProxy_$823","typeString":"contract TransparentUpgradeableProxy"}},"visibility":"internal"}],"src":"666:35:6"},"returnParameters":{"id":554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":580,"src":"731:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":552,"name":"address","nodeType":"ElementaryTypeName","src":"731:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"730:9:6"},"scope":675,"src":"635:437:6","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":613,"nodeType":"Block","src":"1328:323:6","statements":[{"assignments":[590,592],"declarations":[{"constant":false,"id":590,"mutability":"mutable","name":"success","nameLocation":"1492:7:6","nodeType":"VariableDeclaration","scope":613,"src":"1487:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":589,"name":"bool","nodeType":"ElementaryTypeName","src":"1487:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":592,"mutability":"mutable","name":"returndata","nameLocation":"1514:10:6","nodeType":"VariableDeclaration","scope":613,"src":"1501:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":591,"name":"bytes","nodeType":"ElementaryTypeName","src":"1501:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":600,"initialValue":{"arguments":[{"hexValue":"f851a440","id":598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"1554:13:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7","typeString":"literal_string hex\"f851a440\""}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7","typeString":"literal_string hex\"f851a440\""}],"expression":{"arguments":[{"id":595,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"1536:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_TransparentUpgradeableProxy_$823","typeString":"contract TransparentUpgradeableProxy"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TransparentUpgradeableProxy_$823","typeString":"contract TransparentUpgradeableProxy"}],"id":594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":593,"name":"address","nodeType":"ElementaryTypeName","src":"1528:7:6","typeDescriptions":{}}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1528:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"1528:25:6","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1528:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1486:82:6"},{"expression":{"arguments":[{"id":602,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"1586:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":601,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1578:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1578:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":604,"nodeType":"ExpressionStatement","src":"1578:16:6"},{"expression":{"arguments":[{"id":607,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"1622:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1635:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"1635:7:6","typeDescriptions":{}}}],"id":610,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1634:9:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}],"expression":{"id":605,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1611:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"1611:10:6","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1611:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"functionReturnParameters":588,"id":612,"nodeType":"Return","src":"1604:40:6"}]},"documentation":{"id":581,"nodeType":"StructuredDocumentation","src":"1078:149:6","text":" @dev Returns the current admin of `proxy`.\n Requirements:\n - This contract must be the admin of `proxy`."},"functionSelector":"f3b7dead","id":614,"implemented":true,"kind":"function","modifiers":[],"name":"getProxyAdmin","nameLocation":"1241:13:6","nodeType":"FunctionDefinition","parameters":{"id":585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":584,"mutability":"mutable","name":"proxy","nameLocation":"1283:5:6","nodeType":"VariableDeclaration","scope":614,"src":"1255:33:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_TransparentUpgradeableProxy_$823","typeString":"contract TransparentUpgradeableProxy"},"typeName":{"id":583,"nodeType":"UserDefinedTypeName","pathNode":{"id":582,"name":"TransparentUpgradeableProxy","nodeType":"IdentifierPath","referencedDeclaration":823,"src":"1255:27:6"},"referencedDeclaration":823,"src":"1255:27:6","typeDescriptions":{"typeIdentifier":"t_contract$_TransparentUpgradeableProxy_$823","typeString":"contract TransparentUpgradeableProxy"}},"visibility":"internal"}],"src":"1254:35:6"},"returnParameters":{"id":588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":614,"src":"1319:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":586,"name":"address","nodeType":"ElementaryTypeName","src":"1319:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1318:9:6"},"scope":675,"src":"1232:419:6","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":631,"nodeType":"Block","src":"1929:44:6","statements":[{"expression":{"arguments":[{"id":628,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"1957:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":625,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"1939:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_TransparentUpgradeableProxy_$823","typeString":"contract TransparentUpgradeableProxy"}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"changeAdmin","nodeType":"MemberAccess","referencedDeclaration":757,"src":"1939:17:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1939:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":630,"nodeType":"ExpressionStatement","src":"1939:27:6"}]},"documentation":{"id":615,"nodeType":"StructuredDocumentation","src":"1657:163:6","text":" @dev Changes the admin of `proxy` to `newAdmin`.\n Requirements:\n - This contract must be the current admin of `proxy`."},"functionSelector":"7eff275e","id":632,"implemented":true,"kind":"function","modifiers":[{"id":623,"kind":"modifierInvocation","modifierName":{"id":622,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1919:9:6"},"nodeType":"ModifierInvocation","src":"1919:9:6"}],"name":"changeProxyAdmin","nameLocation":"1834:16:6","nodeType":"FunctionDefinition","parameters":{"id":621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":618,"mutability":"mutable","name":"proxy","nameLocation":"1879:5:6","nodeType":"VariableDeclaration","scope":632,"src":"1851:33:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_TransparentUpgradeableProxy_$823","typeString":"contract TransparentUpgradeableProxy"},"typeName":{"id":617,"nodeType":"UserDefinedTypeName","pathNode":{"id":616,"name":"TransparentUpgradeableProxy","nodeType":"IdentifierPath","referencedDeclaration":823,"src":"1851:27:6"},"referencedDeclaration":823,"src":"1851:27:6","typeDescriptions":{"typeIdentifier":"t_contract$_TransparentUpgradeableProxy_$823","typeString":"contract TransparentUpgradeableProxy"}},"visibility":"internal"},{"constant":false,"id":620,"mutability":"mutable","name":"newAdmin","nameLocation":"1894:8:6","nodeType":"VariableDeclaration","scope":632,"src":"1886:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":619,"name":"address","nodeType":"ElementaryTypeName","src":"1886:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1850:53:6"},"returnParameters":{"id":624,"nodeType":"ParameterList","parameters":[],"src":"1929:0:6"},"scope":675,"src":"1825:148:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":649,"nodeType":"Block","src":"2279:48:6","statements":[{"expression":{"arguments":[{"id":646,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"2305:14:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":643,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"2289:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_TransparentUpgradeableProxy_$823","typeString":"contract TransparentUpgradeableProxy"}},"id":645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"upgradeTo","nodeType":"MemberAccess","referencedDeclaration":775,"src":"2289:15:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2289:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":648,"nodeType":"ExpressionStatement","src":"2289:31:6"}]},"documentation":{"id":633,"nodeType":"StructuredDocumentation","src":"1979:194:6","text":" @dev Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}.\n Requirements:\n - This contract must be the admin of `proxy`."},"functionSelector":"99a88ec4","id":650,"implemented":true,"kind":"function","modifiers":[{"id":641,"kind":"modifierInvocation","modifierName":{"id":640,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2269:9:6"},"nodeType":"ModifierInvocation","src":"2269:9:6"}],"name":"upgrade","nameLocation":"2187:7:6","nodeType":"FunctionDefinition","parameters":{"id":639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":636,"mutability":"mutable","name":"proxy","nameLocation":"2223:5:6","nodeType":"VariableDeclaration","scope":650,"src":"2195:33:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_TransparentUpgradeableProxy_$823","typeString":"contract TransparentUpgradeableProxy"},"typeName":{"id":635,"nodeType":"UserDefinedTypeName","pathNode":{"id":634,"name":"TransparentUpgradeableProxy","nodeType":"IdentifierPath","referencedDeclaration":823,"src":"2195:27:6"},"referencedDeclaration":823,"src":"2195:27:6","typeDescriptions":{"typeIdentifier":"t_contract$_TransparentUpgradeableProxy_$823","typeString":"contract TransparentUpgradeableProxy"}},"visibility":"internal"},{"constant":false,"id":638,"mutability":"mutable","name":"implementation","nameLocation":"2238:14:6","nodeType":"VariableDeclaration","scope":650,"src":"2230:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":637,"name":"address","nodeType":"ElementaryTypeName","src":"2230:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2194:59:6"},"returnParameters":{"id":642,"nodeType":"ParameterList","parameters":[],"src":"2279:0:6"},"scope":675,"src":"2178:149:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":673,"nodeType":"Block","src":"2758:79:6","statements":[{"expression":{"arguments":[{"id":669,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"2809:14:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":670,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"2825:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":663,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"2768:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_TransparentUpgradeableProxy_$823","typeString":"contract TransparentUpgradeableProxy"}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":792,"src":"2768:22:6","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory) payable external"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":666,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2798:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"2798:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2768:40:6","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$returns$__$value","typeString":"function (address,bytes memory) payable external"}},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2768:62:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":672,"nodeType":"ExpressionStatement","src":"2768:62:6"}]},"documentation":{"id":651,"nodeType":"StructuredDocumentation","src":"2333:255:6","text":" @dev Upgrades `proxy` to `implementation` and calls a function on the new implementation. See\n {TransparentUpgradeableProxy-upgradeToAndCall}.\n Requirements:\n - This contract must be the admin of `proxy`."},"functionSelector":"9623609d","id":674,"implemented":true,"kind":"function","modifiers":[{"id":661,"kind":"modifierInvocation","modifierName":{"id":660,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2748:9:6"},"nodeType":"ModifierInvocation","src":"2748:9:6"}],"name":"upgradeAndCall","nameLocation":"2602:14:6","nodeType":"FunctionDefinition","parameters":{"id":659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":654,"mutability":"mutable","name":"proxy","nameLocation":"2654:5:6","nodeType":"VariableDeclaration","scope":674,"src":"2626:33:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_TransparentUpgradeableProxy_$823","typeString":"contract TransparentUpgradeableProxy"},"typeName":{"id":653,"nodeType":"UserDefinedTypeName","pathNode":{"id":652,"name":"TransparentUpgradeableProxy","nodeType":"IdentifierPath","referencedDeclaration":823,"src":"2626:27:6"},"referencedDeclaration":823,"src":"2626:27:6","typeDescriptions":{"typeIdentifier":"t_contract$_TransparentUpgradeableProxy_$823","typeString":"contract TransparentUpgradeableProxy"}},"visibility":"internal"},{"constant":false,"id":656,"mutability":"mutable","name":"implementation","nameLocation":"2677:14:6","nodeType":"VariableDeclaration","scope":674,"src":"2669:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"2669:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":658,"mutability":"mutable","name":"data","nameLocation":"2714:4:6","nodeType":"VariableDeclaration","scope":674,"src":"2701:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":657,"name":"bytes","nodeType":"ElementaryTypeName","src":"2701:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2616:108:6"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[],"src":"2758:0:6"},"scope":675,"src":"2593:244:6","stateMutability":"payable","virtual":true,"visibility":"public"}],"scope":676,"src":"435:2404:6","usedErrors":[]}],"src":"101:2739:6"},"id":6},"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol","exportedSymbols":{"Address":[1118],"ERC1967Proxy":[159],"ERC1967Upgrade":[477],"IBeacon":[539],"IERC1822Proxiable":[122],"Proxy":[529],"StorageSlot":[1200],"TransparentUpgradeableProxy":[823]},"id":824,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":677,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"133:23:7"},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol","file":"../ERC1967/ERC1967Proxy.sol","id":678,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":824,"sourceUnit":160,"src":"158:37:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":680,"name":"ERC1967Proxy","nodeType":"IdentifierPath","referencedDeclaration":159,"src":"1689:12:7"},"id":681,"nodeType":"InheritanceSpecifier","src":"1689:12:7"}],"canonicalName":"TransparentUpgradeableProxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"197:1451:7","text":" @dev This contract implements a proxy that is upgradeable by an admin.\n To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\n clashing], which can potentially be used in an attack, this contract uses the\n https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\n things that go hand in hand:\n 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\n that call matches one of the admin functions exposed by the proxy itself.\n 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\n implementation. If the admin tries to call a function on the implementation it will fail with an error that says\n \"admin cannot fallback to proxy target\".\n These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\n the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\n to sudden errors when trying to call a function from the proxy implementation.\n Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\n you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy."},"fullyImplemented":true,"id":823,"linearizedBaseContracts":[823,159,477,529],"name":"TransparentUpgradeableProxy","nameLocation":"1658:27:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":699,"nodeType":"Block","src":"2053:37:7","statements":[{"expression":{"arguments":[{"id":696,"name":"admin_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"2076:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":695,"name":"_changeAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"2063:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2063:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":698,"nodeType":"ExpressionStatement","src":"2063:20:7"}]},"documentation":{"id":682,"nodeType":"StructuredDocumentation","src":"1708:210:7","text":" @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\n optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}."},"id":700,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":691,"name":"_logic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"2038:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":692,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"2046:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":693,"kind":"baseConstructorSpecifier","modifierName":{"id":690,"name":"ERC1967Proxy","nodeType":"IdentifierPath","referencedDeclaration":159,"src":"2025:12:7"},"nodeType":"ModifierInvocation","src":"2025:27:7"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"mutability":"mutable","name":"_logic","nameLocation":"1952:6:7","nodeType":"VariableDeclaration","scope":700,"src":"1944:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":683,"name":"address","nodeType":"ElementaryTypeName","src":"1944:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":686,"mutability":"mutable","name":"admin_","nameLocation":"1976:6:7","nodeType":"VariableDeclaration","scope":700,"src":"1968:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":685,"name":"address","nodeType":"ElementaryTypeName","src":"1968:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":688,"mutability":"mutable","name":"_data","nameLocation":"2005:5:7","nodeType":"VariableDeclaration","scope":700,"src":"1992:18:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":687,"name":"bytes","nodeType":"ElementaryTypeName","src":"1992:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1934:82:7"},"returnParameters":{"id":694,"nodeType":"ParameterList","parameters":[],"src":"2053:0:7"},"scope":823,"src":"1923:167:7","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":715,"nodeType":"Block","src":"2250:115:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":703,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2264:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2264:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":705,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"2278:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2278:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2264:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":713,"nodeType":"Block","src":"2323:36:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":710,"name":"_fallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"2337:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2337:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":712,"nodeType":"ExpressionStatement","src":"2337:11:7"}]},"id":714,"nodeType":"IfStatement","src":"2260:99:7","trueBody":{"id":709,"nodeType":"Block","src":"2291:26:7","statements":[{"id":708,"nodeType":"PlaceholderStatement","src":"2305:1:7"}]}}]},"documentation":{"id":701,"nodeType":"StructuredDocumentation","src":"2096:130:7","text":" @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin."},"id":716,"name":"ifAdmin","nameLocation":"2240:7:7","nodeType":"ModifierDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[],"src":"2247:2:7"},"src":"2231:134:7","virtual":false,"visibility":"internal"},{"body":{"id":729,"nodeType":"Block","src":"2866:37:7","statements":[{"expression":{"id":727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":724,"name":"admin_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"2876:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":725,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"2885:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2885:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2876:20:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":728,"nodeType":"ExpressionStatement","src":"2876:20:7"}]},"documentation":{"id":717,"nodeType":"StructuredDocumentation","src":"2371:431:7","text":" @dev Returns the current admin.\n NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"functionSelector":"f851a440","id":730,"implemented":true,"kind":"function","modifiers":[{"id":720,"kind":"modifierInvocation","modifierName":{"id":719,"name":"ifAdmin","nodeType":"IdentifierPath","referencedDeclaration":716,"src":"2833:7:7"},"nodeType":"ModifierInvocation","src":"2833:7:7"}],"name":"admin","nameLocation":"2816:5:7","nodeType":"FunctionDefinition","parameters":{"id":718,"nodeType":"ParameterList","parameters":[],"src":"2821:2:7"},"returnParameters":{"id":723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":722,"mutability":"mutable","name":"admin_","nameLocation":"2858:6:7","nodeType":"VariableDeclaration","scope":730,"src":"2850:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":721,"name":"address","nodeType":"ElementaryTypeName","src":"2850:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2849:16:7"},"scope":823,"src":"2807:96:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":743,"nodeType":"Block","src":"3440:52:7","statements":[{"expression":{"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":738,"name":"implementation_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"3450:15:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":739,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[158],"referencedDeclaration":158,"src":"3468:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3468:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3450:35:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":742,"nodeType":"ExpressionStatement","src":"3450:35:7"}]},"documentation":{"id":731,"nodeType":"StructuredDocumentation","src":"2909:449:7","text":" @dev Returns the current implementation.\n NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"},"functionSelector":"5c60da1b","id":744,"implemented":true,"kind":"function","modifiers":[{"id":734,"kind":"modifierInvocation","modifierName":{"id":733,"name":"ifAdmin","nodeType":"IdentifierPath","referencedDeclaration":716,"src":"3398:7:7"},"nodeType":"ModifierInvocation","src":"3398:7:7"}],"name":"implementation","nameLocation":"3372:14:7","nodeType":"FunctionDefinition","parameters":{"id":732,"nodeType":"ParameterList","parameters":[],"src":"3386:2:7"},"returnParameters":{"id":737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":736,"mutability":"mutable","name":"implementation_","nameLocation":"3423:15:7","nodeType":"VariableDeclaration","scope":744,"src":"3415:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":735,"name":"address","nodeType":"ElementaryTypeName","src":"3415:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3414:25:7"},"scope":823,"src":"3363:129:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":756,"nodeType":"Block","src":"3761:39:7","statements":[{"expression":{"arguments":[{"id":753,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"3784:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":752,"name":"_changeAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"3771:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3771:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":755,"nodeType":"ExpressionStatement","src":"3771:22:7"}]},"documentation":{"id":745,"nodeType":"StructuredDocumentation","src":"3498:194:7","text":" @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event.\n NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."},"functionSelector":"8f283970","id":757,"implemented":true,"kind":"function","modifiers":[{"id":750,"kind":"modifierInvocation","modifierName":{"id":749,"name":"ifAdmin","nodeType":"IdentifierPath","referencedDeclaration":716,"src":"3753:7:7"},"nodeType":"ModifierInvocation","src":"3753:7:7"}],"name":"changeAdmin","nameLocation":"3706:11:7","nodeType":"FunctionDefinition","parameters":{"id":748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"mutability":"mutable","name":"newAdmin","nameLocation":"3726:8:7","nodeType":"VariableDeclaration","scope":757,"src":"3718:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":746,"name":"address","nodeType":"ElementaryTypeName","src":"3718:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3717:18:7"},"returnParameters":{"id":751,"nodeType":"ParameterList","parameters":[],"src":"3761:0:7"},"scope":823,"src":"3697:103:7","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"body":{"id":774,"nodeType":"Block","src":"4023:71:7","statements":[{"expression":{"arguments":[{"id":766,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"4051:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"","id":769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4076:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4070:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":767,"name":"bytes","nodeType":"ElementaryTypeName","src":"4070:5:7","typeDescriptions":{}}},"id":770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4070:9:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4081:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":765,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"4033:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4033:54:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":773,"nodeType":"ExpressionStatement","src":"4033:54:7"}]},"documentation":{"id":758,"nodeType":"StructuredDocumentation","src":"3806:149:7","text":" @dev Upgrade the implementation of the proxy.\n NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."},"functionSelector":"3659cfe6","id":775,"implemented":true,"kind":"function","modifiers":[{"id":763,"kind":"modifierInvocation","modifierName":{"id":762,"name":"ifAdmin","nodeType":"IdentifierPath","referencedDeclaration":716,"src":"4015:7:7"},"nodeType":"ModifierInvocation","src":"4015:7:7"}],"name":"upgradeTo","nameLocation":"3969:9:7","nodeType":"FunctionDefinition","parameters":{"id":761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":760,"mutability":"mutable","name":"newImplementation","nameLocation":"3987:17:7","nodeType":"VariableDeclaration","scope":775,"src":"3979:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":759,"name":"address","nodeType":"ElementaryTypeName","src":"3979:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3978:27:7"},"returnParameters":{"id":764,"nodeType":"ParameterList","parameters":[],"src":"4023:0:7"},"scope":823,"src":"3960:134:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":791,"nodeType":"Block","src":"4569:65:7","statements":[{"expression":{"arguments":[{"id":786,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"4597:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":787,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"4616:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"hexValue":"74727565","id":788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4622:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":785,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"4579:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4579:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":790,"nodeType":"ExpressionStatement","src":"4579:48:7"}]},"documentation":{"id":776,"nodeType":"StructuredDocumentation","src":"4100:365:7","text":" @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\n by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\n proxied contract.\n NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."},"functionSelector":"4f1ef286","id":792,"implemented":true,"kind":"function","modifiers":[{"id":783,"kind":"modifierInvocation","modifierName":{"id":782,"name":"ifAdmin","nodeType":"IdentifierPath","referencedDeclaration":716,"src":"4561:7:7"},"nodeType":"ModifierInvocation","src":"4561:7:7"}],"name":"upgradeToAndCall","nameLocation":"4479:16:7","nodeType":"FunctionDefinition","parameters":{"id":781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":778,"mutability":"mutable","name":"newImplementation","nameLocation":"4504:17:7","nodeType":"VariableDeclaration","scope":792,"src":"4496:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":777,"name":"address","nodeType":"ElementaryTypeName","src":"4496:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":780,"mutability":"mutable","name":"data","nameLocation":"4538:4:7","nodeType":"VariableDeclaration","scope":792,"src":"4523:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":779,"name":"bytes","nodeType":"ElementaryTypeName","src":"4523:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4495:48:7"},"returnParameters":{"id":784,"nodeType":"ParameterList","parameters":[],"src":"4569:0:7"},"scope":823,"src":"4470:164:7","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":801,"nodeType":"Block","src":"4753:35:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":798,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"4770:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4770:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":797,"id":800,"nodeType":"Return","src":"4763:18:7"}]},"documentation":{"id":793,"nodeType":"StructuredDocumentation","src":"4640:50:7","text":" @dev Returns the current admin."},"id":802,"implemented":true,"kind":"function","modifiers":[],"name":"_admin","nameLocation":"4704:6:7","nodeType":"FunctionDefinition","parameters":{"id":794,"nodeType":"ParameterList","parameters":[],"src":"4710:2:7"},"returnParameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":802,"src":"4744:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":795,"name":"address","nodeType":"ElementaryTypeName","src":"4744:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4743:9:7"},"scope":823,"src":"4695:93:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[528],"body":{"id":821,"nodeType":"Block","src":"4962:154:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":808,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4980:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4980:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":810,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"4994:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4994:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4980:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73706172656e745570677261646561626c6550726f78793a2061646d696e2063616e6e6f742066616c6c6261636b20746f2070726f787920746172676574","id":813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5007:68:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d","typeString":"literal_string \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\""},"value":"TransparentUpgradeableProxy: admin cannot fallback to proxy target"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d","typeString":"literal_string \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\""}],"id":807,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4972:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4972:104:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":815,"nodeType":"ExpressionStatement","src":"4972:104:7"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":816,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"5086:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_TransparentUpgradeableProxy_$823_$","typeString":"type(contract super TransparentUpgradeableProxy)"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_beforeFallback","nodeType":"MemberAccess","referencedDeclaration":528,"src":"5086:21:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5086:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":820,"nodeType":"ExpressionStatement","src":"5086:23:7"}]},"documentation":{"id":803,"nodeType":"StructuredDocumentation","src":"4794:110:7","text":" @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}."},"id":822,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeFallback","nameLocation":"4918:15:7","nodeType":"FunctionDefinition","overrides":{"id":805,"nodeType":"OverrideSpecifier","overrides":[],"src":"4953:8:7"},"parameters":{"id":804,"nodeType":"ParameterList","parameters":[],"src":"4933:2:7"},"returnParameters":{"id":806,"nodeType":"ParameterList","parameters":[],"src":"4962:0:7"},"scope":823,"src":"4909:207:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":824,"src":"1649:3469:7","usedErrors":[]}],"src":"133:4986:7"},"id":7},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1118]},"id":1119,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":825,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":826,"nodeType":"StructuredDocumentation","src":"126:67:8","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1118,"linearizedBaseContracts":[1118],"name":"Address","nameLocation":"202:7:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":840,"nodeType":"Block","src":"1241:254:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":834,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"1465:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1465:12:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1465:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":833,"id":839,"nodeType":"Return","src":"1458:30:8"}]},"documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"216:954:8","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":841,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:8","nodeType":"FunctionDefinition","parameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"account","nameLocation":"1203:7:8","nodeType":"VariableDeclaration","scope":841,"src":"1195:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":828,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:8"},"returnParameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":841,"src":"1235:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":831,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:8"},"scope":1118,"src":"1175:320:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":874,"nodeType":"Block","src":"2483:241:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":852,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1118","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1118","typeString":"library Address"}],"id":851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":850,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:8","typeDescriptions":{}}},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2501:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2501:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":855,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"2526:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":849,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2493:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":859,"nodeType":"ExpressionStatement","src":"2493:73:8"},{"assignments":[861,null],"declarations":[{"constant":false,"id":861,"mutability":"mutable","name":"success","nameLocation":"2583:7:8","nodeType":"VariableDeclaration","scope":874,"src":"2578:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":860,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":868,"initialValue":{"arguments":[{"hexValue":"","id":866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":862,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"2596:9:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2596:14:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":864,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"2618:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2596:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:8"},{"expression":{"arguments":[{"id":870,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"2647:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":869,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2639:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":873,"nodeType":"ExpressionStatement","src":"2639:78:8"}]},"documentation":{"id":842,"nodeType":"StructuredDocumentation","src":"1501:906:8","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":875,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:8","nodeType":"FunctionDefinition","parameters":{"id":847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":844,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:8","nodeType":"VariableDeclaration","scope":875,"src":"2431:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":843,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:8","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":846,"mutability":"mutable","name":"amount","nameLocation":"2466:6:8","nodeType":"VariableDeclaration","scope":875,"src":"2458:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":845,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:8"},"returnParameters":{"id":848,"nodeType":"ParameterList","parameters":[],"src":"2483:0:8"},"scope":1118,"src":"2412:312:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":891,"nodeType":"Block","src":"3555:84:8","statements":[{"expression":{"arguments":[{"id":886,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"3585:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":887,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"3593:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3599:32:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":885,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[892,912],"referencedDeclaration":912,"src":"3572:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3572:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":884,"id":890,"nodeType":"Return","src":"3565:67:8"}]},"documentation":{"id":876,"nodeType":"StructuredDocumentation","src":"2730:731:8","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":892,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:8","nodeType":"FunctionDefinition","parameters":{"id":881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":878,"mutability":"mutable","name":"target","nameLocation":"3496:6:8","nodeType":"VariableDeclaration","scope":892,"src":"3488:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":877,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":880,"mutability":"mutable","name":"data","nameLocation":"3517:4:8","nodeType":"VariableDeclaration","scope":892,"src":"3504:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":879,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:8"},"returnParameters":{"id":884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":892,"src":"3541:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":882,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:8"},"scope":1118,"src":"3466:173:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":911,"nodeType":"Block","src":"4008:76:8","statements":[{"expression":{"arguments":[{"id":905,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"4047:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":906,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"4055:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4061:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":908,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"4064:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":904,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[932,982],"referencedDeclaration":982,"src":"4025:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4025:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":903,"id":910,"nodeType":"Return","src":"4018:59:8"}]},"documentation":{"id":893,"nodeType":"StructuredDocumentation","src":"3645:211:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":912,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3870:12:8","nodeType":"FunctionDefinition","parameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":895,"mutability":"mutable","name":"target","nameLocation":"3900:6:8","nodeType":"VariableDeclaration","scope":912,"src":"3892:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":894,"name":"address","nodeType":"ElementaryTypeName","src":"3892:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":897,"mutability":"mutable","name":"data","nameLocation":"3929:4:8","nodeType":"VariableDeclaration","scope":912,"src":"3916:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":896,"name":"bytes","nodeType":"ElementaryTypeName","src":"3916:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":899,"mutability":"mutable","name":"errorMessage","nameLocation":"3957:12:8","nodeType":"VariableDeclaration","scope":912,"src":"3943:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":898,"name":"string","nodeType":"ElementaryTypeName","src":"3943:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3882:93:8"},"returnParameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":912,"src":"3994:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":901,"name":"bytes","nodeType":"ElementaryTypeName","src":"3994:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3993:14:8"},"scope":1118,"src":"3861:223:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":931,"nodeType":"Block","src":"4589:111:8","statements":[{"expression":{"arguments":[{"id":925,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"4628:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":926,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"4636:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"4642:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4649:43:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":924,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[932,982],"referencedDeclaration":982,"src":"4606:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4606:87:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":923,"id":930,"nodeType":"Return","src":"4599:94:8"}]},"documentation":{"id":913,"nodeType":"StructuredDocumentation","src":"4090:351:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":932,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4455:21:8","nodeType":"FunctionDefinition","parameters":{"id":920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":915,"mutability":"mutable","name":"target","nameLocation":"4494:6:8","nodeType":"VariableDeclaration","scope":932,"src":"4486:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":914,"name":"address","nodeType":"ElementaryTypeName","src":"4486:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":917,"mutability":"mutable","name":"data","nameLocation":"4523:4:8","nodeType":"VariableDeclaration","scope":932,"src":"4510:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":916,"name":"bytes","nodeType":"ElementaryTypeName","src":"4510:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":919,"mutability":"mutable","name":"value","nameLocation":"4545:5:8","nodeType":"VariableDeclaration","scope":932,"src":"4537:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":918,"name":"uint256","nodeType":"ElementaryTypeName","src":"4537:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4476:80:8"},"returnParameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":932,"src":"4575:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":921,"name":"bytes","nodeType":"ElementaryTypeName","src":"4575:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4574:14:8"},"scope":1118,"src":"4446:254:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":981,"nodeType":"Block","src":"5127:320:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":949,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5153:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1118","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1118","typeString":"library Address"}],"id":948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5145:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":947,"name":"address","nodeType":"ElementaryTypeName","src":"5145:7:8","typeDescriptions":{}}},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5145:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5145:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"5170:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5145:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5177:40:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":946,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5137:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5137:81:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":956,"nodeType":"ExpressionStatement","src":"5137:81:8"},{"expression":{"arguments":[{"arguments":[{"id":959,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"5247:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":958,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"5236:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5236:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5256:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":957,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5228:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5228:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":963,"nodeType":"ExpressionStatement","src":"5228:60:8"},{"assignments":[965,967],"declarations":[{"constant":false,"id":965,"mutability":"mutable","name":"success","nameLocation":"5305:7:8","nodeType":"VariableDeclaration","scope":981,"src":"5300:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":964,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":967,"mutability":"mutable","name":"returndata","nameLocation":"5327:10:8","nodeType":"VariableDeclaration","scope":981,"src":"5314:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":966,"name":"bytes","nodeType":"ElementaryTypeName","src":"5314:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":974,"initialValue":{"arguments":[{"id":972,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"5367:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":968,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"5341:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5341:11:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"5360:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5341:25:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5341:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5299:73:8"},{"expression":{"arguments":[{"id":976,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"5406:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":977,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"5415:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":978,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"5427:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":975,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"5389:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5389:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":945,"id":980,"nodeType":"Return","src":"5382:58:8"}]},"documentation":{"id":933,"nodeType":"StructuredDocumentation","src":"4706:237:8","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":982,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4957:21:8","nodeType":"FunctionDefinition","parameters":{"id":942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":935,"mutability":"mutable","name":"target","nameLocation":"4996:6:8","nodeType":"VariableDeclaration","scope":982,"src":"4988:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":934,"name":"address","nodeType":"ElementaryTypeName","src":"4988:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":937,"mutability":"mutable","name":"data","nameLocation":"5025:4:8","nodeType":"VariableDeclaration","scope":982,"src":"5012:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":936,"name":"bytes","nodeType":"ElementaryTypeName","src":"5012:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":939,"mutability":"mutable","name":"value","nameLocation":"5047:5:8","nodeType":"VariableDeclaration","scope":982,"src":"5039:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":938,"name":"uint256","nodeType":"ElementaryTypeName","src":"5039:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":941,"mutability":"mutable","name":"errorMessage","nameLocation":"5076:12:8","nodeType":"VariableDeclaration","scope":982,"src":"5062:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":940,"name":"string","nodeType":"ElementaryTypeName","src":"5062:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4978:116:8"},"returnParameters":{"id":945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":982,"src":"5113:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":943,"name":"bytes","nodeType":"ElementaryTypeName","src":"5113:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5112:14:8"},"scope":1118,"src":"4948:499:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":998,"nodeType":"Block","src":"5724:97:8","statements":[{"expression":{"arguments":[{"id":993,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"5760:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":994,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"5768:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5774:39:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":992,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[999,1034],"referencedDeclaration":1034,"src":"5741:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5741:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":991,"id":997,"nodeType":"Return","src":"5734:80:8"}]},"documentation":{"id":983,"nodeType":"StructuredDocumentation","src":"5453:166:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":999,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5633:18:8","nodeType":"FunctionDefinition","parameters":{"id":988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"mutability":"mutable","name":"target","nameLocation":"5660:6:8","nodeType":"VariableDeclaration","scope":999,"src":"5652:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":984,"name":"address","nodeType":"ElementaryTypeName","src":"5652:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":987,"mutability":"mutable","name":"data","nameLocation":"5681:4:8","nodeType":"VariableDeclaration","scope":999,"src":"5668:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":986,"name":"bytes","nodeType":"ElementaryTypeName","src":"5668:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5651:35:8"},"returnParameters":{"id":991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":999,"src":"5710:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":989,"name":"bytes","nodeType":"ElementaryTypeName","src":"5710:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5709:14:8"},"scope":1118,"src":"5624:197:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1033,"nodeType":"Block","src":"6163:228:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1013,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"6192:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1012,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"6181:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6181:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":1015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6201:38:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":1011,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6173:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6173:67:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1017,"nodeType":"ExpressionStatement","src":"6173:67:8"},{"assignments":[1019,1021],"declarations":[{"constant":false,"id":1019,"mutability":"mutable","name":"success","nameLocation":"6257:7:8","nodeType":"VariableDeclaration","scope":1033,"src":"6252:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1018,"name":"bool","nodeType":"ElementaryTypeName","src":"6252:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"returndata","nameLocation":"6279:10:8","nodeType":"VariableDeclaration","scope":1033,"src":"6266:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1020,"name":"bytes","nodeType":"ElementaryTypeName","src":"6266:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1026,"initialValue":{"arguments":[{"id":1024,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"6311:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1022,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"6293:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6293:17:8","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6293:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6251:65:8"},{"expression":{"arguments":[{"id":1028,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"6350:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1029,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"6359:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1030,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"6371:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1027,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"6333:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6333:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1010,"id":1032,"nodeType":"Return","src":"6326:58:8"}]},"documentation":{"id":1000,"nodeType":"StructuredDocumentation","src":"5827:173:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1034,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6014:18:8","nodeType":"FunctionDefinition","parameters":{"id":1007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1002,"mutability":"mutable","name":"target","nameLocation":"6050:6:8","nodeType":"VariableDeclaration","scope":1034,"src":"6042:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1001,"name":"address","nodeType":"ElementaryTypeName","src":"6042:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1004,"mutability":"mutable","name":"data","nameLocation":"6079:4:8","nodeType":"VariableDeclaration","scope":1034,"src":"6066:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1003,"name":"bytes","nodeType":"ElementaryTypeName","src":"6066:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1006,"mutability":"mutable","name":"errorMessage","nameLocation":"6107:12:8","nodeType":"VariableDeclaration","scope":1034,"src":"6093:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1005,"name":"string","nodeType":"ElementaryTypeName","src":"6093:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6032:93:8"},"returnParameters":{"id":1010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1009,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1034,"src":"6149:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1008,"name":"bytes","nodeType":"ElementaryTypeName","src":"6149:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6148:14:8"},"scope":1118,"src":"6005:386:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1050,"nodeType":"Block","src":"6667:101:8","statements":[{"expression":{"arguments":[{"id":1045,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"6705:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1046,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"6713:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6719:41:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1044,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1051,1086],"referencedDeclaration":1086,"src":"6684:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6684:77:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1043,"id":1049,"nodeType":"Return","src":"6677:84:8"}]},"documentation":{"id":1035,"nodeType":"StructuredDocumentation","src":"6397:168:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1051,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6579:20:8","nodeType":"FunctionDefinition","parameters":{"id":1040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"target","nameLocation":"6608:6:8","nodeType":"VariableDeclaration","scope":1051,"src":"6600:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1036,"name":"address","nodeType":"ElementaryTypeName","src":"6600:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1039,"mutability":"mutable","name":"data","nameLocation":"6629:4:8","nodeType":"VariableDeclaration","scope":1051,"src":"6616:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1038,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6599:35:8"},"returnParameters":{"id":1043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1051,"src":"6653:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1041,"name":"bytes","nodeType":"ElementaryTypeName","src":"6653:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6652:14:8"},"scope":1118,"src":"6570:198:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1085,"nodeType":"Block","src":"7109:232:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1065,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"7138:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1064,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"7127:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7127:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374","id":1067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7147:40:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""},"value":"Address: delegate call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""}],"id":1063,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7119:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7119:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1069,"nodeType":"ExpressionStatement","src":"7119:69:8"},{"assignments":[1071,1073],"declarations":[{"constant":false,"id":1071,"mutability":"mutable","name":"success","nameLocation":"7205:7:8","nodeType":"VariableDeclaration","scope":1085,"src":"7200:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1070,"name":"bool","nodeType":"ElementaryTypeName","src":"7200:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1073,"mutability":"mutable","name":"returndata","nameLocation":"7227:10:8","nodeType":"VariableDeclaration","scope":1085,"src":"7214:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1072,"name":"bytes","nodeType":"ElementaryTypeName","src":"7214:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1078,"initialValue":{"arguments":[{"id":1076,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"7261:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1074,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"7241:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7241:19:8","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7241:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7199:67:8"},{"expression":{"arguments":[{"id":1080,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"7300:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1081,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"7309:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1082,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"7321:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1079,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"7283:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7283:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1062,"id":1084,"nodeType":"Return","src":"7276:58:8"}]},"documentation":{"id":1052,"nodeType":"StructuredDocumentation","src":"6774:175:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1086,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6963:20:8","nodeType":"FunctionDefinition","parameters":{"id":1059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1054,"mutability":"mutable","name":"target","nameLocation":"7001:6:8","nodeType":"VariableDeclaration","scope":1086,"src":"6993:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1053,"name":"address","nodeType":"ElementaryTypeName","src":"6993:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1056,"mutability":"mutable","name":"data","nameLocation":"7030:4:8","nodeType":"VariableDeclaration","scope":1086,"src":"7017:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1055,"name":"bytes","nodeType":"ElementaryTypeName","src":"7017:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1058,"mutability":"mutable","name":"errorMessage","nameLocation":"7058:12:8","nodeType":"VariableDeclaration","scope":1086,"src":"7044:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1057,"name":"string","nodeType":"ElementaryTypeName","src":"7044:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6983:93:8"},"returnParameters":{"id":1062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1061,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1086,"src":"7095:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1060,"name":"bytes","nodeType":"ElementaryTypeName","src":"7095:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7094:14:8"},"scope":1118,"src":"6954:387:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1116,"nodeType":"Block","src":"7721:582:8","statements":[{"condition":{"id":1098,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"7735:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1114,"nodeType":"Block","src":"7792:505:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1102,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"7876:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7876:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7876:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1112,"nodeType":"Block","src":"8234:53:8","statements":[{"expression":{"arguments":[{"id":1109,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"8259:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1108,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8252:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8252:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1111,"nodeType":"ExpressionStatement","src":"8252:20:8"}]},"id":1113,"nodeType":"IfStatement","src":"7872:415:8","trueBody":{"id":1107,"nodeType":"Block","src":"7899:329:8","statements":[{"AST":{"nodeType":"YulBlock","src":"8069:145:8","statements":[{"nodeType":"YulVariableDeclaration","src":"8091:40:8","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"8120:10:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8114:5:8"},"nodeType":"YulFunctionCall","src":"8114:17:8"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8095:15:8","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8163:2:8","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"8167:10:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8159:3:8"},"nodeType":"YulFunctionCall","src":"8159:19:8"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"8180:15:8"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8152:6:8"},"nodeType":"YulFunctionCall","src":"8152:44:8"},"nodeType":"YulExpressionStatement","src":"8152:44:8"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1091,"isOffset":false,"isSlot":false,"src":"8120:10:8","valueSize":1},{"declaration":1091,"isOffset":false,"isSlot":false,"src":"8167:10:8","valueSize":1}],"id":1106,"nodeType":"InlineAssembly","src":"8060:154:8"}]}}]},"id":1115,"nodeType":"IfStatement","src":"7731:566:8","trueBody":{"id":1101,"nodeType":"Block","src":"7744:42:8","statements":[{"expression":{"id":1099,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"7765:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1097,"id":1100,"nodeType":"Return","src":"7758:17:8"}]}}]},"documentation":{"id":1087,"nodeType":"StructuredDocumentation","src":"7347:209:8","text":" @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"},"id":1117,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"7570:16:8","nodeType":"FunctionDefinition","parameters":{"id":1094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1089,"mutability":"mutable","name":"success","nameLocation":"7601:7:8","nodeType":"VariableDeclaration","scope":1117,"src":"7596:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1088,"name":"bool","nodeType":"ElementaryTypeName","src":"7596:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1091,"mutability":"mutable","name":"returndata","nameLocation":"7631:10:8","nodeType":"VariableDeclaration","scope":1117,"src":"7618:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1090,"name":"bytes","nodeType":"ElementaryTypeName","src":"7618:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1093,"mutability":"mutable","name":"errorMessage","nameLocation":"7665:12:8","nodeType":"VariableDeclaration","scope":1117,"src":"7651:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1092,"name":"string","nodeType":"ElementaryTypeName","src":"7651:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7586:97:8"},"returnParameters":{"id":1097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1117,"src":"7707:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1095,"name":"bytes","nodeType":"ElementaryTypeName","src":"7707:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7706:14:8"},"scope":1118,"src":"7561:742:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1119,"src":"194:8111:8","usedErrors":[]}],"src":"101:8205:8"},"id":8},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1140]},"id":1141,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1120,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:9"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1121,"nodeType":"StructuredDocumentation","src":"111:496:9","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1140,"linearizedBaseContracts":[1140],"name":"Context","nameLocation":"626:7:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1129,"nodeType":"Block","src":"702:34:9","statements":[{"expression":{"expression":{"id":1126,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1125,"id":1128,"nodeType":"Return","src":"712:17:9"}]},"id":1130,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:9","nodeType":"FunctionDefinition","parameters":{"id":1122,"nodeType":"ParameterList","parameters":[],"src":"659:2:9"},"returnParameters":{"id":1125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1130,"src":"693:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1123,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:9"},"scope":1140,"src":"640:96:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1138,"nodeType":"Block","src":"809:32:9","statements":[{"expression":{"expression":{"id":1135,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1134,"id":1137,"nodeType":"Return","src":"819:15:9"}]},"id":1139,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:9","nodeType":"FunctionDefinition","parameters":{"id":1131,"nodeType":"ParameterList","parameters":[],"src":"759:2:9"},"returnParameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1139,"src":"793:14:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1132,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:9"},"scope":1140,"src":"742:99:9","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1141,"src":"608:235:9","usedErrors":[]}],"src":"86:758:9"},"id":9},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1200]},"id":1201,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1142,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1143,"nodeType":"StructuredDocumentation","src":"130:1148:10","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._"},"fullyImplemented":true,"id":1200,"linearizedBaseContracts":[1200],"name":"StorageSlot","nameLocation":"1287:11:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1146,"members":[{"constant":false,"id":1145,"mutability":"mutable","name":"value","nameLocation":"1342:5:10","nodeType":"VariableDeclaration","scope":1146,"src":"1334:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1144,"name":"address","nodeType":"ElementaryTypeName","src":"1334:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1312:11:10","nodeType":"StructDefinition","scope":1200,"src":"1305:49:10","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1149,"members":[{"constant":false,"id":1148,"mutability":"mutable","name":"value","nameLocation":"1394:5:10","nodeType":"VariableDeclaration","scope":1149,"src":"1389:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1147,"name":"bool","nodeType":"ElementaryTypeName","src":"1389:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1367:11:10","nodeType":"StructDefinition","scope":1200,"src":"1360:46:10","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1152,"members":[{"constant":false,"id":1151,"mutability":"mutable","name":"value","nameLocation":"1449:5:10","nodeType":"VariableDeclaration","scope":1152,"src":"1441:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1150,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1441:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1419:11:10","nodeType":"StructDefinition","scope":1200,"src":"1412:49:10","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1155,"members":[{"constant":false,"id":1154,"mutability":"mutable","name":"value","nameLocation":"1504:5:10","nodeType":"VariableDeclaration","scope":1155,"src":"1496:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1153,"name":"uint256","nodeType":"ElementaryTypeName","src":"1496:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1474:11:10","nodeType":"StructDefinition","scope":1200,"src":"1467:49:10","visibility":"public"},{"body":{"id":1165,"nodeType":"Block","src":"1698:106:10","statements":[{"AST":{"nodeType":"YulBlock","src":"1760:38:10","statements":[{"nodeType":"YulAssignment","src":"1774:14:10","value":{"name":"slot","nodeType":"YulIdentifier","src":"1784:4:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"1774:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1162,"isOffset":false,"isSlot":true,"src":"1774:6:10","suffix":"slot","valueSize":1},{"declaration":1158,"isOffset":false,"isSlot":false,"src":"1784:4:10","valueSize":1}],"id":1164,"nodeType":"InlineAssembly","src":"1751:47:10"}]},"documentation":{"id":1156,"nodeType":"StructuredDocumentation","src":"1522:87:10","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1166,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1623:14:10","nodeType":"FunctionDefinition","parameters":{"id":1159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1158,"mutability":"mutable","name":"slot","nameLocation":"1646:4:10","nodeType":"VariableDeclaration","scope":1166,"src":"1638:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1157,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1638:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1637:14:10"},"returnParameters":{"id":1163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1162,"mutability":"mutable","name":"r","nameLocation":"1695:1:10","nodeType":"VariableDeclaration","scope":1166,"src":"1675:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1146_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1161,"nodeType":"UserDefinedTypeName","pathNode":{"id":1160,"name":"AddressSlot","nodeType":"IdentifierPath","referencedDeclaration":1146,"src":"1675:11:10"},"referencedDeclaration":1146,"src":"1675:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1146_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1674:23:10"},"scope":1200,"src":"1614:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1176,"nodeType":"Block","src":"1986:106:10","statements":[{"AST":{"nodeType":"YulBlock","src":"2048:38:10","statements":[{"nodeType":"YulAssignment","src":"2062:14:10","value":{"name":"slot","nodeType":"YulIdentifier","src":"2072:4:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2062:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1173,"isOffset":false,"isSlot":true,"src":"2062:6:10","suffix":"slot","valueSize":1},{"declaration":1169,"isOffset":false,"isSlot":false,"src":"2072:4:10","valueSize":1}],"id":1175,"nodeType":"InlineAssembly","src":"2039:47:10"}]},"documentation":{"id":1167,"nodeType":"StructuredDocumentation","src":"1810:87:10","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":1177,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1911:14:10","nodeType":"FunctionDefinition","parameters":{"id":1170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1169,"mutability":"mutable","name":"slot","nameLocation":"1934:4:10","nodeType":"VariableDeclaration","scope":1177,"src":"1926:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1926:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1925:14:10"},"returnParameters":{"id":1174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1173,"mutability":"mutable","name":"r","nameLocation":"1983:1:10","nodeType":"VariableDeclaration","scope":1177,"src":"1963:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1149_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1172,"nodeType":"UserDefinedTypeName","pathNode":{"id":1171,"name":"BooleanSlot","nodeType":"IdentifierPath","referencedDeclaration":1149,"src":"1963:11:10"},"referencedDeclaration":1149,"src":"1963:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1149_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"1962:23:10"},"scope":1200,"src":"1902:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1187,"nodeType":"Block","src":"2274:106:10","statements":[{"AST":{"nodeType":"YulBlock","src":"2336:38:10","statements":[{"nodeType":"YulAssignment","src":"2350:14:10","value":{"name":"slot","nodeType":"YulIdentifier","src":"2360:4:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2350:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1184,"isOffset":false,"isSlot":true,"src":"2350:6:10","suffix":"slot","valueSize":1},{"declaration":1180,"isOffset":false,"isSlot":false,"src":"2360:4:10","valueSize":1}],"id":1186,"nodeType":"InlineAssembly","src":"2327:47:10"}]},"documentation":{"id":1178,"nodeType":"StructuredDocumentation","src":"2098:87:10","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":1188,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2199:14:10","nodeType":"FunctionDefinition","parameters":{"id":1181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1180,"mutability":"mutable","name":"slot","nameLocation":"2222:4:10","nodeType":"VariableDeclaration","scope":1188,"src":"2214:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1179,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2214:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2213:14:10"},"returnParameters":{"id":1185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1184,"mutability":"mutable","name":"r","nameLocation":"2271:1:10","nodeType":"VariableDeclaration","scope":1188,"src":"2251:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1152_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1183,"nodeType":"UserDefinedTypeName","pathNode":{"id":1182,"name":"Bytes32Slot","nodeType":"IdentifierPath","referencedDeclaration":1152,"src":"2251:11:10"},"referencedDeclaration":1152,"src":"2251:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1152_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2250:23:10"},"scope":1200,"src":"2190:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1198,"nodeType":"Block","src":"2562:106:10","statements":[{"AST":{"nodeType":"YulBlock","src":"2624:38:10","statements":[{"nodeType":"YulAssignment","src":"2638:14:10","value":{"name":"slot","nodeType":"YulIdentifier","src":"2648:4:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2638:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1195,"isOffset":false,"isSlot":true,"src":"2638:6:10","suffix":"slot","valueSize":1},{"declaration":1191,"isOffset":false,"isSlot":false,"src":"2648:4:10","valueSize":1}],"id":1197,"nodeType":"InlineAssembly","src":"2615:47:10"}]},"documentation":{"id":1189,"nodeType":"StructuredDocumentation","src":"2386:87:10","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":1199,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2487:14:10","nodeType":"FunctionDefinition","parameters":{"id":1192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1191,"mutability":"mutable","name":"slot","nameLocation":"2510:4:10","nodeType":"VariableDeclaration","scope":1199,"src":"2502:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1190,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2502:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2501:14:10"},"returnParameters":{"id":1196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1195,"mutability":"mutable","name":"r","nameLocation":"2559:1:10","nodeType":"VariableDeclaration","scope":1199,"src":"2539:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1155_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1194,"nodeType":"UserDefinedTypeName","pathNode":{"id":1193,"name":"Uint256Slot","nodeType":"IdentifierPath","referencedDeclaration":1155,"src":"2539:11:10"},"referencedDeclaration":1155,"src":"2539:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1155_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2538:23:10"},"scope":1200,"src":"2478:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1201,"src":"1279:1391:10","usedErrors":[]}],"src":"105:2566:10"},"id":10},"contracts/Box.sol":{"ast":{"absolutePath":"contracts/Box.sol","exportedSymbols":{"Box":[1239]},"id":1240,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1202,"literals":["solidity","^","0.8",".8"],"nodeType":"PragmaDirective","src":"32:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"Box","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1239,"linearizedBaseContracts":[1239],"name":"Box","nameLocation":"101:3:11","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1204,"mutability":"mutable","name":"value","nameLocation":"128:5:11","nodeType":"VariableDeclaration","scope":1239,"src":"111:22:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1203,"name":"uint256","nodeType":"ElementaryTypeName","src":"111:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"anonymous":false,"id":1208,"name":"valueChanged","nameLocation":"145:12:11","nodeType":"EventDefinition","parameters":{"id":1207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1206,"indexed":false,"mutability":"mutable","name":"newVale","nameLocation":"166:7:11","nodeType":"VariableDeclaration","scope":1208,"src":"158:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1205,"name":"uint256","nodeType":"ElementaryTypeName","src":"158:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"157:17:11"},"src":"139:36:11"},{"body":{"id":1221,"nodeType":"Block","src":"221:70:11","statements":[{"expression":{"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"231:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1214,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"239:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"231:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1216,"nodeType":"ExpressionStatement","src":"231:16:11"},{"eventCall":{"arguments":[{"id":1218,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"275:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1217,"name":"valueChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"262:12:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"262:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1220,"nodeType":"EmitStatement","src":"257:27:11"}]},"functionSelector":"6057361d","id":1222,"implemented":true,"kind":"function","modifiers":[],"name":"store","nameLocation":"190:5:11","nodeType":"FunctionDefinition","parameters":{"id":1211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1210,"mutability":"mutable","name":"newValue","nameLocation":"204:8:11","nodeType":"VariableDeclaration","scope":1222,"src":"196:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1209,"name":"uint256","nodeType":"ElementaryTypeName","src":"196:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"195:18:11"},"returnParameters":{"id":1212,"nodeType":"ParameterList","parameters":[],"src":"221:0:11"},"scope":1239,"src":"181:110:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1229,"nodeType":"Block","src":"347:29:11","statements":[{"expression":{"id":1227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"364:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1226,"id":1228,"nodeType":"Return","src":"357:12:11"}]},"functionSelector":"2e64cec1","id":1230,"implemented":true,"kind":"function","modifiers":[],"name":"retrieve","nameLocation":"306:8:11","nodeType":"FunctionDefinition","parameters":{"id":1223,"nodeType":"ParameterList","parameters":[],"src":"314:2:11"},"returnParameters":{"id":1226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1230,"src":"338:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1224,"name":"uint256","nodeType":"ElementaryTypeName","src":"338:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"337:9:11"},"scope":1239,"src":"297:79:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1237,"nodeType":"Block","src":"437:29:11","statements":[{"expression":{"hexValue":"312e30","id":1235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"454:5:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_e6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3","typeString":"literal_string \"1.0\""},"value":"1.0"},"functionReturnParameters":1234,"id":1236,"nodeType":"Return","src":"447:12:11"}]},"functionSelector":"54fd4d50","id":1238,"implemented":true,"kind":"function","modifiers":[],"name":"version","nameLocation":"391:7:11","nodeType":"FunctionDefinition","parameters":{"id":1231,"nodeType":"ParameterList","parameters":[],"src":"398:2:11"},"returnParameters":{"id":1234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1238,"src":"422:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1232,"name":"string","nodeType":"ElementaryTypeName","src":"422:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"421:15:11"},"scope":1239,"src":"382:84:11","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":1240,"src":"92:376:11","usedErrors":[]}],"src":"32:437:11"},"id":11},"contracts/BoxV2.sol":{"ast":{"absolutePath":"contracts/BoxV2.sol","exportedSymbols":{"BoxV2":[1296]},"id":1297,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1241,"literals":["solidity","^","0.8",".8"],"nodeType":"PragmaDirective","src":"32:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"BoxV2","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1296,"linearizedBaseContracts":[1296],"name":"BoxV2","nameLocation":"101:5:12","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1243,"mutability":"mutable","name":"value","nameLocation":"130:5:12","nodeType":"VariableDeclaration","scope":1296,"src":"113:22:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1242,"name":"uint256","nodeType":"ElementaryTypeName","src":"113:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"anonymous":false,"id":1247,"name":"valueChanged","nameLocation":"147:12:12","nodeType":"EventDefinition","parameters":{"id":1246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1245,"indexed":false,"mutability":"mutable","name":"newVale","nameLocation":"168:7:12","nodeType":"VariableDeclaration","scope":1247,"src":"160:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1244,"name":"uint256","nodeType":"ElementaryTypeName","src":"160:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"159:17:12"},"src":"141:36:12"},{"body":{"id":1260,"nodeType":"Block","src":"223:70:12","statements":[{"expression":{"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"233:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1253,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"241:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"233:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1255,"nodeType":"ExpressionStatement","src":"233:16:12"},{"eventCall":{"arguments":[{"id":1257,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"277:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1256,"name":"valueChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"264:12:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"264:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1259,"nodeType":"EmitStatement","src":"259:27:12"}]},"functionSelector":"6057361d","id":1261,"implemented":true,"kind":"function","modifiers":[],"name":"store","nameLocation":"192:5:12","nodeType":"FunctionDefinition","parameters":{"id":1250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1249,"mutability":"mutable","name":"newValue","nameLocation":"206:8:12","nodeType":"VariableDeclaration","scope":1261,"src":"198:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1248,"name":"uint256","nodeType":"ElementaryTypeName","src":"198:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"197:18:12"},"returnParameters":{"id":1251,"nodeType":"ParameterList","parameters":[],"src":"223:0:12"},"scope":1296,"src":"183:110:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1268,"nodeType":"Block","src":"349:29:12","statements":[{"expression":{"id":1266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"366:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1265,"id":1267,"nodeType":"Return","src":"359:12:12"}]},"functionSelector":"2e64cec1","id":1269,"implemented":true,"kind":"function","modifiers":[],"name":"retrieve","nameLocation":"307:8:12","nodeType":"FunctionDefinition","parameters":{"id":1262,"nodeType":"ParameterList","parameters":[],"src":"315:2:12"},"returnParameters":{"id":1265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1269,"src":"340:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1263,"name":"uint256","nodeType":"ElementaryTypeName","src":"340:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"339:9:12"},"scope":1296,"src":"298:80:12","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1286,"nodeType":"Block","src":"429:90:12","statements":[{"expression":{"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"439:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"447:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"455:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"447:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"439:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1279,"nodeType":"ExpressionStatement","src":"439:17:12"},{"eventCall":{"arguments":[{"id":1281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"484:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1280,"name":"valueChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"471:12:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"471:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1283,"nodeType":"EmitStatement","src":"466:24:12"},{"expression":{"id":1284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"507:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1273,"id":1285,"nodeType":"Return","src":"500:12:12"}]},"functionSelector":"d09de08a","id":1287,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"393:9:12","nodeType":"FunctionDefinition","parameters":{"id":1270,"nodeType":"ParameterList","parameters":[],"src":"402:2:12"},"returnParameters":{"id":1273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1287,"src":"421:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1271,"name":"uint256","nodeType":"ElementaryTypeName","src":"421:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"420:9:12"},"scope":1296,"src":"384:135:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1294,"nodeType":"Block","src":"580:29:12","statements":[{"expression":{"hexValue":"322e30","id":1292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"597:5:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_88f72b566ae0c96f6fffac4bc8ac74909f61512ac0c06a8124d5ed420d306f90","typeString":"literal_string \"2.0\""},"value":"2.0"},"functionReturnParameters":1291,"id":1293,"nodeType":"Return","src":"590:12:12"}]},"functionSelector":"54fd4d50","id":1295,"implemented":true,"kind":"function","modifiers":[],"name":"version","nameLocation":"534:7:12","nodeType":"FunctionDefinition","parameters":{"id":1288,"nodeType":"ParameterList","parameters":[],"src":"541:2:12"},"returnParameters":{"id":1291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1295,"src":"565:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1289,"name":"string","nodeType":"ElementaryTypeName","src":"565:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"564:15:12"},"scope":1296,"src":"525:84:12","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":1297,"src":"92:520:12","usedErrors":[]}],"src":"32:580:12"},"id":12},"contracts/Proxy/BoxProxyAdmin.sol":{"ast":{"absolutePath":"contracts/Proxy/BoxProxyAdmin.sol","exportedSymbols":{"Address":[1118],"BoxProxyAdmin":[1310],"Context":[1140],"ERC1967Proxy":[159],"ERC1967Upgrade":[477],"IBeacon":[539],"IERC1822Proxiable":[122],"Ownable":[112],"Proxy":[529],"ProxyAdmin":[675],"StorageSlot":[1200],"TransparentUpgradeableProxy":[823]},"id":1311,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1298,"literals":["solidity","^","0.8",".8"],"nodeType":"PragmaDirective","src":"33:23:13"},{"absolutePath":"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol","file":"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol","id":1299,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1311,"sourceUnit":676,"src":"58:66:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1300,"name":"ProxyAdmin","nodeType":"IdentifierPath","referencedDeclaration":675,"src":"152:10:13"},"id":1301,"nodeType":"InheritanceSpecifier","src":"152:10:13"}],"canonicalName":"BoxProxyAdmin","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1310,"linearizedBaseContracts":[1310,675,112,1140],"name":"BoxProxyAdmin","nameLocation":"135:13:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":1308,"nodeType":"Block","src":"227:2:13","statements":[]},"id":1309,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[],"id":1306,"kind":"baseConstructorSpecifier","modifierName":{"id":1305,"name":"ProxyAdmin","nodeType":"IdentifierPath","referencedDeclaration":675,"src":"214:10:13"},"nodeType":"ModifierInvocation","src":"214:12:13"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1309,"src":"190:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1302,"name":"address","nodeType":"ElementaryTypeName","src":"190:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"180:33:13"},"returnParameters":{"id":1307,"nodeType":"ParameterList","parameters":[],"src":"227:0:13"},"scope":1310,"src":"169:60:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":1311,"src":"126:111:13","usedErrors":[]}],"src":"33:205:13"},"id":13}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.","kind":"dev","methods":{"proxiableUUID()":{"details":"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":{"ERC1967Proxy":{"abi":[{"inputs":[{"internalType":"address","name":"_logic","type":"address"},{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"payable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"stateMutability":"payable","type":"fallback"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"details":"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.","kind":"dev","methods":{"constructor":{"details":"Initializes the upgradeable proxy with an initial implementation specified by `_logic`. If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_146":{"entryPoint":null,"id":146,"parameterSlots":2,"returnSlots":0},"@_setImplementation_215":{"entryPoint":277,"id":215,"parameterSlots":1,"returnSlots":0},"@_upgradeToAndCall_260":{"entryPoint":69,"id":260,"parameterSlots":3,"returnSlots":0},"@_upgradeTo_230":{"entryPoint":136,"id":230,"parameterSlots":1,"returnSlots":0},"@functionDelegateCall_1051":{"entryPoint":223,"id":1051,"parameterSlots":2,"returnSlots":1},"@functionDelegateCall_1086":{"entryPoint":491,"id":1086,"parameterSlots":3,"returnSlots":1},"@getAddressSlot_1166":{"entryPoint":754,"id":1166,"parameterSlots":1,"returnSlots":1},"@isContract_841":{"entryPoint":719,"id":841,"parameterSlots":1,"returnSlots":1},"@verifyCallResult_1117":{"entryPoint":764,"id":1117,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr_fromMemory":{"entryPoint":1260,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":970,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr_fromMemory":{"entryPoint":1335,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory":{"entryPoint":1386,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":1831,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":1922,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack":{"entryPoint":1584,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack":{"entryPoint":1736,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":1886,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1987,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1623,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1775,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":1121,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":872,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":1152,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":1809,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1911,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":1820,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1488,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":924,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":892,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":1206,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":1067,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x41":{"entryPoint":1020,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":993,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":998,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":887,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":882,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1003,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65":{"entryPoint":1505,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520":{"entryPoint":1657,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":944,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7856:14","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:14","statements":[{"nodeType":"YulAssignment","src":"57:19:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:14"},"nodeType":"YulFunctionCall","src":"67:9:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:14"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:14","type":""}],"src":"7:75:14"},{"body":{"nodeType":"YulBlock","src":"177:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:14"},"nodeType":"YulFunctionCall","src":"187:12:14"},"nodeType":"YulExpressionStatement","src":"187:12:14"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:14"},{"body":{"nodeType":"YulBlock","src":"300:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:14"},"nodeType":"YulFunctionCall","src":"310:12:14"},"nodeType":"YulExpressionStatement","src":"310:12:14"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:14"},{"body":{"nodeType":"YulBlock","src":"379:81:14","statements":[{"nodeType":"YulAssignment","src":"389:65:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:14"},"nodeType":"YulFunctionCall","src":"400:54:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:14"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:14","type":""}],"src":"334:126:14"},{"body":{"nodeType":"YulBlock","src":"511:51:14","statements":[{"nodeType":"YulAssignment","src":"521:35:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:14"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:14"},"nodeType":"YulFunctionCall","src":"532:24:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:14"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:14","type":""}],"src":"466:96:14"},{"body":{"nodeType":"YulBlock","src":"611:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:14"},"nodeType":"YulFunctionCall","src":"670:12:14"},"nodeType":"YulExpressionStatement","src":"670:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:14"},"nodeType":"YulFunctionCall","src":"641:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:14"},"nodeType":"YulFunctionCall","src":"631:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:14"},"nodeType":"YulFunctionCall","src":"624:43:14"},"nodeType":"YulIf","src":"621:63:14"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:14","type":""}],"src":"568:122:14"},{"body":{"nodeType":"YulBlock","src":"759:80:14","statements":[{"nodeType":"YulAssignment","src":"769:22:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:14"},"nodeType":"YulFunctionCall","src":"778:13:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:14"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:14"},"nodeType":"YulFunctionCall","src":"800:33:14"},"nodeType":"YulExpressionStatement","src":"800:33:14"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:14","type":""}],"src":"696:143:14"},{"body":{"nodeType":"YulBlock","src":"934:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"951:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"944:6:14"},"nodeType":"YulFunctionCall","src":"944:12:14"},"nodeType":"YulExpressionStatement","src":"944:12:14"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"845:117:14"},{"body":{"nodeType":"YulBlock","src":"1057:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1074:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1077:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1067:6:14"},"nodeType":"YulFunctionCall","src":"1067:12:14"},"nodeType":"YulExpressionStatement","src":"1067:12:14"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"968:117:14"},{"body":{"nodeType":"YulBlock","src":"1139:54:14","statements":[{"nodeType":"YulAssignment","src":"1149:38:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1167:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"1174:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1163:3:14"},"nodeType":"YulFunctionCall","src":"1163:14:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1183:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1179:3:14"},"nodeType":"YulFunctionCall","src":"1179:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1159:3:14"},"nodeType":"YulFunctionCall","src":"1159:28:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1149:6:14"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1122:5:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1132:6:14","type":""}],"src":"1091:102:14"},{"body":{"nodeType":"YulBlock","src":"1227:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1244:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1247:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1237:6:14"},"nodeType":"YulFunctionCall","src":"1237:88:14"},"nodeType":"YulExpressionStatement","src":"1237:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1341:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1344:4:14","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1334:6:14"},"nodeType":"YulFunctionCall","src":"1334:15:14"},"nodeType":"YulExpressionStatement","src":"1334:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1365:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1368:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1358:6:14"},"nodeType":"YulFunctionCall","src":"1358:15:14"},"nodeType":"YulExpressionStatement","src":"1358:15:14"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1199:180:14"},{"body":{"nodeType":"YulBlock","src":"1428:238:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1438:58:14","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1460:6:14"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1490:4:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1468:21:14"},"nodeType":"YulFunctionCall","src":"1468:27:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1456:3:14"},"nodeType":"YulFunctionCall","src":"1456:40:14"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1442:10:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1607:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1609:16:14"},"nodeType":"YulFunctionCall","src":"1609:18:14"},"nodeType":"YulExpressionStatement","src":"1609:18:14"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1550:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"1562:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1547:2:14"},"nodeType":"YulFunctionCall","src":"1547:34:14"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1586:10:14"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1598:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1583:2:14"},"nodeType":"YulFunctionCall","src":"1583:22:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1544:2:14"},"nodeType":"YulFunctionCall","src":"1544:62:14"},"nodeType":"YulIf","src":"1541:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1645:2:14","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1649:10:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1638:6:14"},"nodeType":"YulFunctionCall","src":"1638:22:14"},"nodeType":"YulExpressionStatement","src":"1638:22:14"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1414:6:14","type":""},{"name":"size","nodeType":"YulTypedName","src":"1422:4:14","type":""}],"src":"1385:281:14"},{"body":{"nodeType":"YulBlock","src":"1713:88:14","statements":[{"nodeType":"YulAssignment","src":"1723:30:14","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1733:18:14"},"nodeType":"YulFunctionCall","src":"1733:20:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1723:6:14"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1782:6:14"},{"name":"size","nodeType":"YulIdentifier","src":"1790:4:14"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1762:19:14"},"nodeType":"YulFunctionCall","src":"1762:33:14"},"nodeType":"YulExpressionStatement","src":"1762:33:14"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1697:4:14","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1706:6:14","type":""}],"src":"1672:129:14"},{"body":{"nodeType":"YulBlock","src":"1873:241:14","statements":[{"body":{"nodeType":"YulBlock","src":"1978:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1980:16:14"},"nodeType":"YulFunctionCall","src":"1980:18:14"},"nodeType":"YulExpressionStatement","src":"1980:18:14"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1950:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1958:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1947:2:14"},"nodeType":"YulFunctionCall","src":"1947:30:14"},"nodeType":"YulIf","src":"1944:56:14"},{"nodeType":"YulAssignment","src":"2010:37:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2040:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2018:21:14"},"nodeType":"YulFunctionCall","src":"2018:29:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2010:4:14"}]},{"nodeType":"YulAssignment","src":"2084:23:14","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2096:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"2102:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:14"},"nodeType":"YulFunctionCall","src":"2092:15:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2084:4:14"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1857:6:14","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1868:4:14","type":""}],"src":"1807:307:14"},{"body":{"nodeType":"YulBlock","src":"2169:258:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2179:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2188:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2183:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2248:63:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2273:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"2278:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2269:3:14"},"nodeType":"YulFunctionCall","src":"2269:11:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2292:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"2297:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2288:3:14"},"nodeType":"YulFunctionCall","src":"2288:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2282:5:14"},"nodeType":"YulFunctionCall","src":"2282:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2262:6:14"},"nodeType":"YulFunctionCall","src":"2262:39:14"},"nodeType":"YulExpressionStatement","src":"2262:39:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2209:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"2212:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2206:2:14"},"nodeType":"YulFunctionCall","src":"2206:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2220:19:14","statements":[{"nodeType":"YulAssignment","src":"2222:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2231:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"2234:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2227:3:14"},"nodeType":"YulFunctionCall","src":"2227:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2222:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"2202:3:14","statements":[]},"src":"2198:113:14"},{"body":{"nodeType":"YulBlock","src":"2345:76:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2395:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"2400:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2391:3:14"},"nodeType":"YulFunctionCall","src":"2391:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"2409:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2384:6:14"},"nodeType":"YulFunctionCall","src":"2384:27:14"},"nodeType":"YulExpressionStatement","src":"2384:27:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2326:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"2329:6:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2323:2:14"},"nodeType":"YulFunctionCall","src":"2323:13:14"},"nodeType":"YulIf","src":"2320:101:14"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2151:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2156:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"2161:6:14","type":""}],"src":"2120:307:14"},{"body":{"nodeType":"YulBlock","src":"2527:325:14","statements":[{"nodeType":"YulAssignment","src":"2537:74:14","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2603:6:14"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"2562:40:14"},"nodeType":"YulFunctionCall","src":"2562:48:14"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2546:15:14"},"nodeType":"YulFunctionCall","src":"2546:65:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2537:5:14"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2627:5:14"},{"name":"length","nodeType":"YulIdentifier","src":"2634:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2620:6:14"},"nodeType":"YulFunctionCall","src":"2620:21:14"},"nodeType":"YulExpressionStatement","src":"2620:21:14"},{"nodeType":"YulVariableDeclaration","src":"2650:27:14","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2665:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"2672:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2661:3:14"},"nodeType":"YulFunctionCall","src":"2661:16:14"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2654:3:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2715:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2717:77:14"},"nodeType":"YulFunctionCall","src":"2717:79:14"},"nodeType":"YulExpressionStatement","src":"2717:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2696:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"2701:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2692:3:14"},"nodeType":"YulFunctionCall","src":"2692:16:14"},{"name":"end","nodeType":"YulIdentifier","src":"2710:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2689:2:14"},"nodeType":"YulFunctionCall","src":"2689:25:14"},"nodeType":"YulIf","src":"2686:112:14"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2829:3:14"},{"name":"dst","nodeType":"YulIdentifier","src":"2834:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"2839:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2807:21:14"},"nodeType":"YulFunctionCall","src":"2807:39:14"},"nodeType":"YulExpressionStatement","src":"2807:39:14"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2500:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"2505:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"2513:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2521:5:14","type":""}],"src":"2433:419:14"},{"body":{"nodeType":"YulBlock","src":"2943:281:14","statements":[{"body":{"nodeType":"YulBlock","src":"2992:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2994:77:14"},"nodeType":"YulFunctionCall","src":"2994:79:14"},"nodeType":"YulExpressionStatement","src":"2994:79:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2971:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2979:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2967:3:14"},"nodeType":"YulFunctionCall","src":"2967:17:14"},{"name":"end","nodeType":"YulIdentifier","src":"2986:3:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2963:3:14"},"nodeType":"YulFunctionCall","src":"2963:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2956:6:14"},"nodeType":"YulFunctionCall","src":"2956:35:14"},"nodeType":"YulIf","src":"2953:122:14"},{"nodeType":"YulVariableDeclaration","src":"3084:27:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3104:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3098:5:14"},"nodeType":"YulFunctionCall","src":"3098:13:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3088:6:14","type":""}]},{"nodeType":"YulAssignment","src":"3120:98:14","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3191:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"3199:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3187:3:14"},"nodeType":"YulFunctionCall","src":"3187:17:14"},{"name":"length","nodeType":"YulIdentifier","src":"3206:6:14"},{"name":"end","nodeType":"YulIdentifier","src":"3214:3:14"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3129:57:14"},"nodeType":"YulFunctionCall","src":"3129:89:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3120:5:14"}]}]},"name":"abi_decode_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2921:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"2929:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2937:5:14","type":""}],"src":"2871:353:14"},{"body":{"nodeType":"YulBlock","src":"3333:575:14","statements":[{"body":{"nodeType":"YulBlock","src":"3379:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3381:77:14"},"nodeType":"YulFunctionCall","src":"3381:79:14"},"nodeType":"YulExpressionStatement","src":"3381:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3354:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"3363:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3350:3:14"},"nodeType":"YulFunctionCall","src":"3350:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"3375:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3346:3:14"},"nodeType":"YulFunctionCall","src":"3346:32:14"},"nodeType":"YulIf","src":"3343:119:14"},{"nodeType":"YulBlock","src":"3472:128:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3487:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3501:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3491:6:14","type":""}]},{"nodeType":"YulAssignment","src":"3516:74:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3562:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3573:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3558:3:14"},"nodeType":"YulFunctionCall","src":"3558:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3582:7:14"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"3526:31:14"},"nodeType":"YulFunctionCall","src":"3526:64:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3516:6:14"}]}]},{"nodeType":"YulBlock","src":"3610:291:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3625:39:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3649:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3660:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3645:3:14"},"nodeType":"YulFunctionCall","src":"3645:18:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3639:5:14"},"nodeType":"YulFunctionCall","src":"3639:25:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3629:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3711:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3713:77:14"},"nodeType":"YulFunctionCall","src":"3713:79:14"},"nodeType":"YulExpressionStatement","src":"3713:79:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3683:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"3691:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3680:2:14"},"nodeType":"YulFunctionCall","src":"3680:30:14"},"nodeType":"YulIf","src":"3677:117:14"},{"nodeType":"YulAssignment","src":"3808:83:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3863:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3874:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3859:3:14"},"nodeType":"YulFunctionCall","src":"3859:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3883:7:14"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3818:40:14"},"nodeType":"YulFunctionCall","src":"3818:73:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3808:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3295:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3306:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3318:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3326:6:14","type":""}],"src":"3230:678:14"},{"body":{"nodeType":"YulBlock","src":"4010:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4027:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"4032:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4020:6:14"},"nodeType":"YulFunctionCall","src":"4020:19:14"},"nodeType":"YulExpressionStatement","src":"4020:19:14"},{"nodeType":"YulAssignment","src":"4048:29:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4067:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"4072:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4063:3:14"},"nodeType":"YulFunctionCall","src":"4063:14:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4048:11:14"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3982:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"3987:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3998:11:14","type":""}],"src":"3914:169:14"},{"body":{"nodeType":"YulBlock","src":"4195:126:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4217:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"4225:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4213:3:14"},"nodeType":"YulFunctionCall","src":"4213:14:14"},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e","kind":"string","nodeType":"YulLiteral","src":"4229:34:14","type":"","value":"ERC1967: new implementation is n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4206:6:14"},"nodeType":"YulFunctionCall","src":"4206:58:14"},"nodeType":"YulExpressionStatement","src":"4206:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4285:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"4293:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4281:3:14"},"nodeType":"YulFunctionCall","src":"4281:15:14"},{"hexValue":"6f74206120636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"4298:15:14","type":"","value":"ot a contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4274:6:14"},"nodeType":"YulFunctionCall","src":"4274:40:14"},"nodeType":"YulExpressionStatement","src":"4274:40:14"}]},"name":"store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"4187:6:14","type":""}],"src":"4089:232:14"},{"body":{"nodeType":"YulBlock","src":"4473:220:14","statements":[{"nodeType":"YulAssignment","src":"4483:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4549:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"4554:2:14","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4490:58:14"},"nodeType":"YulFunctionCall","src":"4490:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4483:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4655:3:14"}],"functionName":{"name":"store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","nodeType":"YulIdentifier","src":"4566:88:14"},"nodeType":"YulFunctionCall","src":"4566:93:14"},"nodeType":"YulExpressionStatement","src":"4566:93:14"},{"nodeType":"YulAssignment","src":"4668:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4679:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"4684:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4675:3:14"},"nodeType":"YulFunctionCall","src":"4675:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4668:3:14"}]}]},"name":"abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4461:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4469:3:14","type":""}],"src":"4327:366:14"},{"body":{"nodeType":"YulBlock","src":"4870:248:14","statements":[{"nodeType":"YulAssignment","src":"4880:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4892:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4903:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4888:3:14"},"nodeType":"YulFunctionCall","src":"4888:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4880:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4927:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4938:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4923:3:14"},"nodeType":"YulFunctionCall","src":"4923:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4946:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"4952:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4942:3:14"},"nodeType":"YulFunctionCall","src":"4942:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4916:6:14"},"nodeType":"YulFunctionCall","src":"4916:47:14"},"nodeType":"YulExpressionStatement","src":"4916:47:14"},{"nodeType":"YulAssignment","src":"4972:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5106:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4980:124:14"},"nodeType":"YulFunctionCall","src":"4980:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4972:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4850:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4865:4:14","type":""}],"src":"4699:419:14"},{"body":{"nodeType":"YulBlock","src":"5230:119:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5252:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"5260:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5248:3:14"},"nodeType":"YulFunctionCall","src":"5248:14:14"},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f","kind":"string","nodeType":"YulLiteral","src":"5264:34:14","type":"","value":"Address: delegate call to non-co"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5241:6:14"},"nodeType":"YulFunctionCall","src":"5241:58:14"},"nodeType":"YulExpressionStatement","src":"5241:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5320:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"5328:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5316:3:14"},"nodeType":"YulFunctionCall","src":"5316:15:14"},{"hexValue":"6e7472616374","kind":"string","nodeType":"YulLiteral","src":"5333:8:14","type":"","value":"ntract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5309:6:14"},"nodeType":"YulFunctionCall","src":"5309:33:14"},"nodeType":"YulExpressionStatement","src":"5309:33:14"}]},"name":"store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5222:6:14","type":""}],"src":"5124:225:14"},{"body":{"nodeType":"YulBlock","src":"5501:220:14","statements":[{"nodeType":"YulAssignment","src":"5511:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5577:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"5582:2:14","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5518:58:14"},"nodeType":"YulFunctionCall","src":"5518:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5511:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5683:3:14"}],"functionName":{"name":"store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","nodeType":"YulIdentifier","src":"5594:88:14"},"nodeType":"YulFunctionCall","src":"5594:93:14"},"nodeType":"YulExpressionStatement","src":"5594:93:14"},{"nodeType":"YulAssignment","src":"5696:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5707:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"5712:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5703:3:14"},"nodeType":"YulFunctionCall","src":"5703:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5696:3:14"}]}]},"name":"abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5489:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5497:3:14","type":""}],"src":"5355:366:14"},{"body":{"nodeType":"YulBlock","src":"5898:248:14","statements":[{"nodeType":"YulAssignment","src":"5908:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5920:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5931:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5916:3:14"},"nodeType":"YulFunctionCall","src":"5916:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5908:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5955:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5966:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5951:3:14"},"nodeType":"YulFunctionCall","src":"5951:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5974:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"5980:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5970:3:14"},"nodeType":"YulFunctionCall","src":"5970:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5944:6:14"},"nodeType":"YulFunctionCall","src":"5944:47:14"},"nodeType":"YulExpressionStatement","src":"5944:47:14"},{"nodeType":"YulAssignment","src":"6000:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6134:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6008:124:14"},"nodeType":"YulFunctionCall","src":"6008:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6000:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5878:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5893:4:14","type":""}],"src":"5727:419:14"},{"body":{"nodeType":"YulBlock","src":"6210:40:14","statements":[{"nodeType":"YulAssignment","src":"6221:22:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6237:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6231:5:14"},"nodeType":"YulFunctionCall","src":"6231:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6221:6:14"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6193:5:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6203:6:14","type":""}],"src":"6152:98:14"},{"body":{"nodeType":"YulBlock","src":"6369:34:14","statements":[{"nodeType":"YulAssignment","src":"6379:18:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"6394:3:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6379:11:14"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6341:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"6346:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6357:11:14","type":""}],"src":"6256:147:14"},{"body":{"nodeType":"YulBlock","src":"6517:265:14","statements":[{"nodeType":"YulVariableDeclaration","src":"6527:52:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6573:5:14"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"6541:31:14"},"nodeType":"YulFunctionCall","src":"6541:38:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6531:6:14","type":""}]},{"nodeType":"YulAssignment","src":"6588:95:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6671:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"6676:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"6595:75:14"},"nodeType":"YulFunctionCall","src":"6595:88:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6588:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6718:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"6725:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6714:3:14"},"nodeType":"YulFunctionCall","src":"6714:16:14"},{"name":"pos","nodeType":"YulIdentifier","src":"6732:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"6737:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"6692:21:14"},"nodeType":"YulFunctionCall","src":"6692:52:14"},"nodeType":"YulExpressionStatement","src":"6692:52:14"},{"nodeType":"YulAssignment","src":"6753:23:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6764:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"6769:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6760:3:14"},"nodeType":"YulFunctionCall","src":"6760:16:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6753:3:14"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6498:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6505:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6513:3:14","type":""}],"src":"6409:373:14"},{"body":{"nodeType":"YulBlock","src":"6922:137:14","statements":[{"nodeType":"YulAssignment","src":"6933:100:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7020:6:14"},{"name":"pos","nodeType":"YulIdentifier","src":"7029:3:14"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"6940:79:14"},"nodeType":"YulFunctionCall","src":"6940:93:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6933:3:14"}]},{"nodeType":"YulAssignment","src":"7043:10:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"7050:3:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7043:3:14"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6901:3:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6907:6:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6918:3:14","type":""}],"src":"6788:271:14"},{"body":{"nodeType":"YulBlock","src":"7124:40:14","statements":[{"nodeType":"YulAssignment","src":"7135:22:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7151:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7145:5:14"},"nodeType":"YulFunctionCall","src":"7145:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7135:6:14"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7107:5:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7117:6:14","type":""}],"src":"7065:99:14"},{"body":{"nodeType":"YulBlock","src":"7262:272:14","statements":[{"nodeType":"YulVariableDeclaration","src":"7272:53:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7319:5:14"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7286:32:14"},"nodeType":"YulFunctionCall","src":"7286:39:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7276:6:14","type":""}]},{"nodeType":"YulAssignment","src":"7334:78:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7400:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"7405:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7341:58:14"},"nodeType":"YulFunctionCall","src":"7341:71:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7334:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7447:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"7454:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7443:3:14"},"nodeType":"YulFunctionCall","src":"7443:16:14"},{"name":"pos","nodeType":"YulIdentifier","src":"7461:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"7466:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"7421:21:14"},"nodeType":"YulFunctionCall","src":"7421:52:14"},"nodeType":"YulExpressionStatement","src":"7421:52:14"},{"nodeType":"YulAssignment","src":"7482:46:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7493:3:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7520:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7498:21:14"},"nodeType":"YulFunctionCall","src":"7498:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7489:3:14"},"nodeType":"YulFunctionCall","src":"7489:39:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7482:3:14"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7243:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7250:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7258:3:14","type":""}],"src":"7170:364:14"},{"body":{"nodeType":"YulBlock","src":"7658:195:14","statements":[{"nodeType":"YulAssignment","src":"7668:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7680:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7691:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7676:3:14"},"nodeType":"YulFunctionCall","src":"7676:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7668:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7715:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7726:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7711:3:14"},"nodeType":"YulFunctionCall","src":"7711:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7734:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"7740:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7730:3:14"},"nodeType":"YulFunctionCall","src":"7730:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7704:6:14"},"nodeType":"YulFunctionCall","src":"7704:47:14"},"nodeType":"YulExpressionStatement","src":"7704:47:14"},{"nodeType":"YulAssignment","src":"7760:86:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7832:6:14"},{"name":"tail","nodeType":"YulIdentifier","src":"7841:4:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7768:63:14"},"nodeType":"YulFunctionCall","src":"7768:78:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7760:4:14"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7630:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7642:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7653:4:14","type":""}],"src":"7540:313:14"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1967: new implementation is n\")\n\n        mstore(add(memPtr, 32), \"ot a contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: delegate call to non-co\")\n\n        mstore(add(memPtr, 32), \"ntract\")\n\n    }\n\n    function abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405260405162000c7938038062000c7983398181016040528101906200002991906200056a565b6200003d828260006200004560201b60201c565b5050620007e7565b62000056836200008860201b60201c565b600082511180620000645750805b156200008357620000818383620000df60201b620000371760201c565b505b505050565b62000099816200011560201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b60606200010d838360405180606001604052806027815260200162000c5260279139620001eb60201b60201c565b905092915050565b6200012b81620002cf60201b620000641760201c565b6200016d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001649062000657565b60405180910390fd5b80620001a77f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b620002f260201b620000871760201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6060620001fe84620002cf60201b60201c565b62000240576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200023790620006ef565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516200026a91906200075e565b600060405180830381855af49150503d8060008114620002a7576040519150601f19603f3d011682016040523d82523d6000602084013e620002ac565b606091505b5091509150620002c4828286620002fc60201b60201c565b925050509392505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000819050919050565b606083156200030e5782905062000361565b600083511115620003225782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003589190620007c3565b60405180910390fd5b9392505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003a9826200037c565b9050919050565b620003bb816200039c565b8114620003c757600080fd5b50565b600081519050620003db81620003b0565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200043682620003eb565b810181811067ffffffffffffffff82111715620004585762000457620003fc565b5b80604052505050565b60006200046d62000368565b90506200047b82826200042b565b919050565b600067ffffffffffffffff8211156200049e576200049d620003fc565b5b620004a982620003eb565b9050602081019050919050565b60005b83811015620004d6578082015181840152602081019050620004b9565b83811115620004e6576000848401525b50505050565b600062000503620004fd8462000480565b62000461565b905082815260208101848484011115620005225762000521620003e6565b5b6200052f848285620004b6565b509392505050565b600082601f8301126200054f576200054e620003e1565b5b815162000561848260208601620004ec565b91505092915050565b6000806040838503121562000584576200058362000372565b5b60006200059485828601620003ca565b925050602083015167ffffffffffffffff811115620005b857620005b762000377565b5b620005c68582860162000537565b9150509250929050565b600082825260208201905092915050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b60006200063f602d83620005d0565b91506200064c82620005e1565b604082019050919050565b60006020820190508181036000830152620006728162000630565b9050919050565b7f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60008201527f6e74726163740000000000000000000000000000000000000000000000000000602082015250565b6000620006d7602683620005d0565b9150620006e48262000679565b604082019050919050565b600060208201905081810360008301526200070a81620006c8565b9050919050565b600081519050919050565b600081905092915050565b6000620007348262000711565b6200074081856200071c565b935062000752818560208601620004b6565b80840191505092915050565b60006200076c828462000727565b915081905092915050565b600081519050919050565b60006200078f8262000777565b6200079b8185620005d0565b9350620007ad818560208601620004b6565b620007b881620003eb565b840191505092915050565b60006020820190508181036000830152620007df818462000782565b905092915050565b61045b80620007f76000396000f3fe6080604052366100135761001161001d565b005b61001b61001d565b005b610025610091565b610035610030610093565b6100a2565b565b606061005c83836040518060600160405280602781526020016103ff602791396100c8565b905092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000819050919050565b565b600061009d610195565b905090565b3660008037600080366000845af43d6000803e80600081146100c3573d6000f35b3d6000fd5b60606100d384610064565b610112576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610109906102d6565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168560405161013a9190610370565b600060405180830381855af49150503d8060008114610175576040519150601f19603f3d011682016040523d82523d6000602084013e61017a565b606091505b509150915061018a8282866101ec565b925050509392505050565b60006101c37f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610087565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606083156101fc5782905061024c565b60008351111561020f5782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024391906103dc565b60405180910390fd5b9392505050565b600082825260208201905092915050565b7f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60008201527f6e74726163740000000000000000000000000000000000000000000000000000602082015250565b60006102c0602683610253565b91506102cb82610264565b604082019050919050565b600060208201905081810360008301526102ef816102b3565b9050919050565b600081519050919050565b600081905092915050565b60005b8381101561032a57808201518184015260208101905061030f565b83811115610339576000848401525b50505050565b600061034a826102f6565b6103548185610301565b935061036481856020860161030c565b80840191505092915050565b600061037c828461033f565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b60006103ae82610387565b6103b88185610253565b93506103c881856020860161030c565b6103d181610392565b840191505092915050565b600060208201905081810360008301526103f681846103a3565b90509291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212201e83f17052c1e3474b36bec8e89ba04f5d39da712b9c9930c3b57c7eed1e26c564736f6c63430008090033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH3 0xC79 CODESIZE SUB DUP1 PUSH3 0xC79 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x29 SWAP2 SWAP1 PUSH3 0x56A JUMP JUMPDEST PUSH3 0x3D DUP3 DUP3 PUSH1 0x0 PUSH3 0x45 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x7E7 JUMP JUMPDEST PUSH3 0x56 DUP4 PUSH3 0x88 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH3 0x64 JUMPI POP DUP1 JUMPDEST ISZERO PUSH3 0x83 JUMPI PUSH3 0x81 DUP4 DUP4 PUSH3 0xDF PUSH1 0x20 SHL PUSH3 0x37 OR PUSH1 0x20 SHR JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x99 DUP2 PUSH3 0x115 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH3 0x10D DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0xC52 PUSH1 0x27 SWAP2 CODECOPY PUSH3 0x1EB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x12B DUP2 PUSH3 0x2CF PUSH1 0x20 SHL PUSH3 0x64 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x16D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x164 SWAP1 PUSH3 0x657 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH3 0x1A7 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH3 0x2F2 PUSH1 0x20 SHL PUSH3 0x87 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH3 0x1FE DUP5 PUSH3 0x2CF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x240 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x237 SWAP1 PUSH3 0x6EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH3 0x26A SWAP2 SWAP1 PUSH3 0x75E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH3 0x2A7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x2AC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH3 0x2C4 DUP3 DUP3 DUP7 PUSH3 0x2FC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH3 0x30E JUMPI DUP3 SWAP1 POP PUSH3 0x361 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH3 0x322 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x358 SWAP2 SWAP1 PUSH3 0x7C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A9 DUP3 PUSH3 0x37C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3BB DUP2 PUSH3 0x39C JUMP JUMPDEST DUP2 EQ PUSH3 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3DB DUP2 PUSH3 0x3B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x436 DUP3 PUSH3 0x3EB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x458 JUMPI PUSH3 0x457 PUSH3 0x3FC JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x46D PUSH3 0x368 JUMP JUMPDEST SWAP1 POP PUSH3 0x47B DUP3 DUP3 PUSH3 0x42B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x49E JUMPI PUSH3 0x49D PUSH3 0x3FC JUMP JUMPDEST JUMPDEST PUSH3 0x4A9 DUP3 PUSH3 0x3EB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x4D6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x4B9 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x4E6 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x503 PUSH3 0x4FD DUP5 PUSH3 0x480 JUMP JUMPDEST PUSH3 0x461 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x522 JUMPI PUSH3 0x521 PUSH3 0x3E6 JUMP JUMPDEST JUMPDEST PUSH3 0x52F DUP5 DUP3 DUP6 PUSH3 0x4B6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x54F JUMPI PUSH3 0x54E PUSH3 0x3E1 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x561 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x4EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x584 JUMPI PUSH3 0x583 PUSH3 0x372 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x594 DUP6 DUP3 DUP7 ADD PUSH3 0x3CA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x5B8 JUMPI PUSH3 0x5B7 PUSH3 0x377 JUMP JUMPDEST JUMPDEST PUSH3 0x5C6 DUP6 DUP3 DUP7 ADD PUSH3 0x537 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x63F PUSH1 0x2D DUP4 PUSH3 0x5D0 JUMP JUMPDEST SWAP2 POP PUSH3 0x64C DUP3 PUSH3 0x5E1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x672 DUP2 PUSH3 0x630 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E74726163740000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6D7 PUSH1 0x26 DUP4 PUSH3 0x5D0 JUMP JUMPDEST SWAP2 POP PUSH3 0x6E4 DUP3 PUSH3 0x679 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x70A DUP2 PUSH3 0x6C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x734 DUP3 PUSH3 0x711 JUMP JUMPDEST PUSH3 0x740 DUP2 DUP6 PUSH3 0x71C JUMP JUMPDEST SWAP4 POP PUSH3 0x752 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x4B6 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x76C DUP3 DUP5 PUSH3 0x727 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x78F DUP3 PUSH3 0x777 JUMP JUMPDEST PUSH3 0x79B DUP2 DUP6 PUSH3 0x5D0 JUMP JUMPDEST SWAP4 POP PUSH3 0x7AD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x4B6 JUMP JUMPDEST PUSH3 0x7B8 DUP2 PUSH3 0x3EB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x7DF DUP2 DUP5 PUSH3 0x782 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x45B DUP1 PUSH3 0x7F7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x1D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B PUSH2 0x1D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25 PUSH2 0x91 JUMP JUMPDEST PUSH2 0x35 PUSH2 0x30 PUSH2 0x93 JUMP JUMPDEST PUSH2 0xA2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5C DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3FF PUSH1 0x27 SWAP2 CODECOPY PUSH2 0xC8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D PUSH2 0x195 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC3 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 PUSH2 0xD3 DUP5 PUSH2 0x64 JUMP JUMPDEST PUSH2 0x112 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109 SWAP1 PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x370 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x175 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x17A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x18A DUP3 DUP3 DUP7 PUSH2 0x1EC JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C3 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x87 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1FC JUMPI DUP3 SWAP1 POP PUSH2 0x24C JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x20F JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E74726163740000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C0 PUSH1 0x26 DUP4 PUSH2 0x253 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CB DUP3 PUSH2 0x264 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2EF DUP2 PUSH2 0x2B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x32A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x30F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34A DUP3 PUSH2 0x2F6 JUMP JUMPDEST PUSH2 0x354 DUP2 DUP6 PUSH2 0x301 JUMP JUMPDEST SWAP4 POP PUSH2 0x364 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x30C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37C DUP3 DUP5 PUSH2 0x33F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AE DUP3 PUSH2 0x387 JUMP JUMPDEST PUSH2 0x3B8 DUP2 DUP6 PUSH2 0x253 JUMP JUMPDEST SWAP4 POP PUSH2 0x3C8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x30C JUMP JUMPDEST PUSH2 0x3D1 DUP2 PUSH2 0x392 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F6 DUP2 DUP5 PUSH2 0x3A3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x706673582212201E83F1 PUSH17 0x52C1E3474B36BEC8E89BA04F5D39DA712B SWAP13 SWAP10 ADDRESS 0xC3 0xB5 PUSH29 0x7EED1E26C564736F6C63430008090033416464726573733A206C6F772D PUSH13 0x6576656C2064656C6567617465 KECCAK256 PUSH4 0x616C6C20 PUSH7 0x61696C65640000 ","sourceMap":"567:723:2:-:0;;;958:112;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1024:39;1042:6;1050:5;1057;1024:17;;;:39;;:::i;:::-;958:112;;567:723;;2183:295:3;2321:29;2332:17;2321:10;;;:29;;:::i;:::-;2378:1;2364:4;:11;:15;:28;;;;2383:9;2364:28;2360:112;;;2408:53;2437:17;2456:4;2408:28;;;;;:53;;:::i;:::-;;2360:112;2183:295;;;:::o;1897:152::-;1963:37;1982:17;1963:18;;;:37;;:::i;:::-;2024:17;2015:27;;;;;;;;;;;;1897:152;:::o;6570:198:8:-;6653:12;6684:77;6705:6;6713:4;6684:77;;;;;;;;;;;;;;;;;:20;;;:77;;:::i;:::-;6677:84;;6570:198;;;;:::o;1532:259:3:-;1613:37;1632:17;1613:18;;;;;:37;;:::i;:::-;1605:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:17;1710:48;1030:66;1737:20;;1710:26;;;;;:48;;:::i;:::-;:54;;;:74;;;;;;;;;;;;;;;;;;1532:259;:::o;6954:387:8:-;7095:12;7127:18;7138:6;7127:10;;;:18;;:::i;:::-;7119:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;7200:12;7214:23;7241:6;:19;;7261:4;7241:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7199:67;;;;7283:51;7300:7;7309:10;7321:12;7283:16;;;:51;;:::i;:::-;7276:58;;;;6954:387;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;1614:190:10:-;1675:21;1784:4;1774:14;;1614:190;;;:::o;7561:742:8:-;7707:12;7735:7;7731:566;;;7765:10;7758:17;;;;7731:566;7896:1;7876:10;:17;:21;7872:415;;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;7872:415;8259:12;8252:20;;;;;;;;;;;:::i;:::-;;;;;;;;7561:742;;;;;;:::o;7:75:14:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:117::-;954:1;951;944:12;968:117;1077:1;1074;1067:12;1091:102;1132:6;1183:2;1179:7;1174:2;1167:5;1163:14;1159:28;1149:38;;1091:102;;;:::o;1199:180::-;1247:77;1244:1;1237:88;1344:4;1341:1;1334:15;1368:4;1365:1;1358:15;1385:281;1468:27;1490:4;1468:27;:::i;:::-;1460:6;1456:40;1598:6;1586:10;1583:22;1562:18;1550:10;1547:34;1544:62;1541:88;;;1609:18;;:::i;:::-;1541:88;1649:10;1645:2;1638:22;1428:238;1385:281;;:::o;1672:129::-;1706:6;1733:20;;:::i;:::-;1723:30;;1762:33;1790:4;1782:6;1762:33;:::i;:::-;1672:129;;;:::o;1807:307::-;1868:4;1958:18;1950:6;1947:30;1944:56;;;1980:18;;:::i;:::-;1944:56;2018:29;2040:6;2018:29;:::i;:::-;2010:37;;2102:4;2096;2092:15;2084:23;;1807:307;;;:::o;2120:::-;2188:1;2198:113;2212:6;2209:1;2206:13;2198:113;;;2297:1;2292:3;2288:11;2282:18;2278:1;2273:3;2269:11;2262:39;2234:2;2231:1;2227:10;2222:15;;2198:113;;;2329:6;2326:1;2323:13;2320:101;;;2409:1;2400:6;2395:3;2391:16;2384:27;2320:101;2169:258;2120:307;;;:::o;2433:419::-;2521:5;2546:65;2562:48;2603:6;2562:48;:::i;:::-;2546:65;:::i;:::-;2537:74;;2634:6;2627:5;2620:21;2672:4;2665:5;2661:16;2710:3;2701:6;2696:3;2692:16;2689:25;2686:112;;;2717:79;;:::i;:::-;2686:112;2807:39;2839:6;2834:3;2829;2807:39;:::i;:::-;2527:325;2433:419;;;;;:::o;2871:353::-;2937:5;2986:3;2979:4;2971:6;2967:17;2963:27;2953:122;;2994:79;;:::i;:::-;2953:122;3104:6;3098:13;3129:89;3214:3;3206:6;3199:4;3191:6;3187:17;3129:89;:::i;:::-;3120:98;;2943:281;2871:353;;;;:::o;3230:678::-;3318:6;3326;3375:2;3363:9;3354:7;3350:23;3346:32;3343:119;;;3381:79;;:::i;:::-;3343:119;3501:1;3526:64;3582:7;3573:6;3562:9;3558:22;3526:64;:::i;:::-;3516:74;;3472:128;3660:2;3649:9;3645:18;3639:25;3691:18;3683:6;3680:30;3677:117;;;3713:79;;:::i;:::-;3677:117;3818:73;3883:7;3874:6;3863:9;3859:22;3818:73;:::i;:::-;3808:83;;3610:291;3230:678;;;;;:::o;3914:169::-;3998:11;4032:6;4027:3;4020:19;4072:4;4067:3;4063:14;4048:29;;3914:169;;;;:::o;4089:232::-;4229:34;4225:1;4217:6;4213:14;4206:58;4298:15;4293:2;4285:6;4281:15;4274:40;4089:232;:::o;4327:366::-;4469:3;4490:67;4554:2;4549:3;4490:67;:::i;:::-;4483:74;;4566:93;4655:3;4566:93;:::i;:::-;4684:2;4679:3;4675:12;4668:19;;4327:366;;;:::o;4699:419::-;4865:4;4903:2;4892:9;4888:18;4880:26;;4952:9;4946:4;4942:20;4938:1;4927:9;4923:17;4916:47;4980:131;5106:4;4980:131;:::i;:::-;4972:139;;4699:419;;;:::o;5124:225::-;5264:34;5260:1;5252:6;5248:14;5241:58;5333:8;5328:2;5320:6;5316:15;5309:33;5124:225;:::o;5355:366::-;5497:3;5518:67;5582:2;5577:3;5518:67;:::i;:::-;5511:74;;5594:93;5683:3;5594:93;:::i;:::-;5712:2;5707:3;5703:12;5696:19;;5355:366;;;:::o;5727:419::-;5893:4;5931:2;5920:9;5916:18;5908:26;;5980:9;5974:4;5970:20;5966:1;5955:9;5951:17;5944:47;6008:131;6134:4;6008:131;:::i;:::-;6000:139;;5727:419;;;:::o;6152:98::-;6203:6;6237:5;6231:12;6221:22;;6152:98;;;:::o;6256:147::-;6357:11;6394:3;6379:18;;6256:147;;;;:::o;6409:373::-;6513:3;6541:38;6573:5;6541:38;:::i;:::-;6595:88;6676:6;6671:3;6595:88;:::i;:::-;6588:95;;6692:52;6737:6;6732:3;6725:4;6718:5;6714:16;6692:52;:::i;:::-;6769:6;6764:3;6760:16;6753:23;;6517:265;6409:373;;;;:::o;6788:271::-;6918:3;6940:93;7029:3;7020:6;6940:93;:::i;:::-;6933:100;;7050:3;7043:10;;6788:271;;;;:::o;7065:99::-;7117:6;7151:5;7145:12;7135:22;;7065:99;;;:::o;7170:364::-;7258:3;7286:39;7319:5;7286:39;:::i;:::-;7341:71;7405:6;7400:3;7341:71;:::i;:::-;7334:78;;7421:52;7466:6;7461:3;7454:4;7447:5;7443:16;7421:52;:::i;:::-;7498:29;7520:6;7498:29;:::i;:::-;7493:3;7489:39;7482:46;;7262:272;7170:364;;;;:::o;7540:313::-;7653:4;7691:2;7680:9;7676:18;7668:26;;7740:9;7734:4;7730:20;7726:1;7715:9;7711:17;7704:47;7768:78;7841:4;7832:6;7768:78;:::i;:::-;7760:86;;7540:313;;;;:::o;567:723:2:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_515":{"entryPoint":null,"id":515,"parameterSlots":0,"returnSlots":0},"@_523":{"entryPoint":null,"id":523,"parameterSlots":0,"returnSlots":0},"@_beforeFallback_528":{"entryPoint":145,"id":528,"parameterSlots":0,"returnSlots":0},"@_delegate_488":{"entryPoint":162,"id":488,"parameterSlots":1,"returnSlots":0},"@_fallback_507":{"entryPoint":29,"id":507,"parameterSlots":0,"returnSlots":0},"@_getImplementation_191":{"entryPoint":405,"id":191,"parameterSlots":0,"returnSlots":1},"@_implementation_158":{"entryPoint":147,"id":158,"parameterSlots":0,"returnSlots":1},"@functionDelegateCall_1051":{"entryPoint":55,"id":1051,"parameterSlots":2,"returnSlots":1},"@functionDelegateCall_1086":{"entryPoint":200,"id":1086,"parameterSlots":3,"returnSlots":1},"@getAddressSlot_1166":{"entryPoint":135,"id":1166,"parameterSlots":1,"returnSlots":1},"@isContract_841":{"entryPoint":100,"id":841,"parameterSlots":1,"returnSlots":1},"@verifyCallResult_1117":{"entryPoint":492,"id":1117,"parameterSlots":3,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":831,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":931,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack":{"entryPoint":691,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":880,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":988,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":726,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":758,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":903,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":769,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":595,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":780,"id":null,"parameterSlots":3,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":914,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520":{"entryPoint":612,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3335:14","statements":[{"body":{"nodeType":"YulBlock","src":"103:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"120:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"125:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"113:6:14"},"nodeType":"YulFunctionCall","src":"113:19:14"},"nodeType":"YulExpressionStatement","src":"113:19:14"},{"nodeType":"YulAssignment","src":"141:29:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"160:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"165:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"156:3:14"},"nodeType":"YulFunctionCall","src":"156:14:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"141:11:14"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"75:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"80:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"91:11:14","type":""}],"src":"7:169:14"},{"body":{"nodeType":"YulBlock","src":"288:119:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"310:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"318:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"306:3:14"},"nodeType":"YulFunctionCall","src":"306:14:14"},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f","kind":"string","nodeType":"YulLiteral","src":"322:34:14","type":"","value":"Address: delegate call to non-co"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"299:6:14"},"nodeType":"YulFunctionCall","src":"299:58:14"},"nodeType":"YulExpressionStatement","src":"299:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"378:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"386:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"374:3:14"},"nodeType":"YulFunctionCall","src":"374:15:14"},{"hexValue":"6e7472616374","kind":"string","nodeType":"YulLiteral","src":"391:8:14","type":"","value":"ntract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"367:6:14"},"nodeType":"YulFunctionCall","src":"367:33:14"},"nodeType":"YulExpressionStatement","src":"367:33:14"}]},"name":"store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"280:6:14","type":""}],"src":"182:225:14"},{"body":{"nodeType":"YulBlock","src":"559:220:14","statements":[{"nodeType":"YulAssignment","src":"569:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"635:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"640:2:14","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"576:58:14"},"nodeType":"YulFunctionCall","src":"576:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"569:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"741:3:14"}],"functionName":{"name":"store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","nodeType":"YulIdentifier","src":"652:88:14"},"nodeType":"YulFunctionCall","src":"652:93:14"},"nodeType":"YulExpressionStatement","src":"652:93:14"},{"nodeType":"YulAssignment","src":"754:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"765:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"770:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"761:3:14"},"nodeType":"YulFunctionCall","src":"761:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"754:3:14"}]}]},"name":"abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"547:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"555:3:14","type":""}],"src":"413:366:14"},{"body":{"nodeType":"YulBlock","src":"956:248:14","statements":[{"nodeType":"YulAssignment","src":"966:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"978:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"989:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"974:3:14"},"nodeType":"YulFunctionCall","src":"974:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"966:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1013:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1024:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1009:3:14"},"nodeType":"YulFunctionCall","src":"1009:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1032:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1038:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1028:3:14"},"nodeType":"YulFunctionCall","src":"1028:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1002:6:14"},"nodeType":"YulFunctionCall","src":"1002:47:14"},"nodeType":"YulExpressionStatement","src":"1002:47:14"},{"nodeType":"YulAssignment","src":"1058:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1192:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1066:124:14"},"nodeType":"YulFunctionCall","src":"1066:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1058:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"936:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"951:4:14","type":""}],"src":"785:419:14"},{"body":{"nodeType":"YulBlock","src":"1268:40:14","statements":[{"nodeType":"YulAssignment","src":"1279:22:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1295:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1289:5:14"},"nodeType":"YulFunctionCall","src":"1289:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1279:6:14"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1251:5:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1261:6:14","type":""}],"src":"1210:98:14"},{"body":{"nodeType":"YulBlock","src":"1427:34:14","statements":[{"nodeType":"YulAssignment","src":"1437:18:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"1452:3:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1437:11:14"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1399:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"1404:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1415:11:14","type":""}],"src":"1314:147:14"},{"body":{"nodeType":"YulBlock","src":"1516:258:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1526:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"1535:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1530:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1595:63:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1620:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"1625:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1616:3:14"},"nodeType":"YulFunctionCall","src":"1616:11:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1639:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"1644:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1635:3:14"},"nodeType":"YulFunctionCall","src":"1635:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1629:5:14"},"nodeType":"YulFunctionCall","src":"1629:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1609:6:14"},"nodeType":"YulFunctionCall","src":"1609:39:14"},"nodeType":"YulExpressionStatement","src":"1609:39:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1556:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"1559:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1553:2:14"},"nodeType":"YulFunctionCall","src":"1553:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1567:19:14","statements":[{"nodeType":"YulAssignment","src":"1569:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1578:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"1581:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1574:3:14"},"nodeType":"YulFunctionCall","src":"1574:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1569:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"1549:3:14","statements":[]},"src":"1545:113:14"},{"body":{"nodeType":"YulBlock","src":"1692:76:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1742:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"1747:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1738:3:14"},"nodeType":"YulFunctionCall","src":"1738:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"1756:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1731:6:14"},"nodeType":"YulFunctionCall","src":"1731:27:14"},"nodeType":"YulExpressionStatement","src":"1731:27:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1673:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"1676:6:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1670:2:14"},"nodeType":"YulFunctionCall","src":"1670:13:14"},"nodeType":"YulIf","src":"1667:101:14"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1498:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1503:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"1508:6:14","type":""}],"src":"1467:307:14"},{"body":{"nodeType":"YulBlock","src":"1888:265:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1898:52:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1944:5:14"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"1912:31:14"},"nodeType":"YulFunctionCall","src":"1912:38:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1902:6:14","type":""}]},{"nodeType":"YulAssignment","src":"1959:95:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2042:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"2047:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"1966:75:14"},"nodeType":"YulFunctionCall","src":"1966:88:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1959:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2089:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"2096:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2085:3:14"},"nodeType":"YulFunctionCall","src":"2085:16:14"},{"name":"pos","nodeType":"YulIdentifier","src":"2103:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"2108:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2063:21:14"},"nodeType":"YulFunctionCall","src":"2063:52:14"},"nodeType":"YulExpressionStatement","src":"2063:52:14"},{"nodeType":"YulAssignment","src":"2124:23:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2135:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"2140:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2131:3:14"},"nodeType":"YulFunctionCall","src":"2131:16:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2124:3:14"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1869:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1876:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1884:3:14","type":""}],"src":"1780:373:14"},{"body":{"nodeType":"YulBlock","src":"2293:137:14","statements":[{"nodeType":"YulAssignment","src":"2304:100:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2391:6:14"},{"name":"pos","nodeType":"YulIdentifier","src":"2400:3:14"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"2311:79:14"},"nodeType":"YulFunctionCall","src":"2311:93:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2304:3:14"}]},{"nodeType":"YulAssignment","src":"2414:10:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"2421:3:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2414:3:14"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2272:3:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2278:6:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2289:3:14","type":""}],"src":"2159:271:14"},{"body":{"nodeType":"YulBlock","src":"2495:40:14","statements":[{"nodeType":"YulAssignment","src":"2506:22:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2522:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2516:5:14"},"nodeType":"YulFunctionCall","src":"2516:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2506:6:14"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2478:5:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2488:6:14","type":""}],"src":"2436:99:14"},{"body":{"nodeType":"YulBlock","src":"2589:54:14","statements":[{"nodeType":"YulAssignment","src":"2599:38:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2617:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"2624:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2613:3:14"},"nodeType":"YulFunctionCall","src":"2613:14:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2633:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2629:3:14"},"nodeType":"YulFunctionCall","src":"2629:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2609:3:14"},"nodeType":"YulFunctionCall","src":"2609:28:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2599:6:14"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2572:5:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2582:6:14","type":""}],"src":"2541:102:14"},{"body":{"nodeType":"YulBlock","src":"2741:272:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2751:53:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2798:5:14"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2765:32:14"},"nodeType":"YulFunctionCall","src":"2765:39:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2755:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2813:78:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2879:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"2884:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2820:58:14"},"nodeType":"YulFunctionCall","src":"2820:71:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2813:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2926:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"2933:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2922:3:14"},"nodeType":"YulFunctionCall","src":"2922:16:14"},{"name":"pos","nodeType":"YulIdentifier","src":"2940:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"2945:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2900:21:14"},"nodeType":"YulFunctionCall","src":"2900:52:14"},"nodeType":"YulExpressionStatement","src":"2900:52:14"},{"nodeType":"YulAssignment","src":"2961:46:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2972:3:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2999:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2977:21:14"},"nodeType":"YulFunctionCall","src":"2977:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2968:3:14"},"nodeType":"YulFunctionCall","src":"2968:39:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2961:3:14"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2722:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2729:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2737:3:14","type":""}],"src":"2649:364:14"},{"body":{"nodeType":"YulBlock","src":"3137:195:14","statements":[{"nodeType":"YulAssignment","src":"3147:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3159:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3170:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3155:3:14"},"nodeType":"YulFunctionCall","src":"3155:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3147:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3194:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3205:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3190:3:14"},"nodeType":"YulFunctionCall","src":"3190:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3213:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"3219:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3209:3:14"},"nodeType":"YulFunctionCall","src":"3209:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3183:6:14"},"nodeType":"YulFunctionCall","src":"3183:47:14"},"nodeType":"YulExpressionStatement","src":"3183:47:14"},{"nodeType":"YulAssignment","src":"3239:86:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3311:6:14"},{"name":"tail","nodeType":"YulIdentifier","src":"3320:4:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3247:63:14"},"nodeType":"YulFunctionCall","src":"3247:78:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3239:4:14"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3109:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3121:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3132:4:14","type":""}],"src":"3019:313:14"}]},"contents":"{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: delegate call to non-co\")\n\n        mstore(add(memPtr, 32), \"ntract\")\n\n    }\n\n    function abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052366100135761001161001d565b005b61001b61001d565b005b610025610091565b610035610030610093565b6100a2565b565b606061005c83836040518060600160405280602781526020016103ff602791396100c8565b905092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000819050919050565b565b600061009d610195565b905090565b3660008037600080366000845af43d6000803e80600081146100c3573d6000f35b3d6000fd5b60606100d384610064565b610112576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610109906102d6565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168560405161013a9190610370565b600060405180830381855af49150503d8060008114610175576040519150601f19603f3d011682016040523d82523d6000602084013e61017a565b606091505b509150915061018a8282866101ec565b925050509392505050565b60006101c37f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610087565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606083156101fc5782905061024c565b60008351111561020f5782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024391906103dc565b60405180910390fd5b9392505050565b600082825260208201905092915050565b7f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60008201527f6e74726163740000000000000000000000000000000000000000000000000000602082015250565b60006102c0602683610253565b91506102cb82610264565b604082019050919050565b600060208201905081810360008301526102ef816102b3565b9050919050565b600081519050919050565b600081905092915050565b60005b8381101561032a57808201518184015260208101905061030f565b83811115610339576000848401525b50505050565b600061034a826102f6565b6103548185610301565b935061036481856020860161030c565b80840191505092915050565b600061037c828461033f565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b60006103ae82610387565b6103b88185610253565b93506103c881856020860161030c565b6103d181610392565b840191505092915050565b600060208201905081810360008301526103f681846103a3565b90509291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212201e83f17052c1e3474b36bec8e89ba04f5d39da712b9c9930c3b57c7eed1e26c564736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x1D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B PUSH2 0x1D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25 PUSH2 0x91 JUMP JUMPDEST PUSH2 0x35 PUSH2 0x30 PUSH2 0x93 JUMP JUMPDEST PUSH2 0xA2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5C DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3FF PUSH1 0x27 SWAP2 CODECOPY PUSH2 0xC8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D PUSH2 0x195 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC3 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 PUSH2 0xD3 DUP5 PUSH2 0x64 JUMP JUMPDEST PUSH2 0x112 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109 SWAP1 PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x370 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x175 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x17A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x18A DUP3 DUP3 DUP7 PUSH2 0x1EC JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C3 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x87 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1FC JUMPI DUP3 SWAP1 POP PUSH2 0x24C JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x20F JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E74726163740000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C0 PUSH1 0x26 DUP4 PUSH2 0x253 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CB DUP3 PUSH2 0x264 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2EF DUP2 PUSH2 0x2B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x32A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x30F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34A DUP3 PUSH2 0x2F6 JUMP JUMPDEST PUSH2 0x354 DUP2 DUP6 PUSH2 0x301 JUMP JUMPDEST SWAP4 POP PUSH2 0x364 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x30C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37C DUP3 DUP5 PUSH2 0x33F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AE DUP3 PUSH2 0x387 JUMP JUMPDEST PUSH2 0x3B8 DUP2 DUP6 PUSH2 0x253 JUMP JUMPDEST SWAP4 POP PUSH2 0x3C8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x30C JUMP JUMPDEST PUSH2 0x3D1 DUP2 PUSH2 0x392 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F6 DUP2 DUP5 PUSH2 0x3A3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x706673582212201E83F1 PUSH17 0x52C1E3474B36BEC8E89BA04F5D39DA712B SWAP13 SWAP10 ADDRESS 0xC3 0xB5 PUSH29 0x7EED1E26C564736F6C6343000809003300000000000000000000000000 ","sourceMap":"567:723:2:-:0;;;;;;2898:11:4;:9;:11::i;:::-;567:723:2;;2675:11:4;:9;:11::i;:::-;567:723:2;2322:110:4;2370:17;:15;:17::i;:::-;2397:28;2407:17;:15;:17::i;:::-;2397:9;:28::i;:::-;2322:110::o;6570:198:8:-;6653:12;6684:77;6705:6;6713:4;6684:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6677:84;;6570:198;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;1614:190:10:-;1675:21;1784:4;1774:14;;1614:190;;;:::o;3198:46:4:-;:::o;1148:140:2:-;1215:12;1246:35;:33;:35::i;:::-;1239:42;;1148:140;:::o;948:895:4:-;1286:14;1283:1;1280;1267:34;1500:1;1497;1481:14;1478:1;1462:14;1455:5;1442:60;1576:16;1573:1;1570;1555:38;1614:6;1686:1;1681:66;;;;1796:16;1793:1;1786:27;1681:66;1716:16;1713:1;1706:27;6954:387:8;7095:12;7127:18;7138:6;7127:10;:18::i;:::-;7119:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;7200:12;7214:23;7241:6;:19;;7261:4;7241:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7199:67;;;;7283:51;7300:7;7309:10;7321:12;7283:16;:51::i;:::-;7276:58;;;;6954:387;;;;;:::o;1301:140:3:-;1354:7;1380:48;1030:66;1407:20;;1380:26;:48::i;:::-;:54;;;;;;;;;;;;1373:61;;1301:140;:::o;7561:742:8:-;7707:12;7735:7;7731:566;;;7765:10;7758:17;;;;7731:566;7896:1;7876:10;:17;:21;7872:415;;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;7872:415;8259:12;8252:20;;;;;;;;;;;:::i;:::-;;;;;;;;7561:742;;;;;;:::o;7:169:14:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:225::-;322:34;318:1;310:6;306:14;299:58;391:8;386:2;378:6;374:15;367:33;182:225;:::o;413:366::-;555:3;576:67;640:2;635:3;576:67;:::i;:::-;569:74;;652:93;741:3;652:93;:::i;:::-;770:2;765:3;761:12;754:19;;413:366;;;:::o;785:419::-;951:4;989:2;978:9;974:18;966:26;;1038:9;1032:4;1028:20;1024:1;1013:9;1009:17;1002:47;1066:131;1192:4;1066:131;:::i;:::-;1058:139;;785:419;;;:::o;1210:98::-;1261:6;1295:5;1289:12;1279:22;;1210:98;;;:::o;1314:147::-;1415:11;1452:3;1437:18;;1314:147;;;;:::o;1467:307::-;1535:1;1545:113;1559:6;1556:1;1553:13;1545:113;;;1644:1;1639:3;1635:11;1629:18;1625:1;1620:3;1616:11;1609:39;1581:2;1578:1;1574:10;1569:15;;1545:113;;;1676:6;1673:1;1670:13;1667:101;;;1756:1;1747:6;1742:3;1738:16;1731:27;1667:101;1516:258;1467:307;;;:::o;1780:373::-;1884:3;1912:38;1944:5;1912:38;:::i;:::-;1966:88;2047:6;2042:3;1966:88;:::i;:::-;1959:95;;2063:52;2108:6;2103:3;2096:4;2089:5;2085:16;2063:52;:::i;:::-;2140:6;2135:3;2131:16;2124:23;;1888:265;1780:373;;;;:::o;2159:271::-;2289:3;2311:93;2400:3;2391:6;2311:93;:::i;:::-;2304:100;;2421:3;2414:10;;2159:271;;;;:::o;2436:99::-;2488:6;2522:5;2516:12;2506:22;;2436:99;;;:::o;2541:102::-;2582:6;2633:2;2629:7;2624:2;2617:5;2613:14;2609:28;2599:38;;2541:102;;;:::o;2649:364::-;2737:3;2765:39;2798:5;2765:39;:::i;:::-;2820:71;2884:6;2879:3;2820:71;:::i;:::-;2813:78;;2900:52;2945:6;2940:3;2933:4;2926:5;2922:16;2900:52;:::i;:::-;2977:29;2999:6;2977:29;:::i;:::-;2972:3;2968:39;2961:46;;2741:272;2649:364;;;;:::o;3019:313::-;3132:4;3170:2;3159:9;3155:18;3147:26;;3219:9;3213:4;3209:20;3205:1;3194:9;3190:17;3183:47;3247:78;3320:4;3311:6;3247:78;:::i;:::-;3239:86;;3019:313;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"223000","executionCost":"infinite","totalCost":"infinite"},"external":{"":"infinite"},"internal":{"_implementation()":"2249"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the upgradeable proxy with an initial implementation specified by `_logic`. If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":\"ERC1967Proxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/ERC1967/ERC1967Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"./ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializing the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        _upgradeToAndCall(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal view virtual override returns (address impl) {\\n        return ERC1967Upgrade._getImplementation();\\n    }\\n}\\n\",\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n *\\n * @custom:oz-upgrades-unsafe-allow delegatecall\\n */\\nabstract contract ERC1967Upgrade {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Emitted when the beacon is upgraded.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            Address.isContract(IBeacon(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(\\n        address newBeacon,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xabf3f59bc0e5423eae45e459dbe92e7052c6983628d39008590edc852a62f94a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":{"ERC1967Upgrade":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"delegatecall","details":"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._","events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is upgraded."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{},"stateVariables":{"_ADMIN_SLOT":{"details":"Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."},"_BEACON_SLOT":{"details":"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."},"_IMPLEMENTATION_SLOT":{"details":"Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"delegatecall\",\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is upgraded.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":\"ERC1967Upgrade\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n *\\n * @custom:oz-upgrades-unsafe-allow delegatecall\\n */\\nabstract contract ERC1967Upgrade {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Emitted when the beacon is upgraded.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            Address.isContract(IBeacon(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(\\n        address newBeacon,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xabf3f59bc0e5423eae45e459dbe92e7052c6983628d39008590edc852a62f94a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/Proxy.sol":{"Proxy":{"abi":[{"stateMutability":"payable","type":"fallback"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"details":"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"This is the interface that {BeaconProxy} expects of its beacon.","kind":"dev","methods":{"implementation()":{"details":"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol":{"ProxyAdmin":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"contract TransparentUpgradeableProxy","name":"proxy","type":"address"},{"internalType":"address","name":"newAdmin","type":"address"}],"name":"changeProxyAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract TransparentUpgradeableProxy","name":"proxy","type":"address"}],"name":"getProxyAdmin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract TransparentUpgradeableProxy","name":"proxy","type":"address"}],"name":"getProxyImplementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract TransparentUpgradeableProxy","name":"proxy","type":"address"},{"internalType":"address","name":"implementation","type":"address"}],"name":"upgrade","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract TransparentUpgradeableProxy","name":"proxy","type":"address"},{"internalType":"address","name":"implementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"details":"This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.","kind":"dev","methods":{"changeProxyAdmin(address,address)":{"details":"Changes the admin of `proxy` to `newAdmin`. Requirements: - This contract must be the current admin of `proxy`."},"getProxyAdmin(address)":{"details":"Returns the current admin of `proxy`. Requirements: - This contract must be the admin of `proxy`."},"getProxyImplementation(address)":{"details":"Returns the current implementation of `proxy`. Requirements: - This contract must be the admin of `proxy`."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"upgrade(address,address)":{"details":"Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}. Requirements: - This contract must be the admin of `proxy`."},"upgradeAndCall(address,address,bytes)":{"details":"Upgrades `proxy` to `implementation` and calls a function on the new implementation. See {TransparentUpgradeableProxy-upgradeToAndCall}. Requirements: - This contract must be the admin of `proxy`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_msgSender_1130":{"entryPoint":50,"id":1130,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":58,"id":111,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610ccd8061010d6000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461012857806399a88ec414610144578063f2fde38b1461016d578063f3b7dead146101965761007b565b8063204e1c7a14610080578063715018a6146100bd5780637eff275e146100d45780638da5cb5b146100fd575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a291906106f3565b6101d3565b6040516100b49190610741565b60405180910390f35b3480156100c957600080fd5b506100d2610267565b005b3480156100e057600080fd5b506100fb60048036038101906100f69190610788565b61027b565b005b34801561010957600080fd5b506101126102f2565b60405161011f9190610741565b60405180910390f35b610142600480360381019061013d919061090e565b61031b565b005b34801561015057600080fd5b5061016b60048036038101906101669190610788565b610396565b005b34801561017957600080fd5b50610194600480360381019061018f919061097d565b61040d565b005b3480156101a257600080fd5b506101bd60048036038101906101b891906106f3565b610491565b6040516101ca9190610741565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff166040516101fb90610a01565b600060405180830381855afa9150503d8060008114610236576040519150601f19603f3d011682016040523d82523d6000602084013e61023b565b606091505b50915091508161024a57600080fd5b8080602001905181019061025e9190610a42565b92505050919050565b61026f610525565b61027960006105a3565b565b610283610525565b8173ffffffffffffffffffffffffffffffffffffffff16638f283970826040518263ffffffff1660e01b81526004016102bc9190610741565b600060405180830381600087803b1580156102d657600080fd5b505af11580156102ea573d6000803e3d6000fd5b505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610323610525565b8273ffffffffffffffffffffffffffffffffffffffff16634f1ef2863484846040518463ffffffff1660e01b815260040161035f929190610af7565b6000604051808303818588803b15801561037857600080fd5b505af115801561038c573d6000803e3d6000fd5b5050505050505050565b61039e610525565b8173ffffffffffffffffffffffffffffffffffffffff16633659cfe6826040518263ffffffff1660e01b81526004016103d79190610741565b600060405180830381600087803b1580156103f157600080fd5b505af1158015610405573d6000803e3d6000fd5b505050505050565b610415610525565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610485576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047c90610baa565b60405180910390fd5b61048e816105a3565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff166040516104b990610c16565b600060405180830381855afa9150503d80600081146104f4576040519150601f19603f3d011682016040523d82523d6000602084013e6104f9565b606091505b50915091508161050857600080fd5b8080602001905181019061051c9190610a42565b92505050919050565b61052d610667565b73ffffffffffffffffffffffffffffffffffffffff1661054b6102f2565b73ffffffffffffffffffffffffffffffffffffffff16146105a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059890610c77565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106ae82610683565b9050919050565b60006106c0826106a3565b9050919050565b6106d0816106b5565b81146106db57600080fd5b50565b6000813590506106ed816106c7565b92915050565b60006020828403121561070957610708610679565b5b6000610717848285016106de565b91505092915050565b600061072b82610683565b9050919050565b61073b81610720565b82525050565b60006020820190506107566000830184610732565b92915050565b61076581610720565b811461077057600080fd5b50565b6000813590506107828161075c565b92915050565b6000806040838503121561079f5761079e610679565b5b60006107ad858286016106de565b92505060206107be85828601610773565b9150509250929050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61081b826107d2565b810181811067ffffffffffffffff8211171561083a576108396107e3565b5b80604052505050565b600061084d61066f565b90506108598282610812565b919050565b600067ffffffffffffffff821115610879576108786107e3565b5b610882826107d2565b9050602081019050919050565b82818337600083830152505050565b60006108b16108ac8461085e565b610843565b9050828152602081018484840111156108cd576108cc6107cd565b5b6108d884828561088f565b509392505050565b600082601f8301126108f5576108f46107c8565b5b813561090584826020860161089e565b91505092915050565b60008060006060848603121561092757610926610679565b5b6000610935868287016106de565b935050602061094686828701610773565b925050604084013567ffffffffffffffff8111156109675761096661067e565b5b610973868287016108e0565b9150509250925092565b60006020828403121561099357610992610679565b5b60006109a184828501610773565b91505092915050565b600081905092915050565b7f5c60da1b00000000000000000000000000000000000000000000000000000000600082015250565b60006109eb6004836109aa565b91506109f6826109b5565b600482019050919050565b6000610a0c826109de565b9150819050919050565b610a1f816106a3565b8114610a2a57600080fd5b50565b600081519050610a3c81610a16565b92915050565b600060208284031215610a5857610a57610679565b5b6000610a6684828501610a2d565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610aa9578082015181840152602081019050610a8e565b83811115610ab8576000848401525b50505050565b6000610ac982610a6f565b610ad38185610a7a565b9350610ae3818560208601610a8b565b610aec816107d2565b840191505092915050565b6000604082019050610b0c6000830185610732565b8181036020830152610b1e8184610abe565b90509392505050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610b94602683610b27565b9150610b9f82610b38565b604082019050919050565b60006020820190508181036000830152610bc381610b87565b9050919050565b7ff851a44000000000000000000000000000000000000000000000000000000000600082015250565b6000610c006004836109aa565b9150610c0b82610bca565b600482019050919050565b6000610c2182610bf3565b9150819050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610c61602083610b27565b9150610c6c82610c2b565b602082019050919050565b60006020820190508181036000830152610c9081610c54565b905091905056fea2646970667358221220b7c550633f23ecd65746c79e1635e22add2396243922eff50d7b9b83c942f20664736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xCCD DUP1 PUSH2 0x10D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9623609D GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x9623609D EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x99A88EC4 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xF3B7DEAD EQ PUSH2 0x196 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x204E1C7A EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x7EFF275E EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x741 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD2 PUSH2 0x267 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x788 JUMP JUMPDEST PUSH2 0x27B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x112 PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x741 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13D SWAP2 SWAP1 PUSH2 0x90E JUMP JUMPDEST PUSH2 0x31B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x788 JUMP JUMPDEST PUSH2 0x396 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x97D JUMP JUMPDEST PUSH2 0x40D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x491 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x741 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP1 PUSH2 0xA01 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x236 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x25E SWAP2 SWAP1 PUSH2 0xA42 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26F PUSH2 0x525 JUMP JUMPDEST PUSH2 0x279 PUSH1 0x0 PUSH2 0x5A3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x283 PUSH2 0x525 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8F283970 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x741 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x323 PUSH2 0x525 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4F1EF286 CALLVALUE DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35F SWAP3 SWAP2 SWAP1 PUSH2 0xAF7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x38C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x39E PUSH2 0x525 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3659CFE6 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0x741 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x405 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x415 PUSH2 0x525 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x485 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47C SWAP1 PUSH2 0xBAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x48E DUP2 PUSH2 0x5A3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x4B9 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4F4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x508 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x51C SWAP2 SWAP1 PUSH2 0xA42 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52D PUSH2 0x667 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x54B PUSH2 0x2F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x598 SWAP1 PUSH2 0xC77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6AE DUP3 PUSH2 0x683 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C0 DUP3 PUSH2 0x6A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6D0 DUP2 PUSH2 0x6B5 JUMP JUMPDEST DUP2 EQ PUSH2 0x6DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6ED DUP2 PUSH2 0x6C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x709 JUMPI PUSH2 0x708 PUSH2 0x679 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x717 DUP5 DUP3 DUP6 ADD PUSH2 0x6DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x72B DUP3 PUSH2 0x683 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x73B DUP2 PUSH2 0x720 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x756 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x732 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x765 DUP2 PUSH2 0x720 JUMP JUMPDEST DUP2 EQ PUSH2 0x770 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x782 DUP2 PUSH2 0x75C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x79F JUMPI PUSH2 0x79E PUSH2 0x679 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7AD DUP6 DUP3 DUP7 ADD PUSH2 0x6DE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7BE DUP6 DUP3 DUP7 ADD PUSH2 0x773 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x81B DUP3 PUSH2 0x7D2 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x83A JUMPI PUSH2 0x839 PUSH2 0x7E3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x84D PUSH2 0x66F JUMP JUMPDEST SWAP1 POP PUSH2 0x859 DUP3 DUP3 PUSH2 0x812 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x879 JUMPI PUSH2 0x878 PUSH2 0x7E3 JUMP JUMPDEST JUMPDEST PUSH2 0x882 DUP3 PUSH2 0x7D2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B1 PUSH2 0x8AC DUP5 PUSH2 0x85E JUMP JUMPDEST PUSH2 0x843 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x8CD JUMPI PUSH2 0x8CC PUSH2 0x7CD JUMP JUMPDEST JUMPDEST PUSH2 0x8D8 DUP5 DUP3 DUP6 PUSH2 0x88F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8F5 JUMPI PUSH2 0x8F4 PUSH2 0x7C8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x905 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x89E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x927 JUMPI PUSH2 0x926 PUSH2 0x679 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x935 DUP7 DUP3 DUP8 ADD PUSH2 0x6DE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x946 DUP7 DUP3 DUP8 ADD PUSH2 0x773 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x967 JUMPI PUSH2 0x966 PUSH2 0x67E JUMP JUMPDEST JUMPDEST PUSH2 0x973 DUP7 DUP3 DUP8 ADD PUSH2 0x8E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x993 JUMPI PUSH2 0x992 PUSH2 0x679 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9A1 DUP5 DUP3 DUP6 ADD PUSH2 0x773 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9EB PUSH1 0x4 DUP4 PUSH2 0x9AA JUMP JUMPDEST SWAP2 POP PUSH2 0x9F6 DUP3 PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA0C DUP3 PUSH2 0x9DE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA1F DUP2 PUSH2 0x6A3 JUMP JUMPDEST DUP2 EQ PUSH2 0xA2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA3C DUP2 PUSH2 0xA16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA58 JUMPI PUSH2 0xA57 PUSH2 0x679 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA66 DUP5 DUP3 DUP6 ADD PUSH2 0xA2D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAA9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA8E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xAB8 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC9 DUP3 PUSH2 0xA6F JUMP JUMPDEST PUSH2 0xAD3 DUP2 DUP6 PUSH2 0xA7A JUMP JUMPDEST SWAP4 POP PUSH2 0xAE3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA8B JUMP JUMPDEST PUSH2 0xAEC DUP2 PUSH2 0x7D2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB0C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x732 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xB1E DUP2 DUP5 PUSH2 0xABE JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB94 PUSH1 0x26 DUP4 PUSH2 0xB27 JUMP JUMPDEST SWAP2 POP PUSH2 0xB9F DUP3 PUSH2 0xB38 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBC3 DUP2 PUSH2 0xB87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xF851A44000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC00 PUSH1 0x4 DUP4 PUSH2 0x9AA JUMP JUMPDEST SWAP2 POP PUSH2 0xC0B DUP3 PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC21 DUP3 PUSH2 0xBF3 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC61 PUSH1 0x20 DUP4 PUSH2 0xB27 JUMP JUMPDEST SWAP2 POP PUSH2 0xC6C DUP3 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC90 DUP2 PUSH2 0xC54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 0xC5 POP PUSH4 0x3F23ECD6 JUMPI CHAINID 0xC7 SWAP15 AND CALLDATALOAD 0xE2 0x2A 0xDD 0x23 SWAP7 0x24 CODECOPY 0x22 0xEF CREATE2 0xD PUSH28 0x9B83C942F20664736F6C634300080900330000000000000000000000 ","sourceMap":"435:2404:6:-:0;;;;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;435:2404:6;;640:96:9;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;435:2404:6:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_54":{"entryPoint":1317,"id":54,"parameterSlots":0,"returnSlots":0},"@_msgSender_1130":{"entryPoint":1639,"id":1130,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":1443,"id":111,"parameterSlots":1,"returnSlots":0},"@changeProxyAdmin_632":{"entryPoint":635,"id":632,"parameterSlots":2,"returnSlots":0},"@getProxyAdmin_614":{"entryPoint":1169,"id":614,"parameterSlots":1,"returnSlots":1},"@getProxyImplementation_580":{"entryPoint":467,"id":580,"parameterSlots":1,"returnSlots":1},"@owner_40":{"entryPoint":754,"id":40,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_68":{"entryPoint":615,"id":68,"parameterSlots":0,"returnSlots":0},"@transferOwnership_91":{"entryPoint":1037,"id":91,"parameterSlots":1,"returnSlots":0},"@upgradeAndCall_674":{"entryPoint":795,"id":674,"parameterSlots":3,"returnSlots":0},"@upgrade_650":{"entryPoint":918,"id":650,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":2206,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":1907,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable_fromMemory":{"entryPoint":2605,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":2272,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_TransparentUpgradeableProxy_$823":{"entryPoint":1758,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2429,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payable_fromMemory":{"entryPoint":2626,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_TransparentUpgradeableProxy_$823":{"entryPoint":1779,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_TransparentUpgradeableProxy_$823t_address":{"entryPoint":1928,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_contract$_TransparentUpgradeableProxy_$823t_addresst_bytes_memory_ptr":{"entryPoint":2318,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1842,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":2750,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":2951,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2526,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":3156,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":3059,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":2561,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":3094,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1857,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":2807,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2986,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3191,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":2115,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1647,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":2142,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":2671,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":2682,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2474,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2855,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1824,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":1699,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_TransparentUpgradeableProxy_$823":{"entryPoint":1717,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1667,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":2191,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":2699,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":2066,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x41":{"entryPoint":2019,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1992,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1997,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1662,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1657,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2002,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":2872,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29":{"entryPoint":2485,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":3115,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7":{"entryPoint":3018,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1884,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":2582,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_TransparentUpgradeableProxy_$823":{"entryPoint":1735,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:12652:14","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:14","statements":[{"nodeType":"YulAssignment","src":"57:19:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:14"},"nodeType":"YulFunctionCall","src":"67:9:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:14"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:14","type":""}],"src":"7:75:14"},{"body":{"nodeType":"YulBlock","src":"177:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:14"},"nodeType":"YulFunctionCall","src":"187:12:14"},"nodeType":"YulExpressionStatement","src":"187:12:14"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:14"},{"body":{"nodeType":"YulBlock","src":"300:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:14"},"nodeType":"YulFunctionCall","src":"310:12:14"},"nodeType":"YulExpressionStatement","src":"310:12:14"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:14"},{"body":{"nodeType":"YulBlock","src":"379:81:14","statements":[{"nodeType":"YulAssignment","src":"389:65:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:14"},"nodeType":"YulFunctionCall","src":"400:54:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:14"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:14","type":""}],"src":"334:126:14"},{"body":{"nodeType":"YulBlock","src":"519:51:14","statements":[{"nodeType":"YulAssignment","src":"529:35:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"558:5:14"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"540:17:14"},"nodeType":"YulFunctionCall","src":"540:24:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"529:7:14"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"501:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"511:7:14","type":""}],"src":"466:104:14"},{"body":{"nodeType":"YulBlock","src":"656:59:14","statements":[{"nodeType":"YulAssignment","src":"666:43:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"703:5:14"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"677:25:14"},"nodeType":"YulFunctionCall","src":"677:32:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"666:7:14"}]}]},"name":"cleanup_t_contract$_TransparentUpgradeableProxy_$823","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"638:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"648:7:14","type":""}],"src":"576:139:14"},{"body":{"nodeType":"YulBlock","src":"799:114:14","statements":[{"body":{"nodeType":"YulBlock","src":"891:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"900:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"903:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"893:6:14"},"nodeType":"YulFunctionCall","src":"893:12:14"},"nodeType":"YulExpressionStatement","src":"893:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"822:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"882:5:14"}],"functionName":{"name":"cleanup_t_contract$_TransparentUpgradeableProxy_$823","nodeType":"YulIdentifier","src":"829:52:14"},"nodeType":"YulFunctionCall","src":"829:59:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"819:2:14"},"nodeType":"YulFunctionCall","src":"819:70:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"812:6:14"},"nodeType":"YulFunctionCall","src":"812:78:14"},"nodeType":"YulIf","src":"809:98:14"}]},"name":"validator_revert_t_contract$_TransparentUpgradeableProxy_$823","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"792:5:14","type":""}],"src":"721:192:14"},{"body":{"nodeType":"YulBlock","src":"1006:122:14","statements":[{"nodeType":"YulAssignment","src":"1016:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1038:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1025:12:14"},"nodeType":"YulFunctionCall","src":"1025:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1016:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1116:5:14"}],"functionName":{"name":"validator_revert_t_contract$_TransparentUpgradeableProxy_$823","nodeType":"YulIdentifier","src":"1054:61:14"},"nodeType":"YulFunctionCall","src":"1054:68:14"},"nodeType":"YulExpressionStatement","src":"1054:68:14"}]},"name":"abi_decode_t_contract$_TransparentUpgradeableProxy_$823","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"984:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"992:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1000:5:14","type":""}],"src":"919:209:14"},{"body":{"nodeType":"YulBlock","src":"1235:298:14","statements":[{"body":{"nodeType":"YulBlock","src":"1281:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1283:77:14"},"nodeType":"YulFunctionCall","src":"1283:79:14"},"nodeType":"YulExpressionStatement","src":"1283:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1256:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1265:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1252:3:14"},"nodeType":"YulFunctionCall","src":"1252:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1277:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1248:3:14"},"nodeType":"YulFunctionCall","src":"1248:32:14"},"nodeType":"YulIf","src":"1245:119:14"},{"nodeType":"YulBlock","src":"1374:152:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1389:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"1403:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1393:6:14","type":""}]},{"nodeType":"YulAssignment","src":"1418:98:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1488:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"1499:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1484:3:14"},"nodeType":"YulFunctionCall","src":"1484:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1508:7:14"}],"functionName":{"name":"abi_decode_t_contract$_TransparentUpgradeableProxy_$823","nodeType":"YulIdentifier","src":"1428:55:14"},"nodeType":"YulFunctionCall","src":"1428:88:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1418:6:14"}]}]}]},"name":"abi_decode_tuple_t_contract$_TransparentUpgradeableProxy_$823","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1205:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1216:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1228:6:14","type":""}],"src":"1134:399:14"},{"body":{"nodeType":"YulBlock","src":"1584:51:14","statements":[{"nodeType":"YulAssignment","src":"1594:35:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1623:5:14"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1605:17:14"},"nodeType":"YulFunctionCall","src":"1605:24:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1594:7:14"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1566:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1576:7:14","type":""}],"src":"1539:96:14"},{"body":{"nodeType":"YulBlock","src":"1706:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1723:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1728:17:14"},"nodeType":"YulFunctionCall","src":"1728:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1716:6:14"},"nodeType":"YulFunctionCall","src":"1716:37:14"},"nodeType":"YulExpressionStatement","src":"1716:37:14"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1694:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1701:3:14","type":""}],"src":"1641:118:14"},{"body":{"nodeType":"YulBlock","src":"1863:124:14","statements":[{"nodeType":"YulAssignment","src":"1873:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1885:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1896:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1881:3:14"},"nodeType":"YulFunctionCall","src":"1881:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1873:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1953:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1966:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1977:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1962:3:14"},"nodeType":"YulFunctionCall","src":"1962:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"1909:43:14"},"nodeType":"YulFunctionCall","src":"1909:71:14"},"nodeType":"YulExpressionStatement","src":"1909:71:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1835:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1847:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1858:4:14","type":""}],"src":"1765:222:14"},{"body":{"nodeType":"YulBlock","src":"2036:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"2093:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2102:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2105:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2095:6:14"},"nodeType":"YulFunctionCall","src":"2095:12:14"},"nodeType":"YulExpressionStatement","src":"2095:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2059:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2084:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2066:17:14"},"nodeType":"YulFunctionCall","src":"2066:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2056:2:14"},"nodeType":"YulFunctionCall","src":"2056:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2049:6:14"},"nodeType":"YulFunctionCall","src":"2049:43:14"},"nodeType":"YulIf","src":"2046:63:14"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2029:5:14","type":""}],"src":"1993:122:14"},{"body":{"nodeType":"YulBlock","src":"2173:87:14","statements":[{"nodeType":"YulAssignment","src":"2183:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2205:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2192:12:14"},"nodeType":"YulFunctionCall","src":"2192:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2183:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2248:5:14"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2221:26:14"},"nodeType":"YulFunctionCall","src":"2221:33:14"},"nodeType":"YulExpressionStatement","src":"2221:33:14"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2151:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"2159:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2167:5:14","type":""}],"src":"2121:139:14"},{"body":{"nodeType":"YulBlock","src":"2384:426:14","statements":[{"body":{"nodeType":"YulBlock","src":"2430:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2432:77:14"},"nodeType":"YulFunctionCall","src":"2432:79:14"},"nodeType":"YulExpressionStatement","src":"2432:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2405:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2414:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2401:3:14"},"nodeType":"YulFunctionCall","src":"2401:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2426:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2397:3:14"},"nodeType":"YulFunctionCall","src":"2397:32:14"},"nodeType":"YulIf","src":"2394:119:14"},{"nodeType":"YulBlock","src":"2523:152:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2538:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2552:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2542:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2567:98:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2637:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2648:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2633:3:14"},"nodeType":"YulFunctionCall","src":"2633:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2657:7:14"}],"functionName":{"name":"abi_decode_t_contract$_TransparentUpgradeableProxy_$823","nodeType":"YulIdentifier","src":"2577:55:14"},"nodeType":"YulFunctionCall","src":"2577:88:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2567:6:14"}]}]},{"nodeType":"YulBlock","src":"2685:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2700:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2714:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2704:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2730:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2765:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2776:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2761:3:14"},"nodeType":"YulFunctionCall","src":"2761:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2785:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2740:20:14"},"nodeType":"YulFunctionCall","src":"2740:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2730:6:14"}]}]}]},"name":"abi_decode_tuple_t_contract$_TransparentUpgradeableProxy_$823t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2346:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2357:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2369:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2377:6:14","type":""}],"src":"2266:544:14"},{"body":{"nodeType":"YulBlock","src":"2905:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2922:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2925:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2915:6:14"},"nodeType":"YulFunctionCall","src":"2915:12:14"},"nodeType":"YulExpressionStatement","src":"2915:12:14"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"2816:117:14"},{"body":{"nodeType":"YulBlock","src":"3028:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3045:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3048:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3038:6:14"},"nodeType":"YulFunctionCall","src":"3038:12:14"},"nodeType":"YulExpressionStatement","src":"3038:12:14"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"2939:117:14"},{"body":{"nodeType":"YulBlock","src":"3110:54:14","statements":[{"nodeType":"YulAssignment","src":"3120:38:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3138:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"3145:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3134:3:14"},"nodeType":"YulFunctionCall","src":"3134:14:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3154:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3150:3:14"},"nodeType":"YulFunctionCall","src":"3150:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3130:3:14"},"nodeType":"YulFunctionCall","src":"3130:28:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3120:6:14"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3093:5:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3103:6:14","type":""}],"src":"3062:102:14"},{"body":{"nodeType":"YulBlock","src":"3198:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3215:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3218:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3208:6:14"},"nodeType":"YulFunctionCall","src":"3208:88:14"},"nodeType":"YulExpressionStatement","src":"3208:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3312:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3315:4:14","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3305:6:14"},"nodeType":"YulFunctionCall","src":"3305:15:14"},"nodeType":"YulExpressionStatement","src":"3305:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3336:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3339:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3329:6:14"},"nodeType":"YulFunctionCall","src":"3329:15:14"},"nodeType":"YulExpressionStatement","src":"3329:15:14"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3170:180:14"},{"body":{"nodeType":"YulBlock","src":"3399:238:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3409:58:14","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3431:6:14"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3461:4:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3439:21:14"},"nodeType":"YulFunctionCall","src":"3439:27:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3427:3:14"},"nodeType":"YulFunctionCall","src":"3427:40:14"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3413:10:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3578:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3580:16:14"},"nodeType":"YulFunctionCall","src":"3580:18:14"},"nodeType":"YulExpressionStatement","src":"3580:18:14"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3521:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"3533:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3518:2:14"},"nodeType":"YulFunctionCall","src":"3518:34:14"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3557:10:14"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3569:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3554:2:14"},"nodeType":"YulFunctionCall","src":"3554:22:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3515:2:14"},"nodeType":"YulFunctionCall","src":"3515:62:14"},"nodeType":"YulIf","src":"3512:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3616:2:14","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3620:10:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3609:6:14"},"nodeType":"YulFunctionCall","src":"3609:22:14"},"nodeType":"YulExpressionStatement","src":"3609:22:14"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3385:6:14","type":""},{"name":"size","nodeType":"YulTypedName","src":"3393:4:14","type":""}],"src":"3356:281:14"},{"body":{"nodeType":"YulBlock","src":"3684:88:14","statements":[{"nodeType":"YulAssignment","src":"3694:30:14","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"3704:18:14"},"nodeType":"YulFunctionCall","src":"3704:20:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3694:6:14"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3753:6:14"},{"name":"size","nodeType":"YulIdentifier","src":"3761:4:14"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"3733:19:14"},"nodeType":"YulFunctionCall","src":"3733:33:14"},"nodeType":"YulExpressionStatement","src":"3733:33:14"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"3668:4:14","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3677:6:14","type":""}],"src":"3643:129:14"},{"body":{"nodeType":"YulBlock","src":"3844:241:14","statements":[{"body":{"nodeType":"YulBlock","src":"3949:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3951:16:14"},"nodeType":"YulFunctionCall","src":"3951:18:14"},"nodeType":"YulExpressionStatement","src":"3951:18:14"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3921:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"3929:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3918:2:14"},"nodeType":"YulFunctionCall","src":"3918:30:14"},"nodeType":"YulIf","src":"3915:56:14"},{"nodeType":"YulAssignment","src":"3981:37:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4011:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3989:21:14"},"nodeType":"YulFunctionCall","src":"3989:29:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3981:4:14"}]},{"nodeType":"YulAssignment","src":"4055:23:14","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4067:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"4073:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4063:3:14"},"nodeType":"YulFunctionCall","src":"4063:15:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4055:4:14"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"3828:6:14","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"3839:4:14","type":""}],"src":"3778:307:14"},{"body":{"nodeType":"YulBlock","src":"4142:103:14","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4165:3:14"},{"name":"src","nodeType":"YulIdentifier","src":"4170:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"4175:6:14"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4152:12:14"},"nodeType":"YulFunctionCall","src":"4152:30:14"},"nodeType":"YulExpressionStatement","src":"4152:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4223:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"4228:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4219:3:14"},"nodeType":"YulFunctionCall","src":"4219:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"4237:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4212:6:14"},"nodeType":"YulFunctionCall","src":"4212:27:14"},"nodeType":"YulExpressionStatement","src":"4212:27:14"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4124:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4129:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"4134:6:14","type":""}],"src":"4091:154:14"},{"body":{"nodeType":"YulBlock","src":"4334:327:14","statements":[{"nodeType":"YulAssignment","src":"4344:74:14","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4410:6:14"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"4369:40:14"},"nodeType":"YulFunctionCall","src":"4369:48:14"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4353:15:14"},"nodeType":"YulFunctionCall","src":"4353:65:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4344:5:14"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4434:5:14"},{"name":"length","nodeType":"YulIdentifier","src":"4441:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4427:6:14"},"nodeType":"YulFunctionCall","src":"4427:21:14"},"nodeType":"YulExpressionStatement","src":"4427:21:14"},{"nodeType":"YulVariableDeclaration","src":"4457:27:14","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4472:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"4479:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4468:3:14"},"nodeType":"YulFunctionCall","src":"4468:16:14"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4461:3:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"4522:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"4524:77:14"},"nodeType":"YulFunctionCall","src":"4524:79:14"},"nodeType":"YulExpressionStatement","src":"4524:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4503:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"4508:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4499:3:14"},"nodeType":"YulFunctionCall","src":"4499:16:14"},{"name":"end","nodeType":"YulIdentifier","src":"4517:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4496:2:14"},"nodeType":"YulFunctionCall","src":"4496:25:14"},"nodeType":"YulIf","src":"4493:112:14"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4638:3:14"},{"name":"dst","nodeType":"YulIdentifier","src":"4643:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"4648:6:14"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"4614:23:14"},"nodeType":"YulFunctionCall","src":"4614:41:14"},"nodeType":"YulExpressionStatement","src":"4614:41:14"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4307:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"4312:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"4320:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4328:5:14","type":""}],"src":"4251:410:14"},{"body":{"nodeType":"YulBlock","src":"4741:277:14","statements":[{"body":{"nodeType":"YulBlock","src":"4790:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"4792:77:14"},"nodeType":"YulFunctionCall","src":"4792:79:14"},"nodeType":"YulExpressionStatement","src":"4792:79:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4769:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"4777:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4765:3:14"},"nodeType":"YulFunctionCall","src":"4765:17:14"},{"name":"end","nodeType":"YulIdentifier","src":"4784:3:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4761:3:14"},"nodeType":"YulFunctionCall","src":"4761:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4754:6:14"},"nodeType":"YulFunctionCall","src":"4754:35:14"},"nodeType":"YulIf","src":"4751:122:14"},{"nodeType":"YulVariableDeclaration","src":"4882:34:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4909:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4896:12:14"},"nodeType":"YulFunctionCall","src":"4896:20:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4886:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4925:87:14","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4985:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"4993:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4981:3:14"},"nodeType":"YulFunctionCall","src":"4981:17:14"},{"name":"length","nodeType":"YulIdentifier","src":"5000:6:14"},{"name":"end","nodeType":"YulIdentifier","src":"5008:3:14"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"4934:46:14"},"nodeType":"YulFunctionCall","src":"4934:78:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4925:5:14"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4719:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"4727:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4735:5:14","type":""}],"src":"4680:338:14"},{"body":{"nodeType":"YulBlock","src":"5168:723:14","statements":[{"body":{"nodeType":"YulBlock","src":"5214:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5216:77:14"},"nodeType":"YulFunctionCall","src":"5216:79:14"},"nodeType":"YulExpressionStatement","src":"5216:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5189:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"5198:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5185:3:14"},"nodeType":"YulFunctionCall","src":"5185:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"5210:2:14","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5181:3:14"},"nodeType":"YulFunctionCall","src":"5181:32:14"},"nodeType":"YulIf","src":"5178:119:14"},{"nodeType":"YulBlock","src":"5307:152:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5322:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5336:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5326:6:14","type":""}]},{"nodeType":"YulAssignment","src":"5351:98:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5421:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5432:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5417:3:14"},"nodeType":"YulFunctionCall","src":"5417:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5441:7:14"}],"functionName":{"name":"abi_decode_t_contract$_TransparentUpgradeableProxy_$823","nodeType":"YulIdentifier","src":"5361:55:14"},"nodeType":"YulFunctionCall","src":"5361:88:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5351:6:14"}]}]},{"nodeType":"YulBlock","src":"5469:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5484:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5498:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5488:6:14","type":""}]},{"nodeType":"YulAssignment","src":"5514:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5549:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5560:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5545:3:14"},"nodeType":"YulFunctionCall","src":"5545:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5569:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5524:20:14"},"nodeType":"YulFunctionCall","src":"5524:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5514:6:14"}]}]},{"nodeType":"YulBlock","src":"5597:287:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5612:46:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5643:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5654:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5639:3:14"},"nodeType":"YulFunctionCall","src":"5639:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5626:12:14"},"nodeType":"YulFunctionCall","src":"5626:32:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5616:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"5705:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"5707:77:14"},"nodeType":"YulFunctionCall","src":"5707:79:14"},"nodeType":"YulExpressionStatement","src":"5707:79:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5677:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"5685:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5674:2:14"},"nodeType":"YulFunctionCall","src":"5674:30:14"},"nodeType":"YulIf","src":"5671:117:14"},{"nodeType":"YulAssignment","src":"5802:72:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5846:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5857:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5842:3:14"},"nodeType":"YulFunctionCall","src":"5842:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5866:7:14"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"5812:29:14"},"nodeType":"YulFunctionCall","src":"5812:62:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5802:6:14"}]}]}]},"name":"abi_decode_tuple_t_contract$_TransparentUpgradeableProxy_$823t_addresst_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5122:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5133:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5145:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5153:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5161:6:14","type":""}],"src":"5024:867:14"},{"body":{"nodeType":"YulBlock","src":"5963:263:14","statements":[{"body":{"nodeType":"YulBlock","src":"6009:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6011:77:14"},"nodeType":"YulFunctionCall","src":"6011:79:14"},"nodeType":"YulExpressionStatement","src":"6011:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5984:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"5993:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5980:3:14"},"nodeType":"YulFunctionCall","src":"5980:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"6005:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5976:3:14"},"nodeType":"YulFunctionCall","src":"5976:32:14"},"nodeType":"YulIf","src":"5973:119:14"},{"nodeType":"YulBlock","src":"6102:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"6117:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"6131:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6121:6:14","type":""}]},{"nodeType":"YulAssignment","src":"6146:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6181:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"6192:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6177:3:14"},"nodeType":"YulFunctionCall","src":"6177:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6201:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6156:20:14"},"nodeType":"YulFunctionCall","src":"6156:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6146:6:14"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5933:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5944:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5956:6:14","type":""}],"src":"5897:329:14"},{"body":{"nodeType":"YulBlock","src":"6345:34:14","statements":[{"nodeType":"YulAssignment","src":"6355:18:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"6370:3:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6355:11:14"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6317:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"6322:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6333:11:14","type":""}],"src":"6232:147:14"},{"body":{"nodeType":"YulBlock","src":"6491:108:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6513:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"6521:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6509:3:14"},"nodeType":"YulFunctionCall","src":"6509:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"6525:66:14","type":"","value":"0x5c60da1b00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6502:6:14"},"nodeType":"YulFunctionCall","src":"6502:90:14"},"nodeType":"YulExpressionStatement","src":"6502:90:14"}]},"name":"store_literal_in_memory_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6483:6:14","type":""}],"src":"6385:214:14"},{"body":{"nodeType":"YulBlock","src":"6768:235:14","statements":[{"nodeType":"YulAssignment","src":"6778:90:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6861:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"6866:1:14","type":"","value":"4"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"6785:75:14"},"nodeType":"YulFunctionCall","src":"6785:83:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6778:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6966:3:14"}],"functionName":{"name":"store_literal_in_memory_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29","nodeType":"YulIdentifier","src":"6877:88:14"},"nodeType":"YulFunctionCall","src":"6877:93:14"},"nodeType":"YulExpressionStatement","src":"6877:93:14"},{"nodeType":"YulAssignment","src":"6979:18:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6990:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"6995:1:14","type":"","value":"4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6986:3:14"},"nodeType":"YulFunctionCall","src":"6986:11:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6979:3:14"}]}]},"name":"abi_encode_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6756:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6764:3:14","type":""}],"src":"6605:398:14"},{"body":{"nodeType":"YulBlock","src":"7197:191:14","statements":[{"nodeType":"YulAssignment","src":"7208:154:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7358:3:14"}],"functionName":{"name":"abi_encode_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"7215:141:14"},"nodeType":"YulFunctionCall","src":"7215:147:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7208:3:14"}]},{"nodeType":"YulAssignment","src":"7372:10:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"7379:3:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7372:3:14"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7184:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7193:3:14","type":""}],"src":"7009:379:14"},{"body":{"nodeType":"YulBlock","src":"7445:87:14","statements":[{"body":{"nodeType":"YulBlock","src":"7510:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7519:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7522:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7512:6:14"},"nodeType":"YulFunctionCall","src":"7512:12:14"},"nodeType":"YulExpressionStatement","src":"7512:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7468:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7501:5:14"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"7475:25:14"},"nodeType":"YulFunctionCall","src":"7475:32:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7465:2:14"},"nodeType":"YulFunctionCall","src":"7465:43:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7458:6:14"},"nodeType":"YulFunctionCall","src":"7458:51:14"},"nodeType":"YulIf","src":"7455:71:14"}]},"name":"validator_revert_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7438:5:14","type":""}],"src":"7394:138:14"},{"body":{"nodeType":"YulBlock","src":"7609:88:14","statements":[{"nodeType":"YulAssignment","src":"7619:22:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7634:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7628:5:14"},"nodeType":"YulFunctionCall","src":"7628:13:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7619:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7685:5:14"}],"functionName":{"name":"validator_revert_t_address_payable","nodeType":"YulIdentifier","src":"7650:34:14"},"nodeType":"YulFunctionCall","src":"7650:41:14"},"nodeType":"YulExpressionStatement","src":"7650:41:14"}]},"name":"abi_decode_t_address_payable_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7587:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"7595:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7603:5:14","type":""}],"src":"7538:159:14"},{"body":{"nodeType":"YulBlock","src":"7788:282:14","statements":[{"body":{"nodeType":"YulBlock","src":"7834:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7836:77:14"},"nodeType":"YulFunctionCall","src":"7836:79:14"},"nodeType":"YulExpressionStatement","src":"7836:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7809:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"7818:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7805:3:14"},"nodeType":"YulFunctionCall","src":"7805:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"7830:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7801:3:14"},"nodeType":"YulFunctionCall","src":"7801:32:14"},"nodeType":"YulIf","src":"7798:119:14"},{"nodeType":"YulBlock","src":"7927:136:14","statements":[{"nodeType":"YulVariableDeclaration","src":"7942:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"7956:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7946:6:14","type":""}]},{"nodeType":"YulAssignment","src":"7971:82:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8025:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"8036:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8021:3:14"},"nodeType":"YulFunctionCall","src":"8021:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8045:7:14"}],"functionName":{"name":"abi_decode_t_address_payable_fromMemory","nodeType":"YulIdentifier","src":"7981:39:14"},"nodeType":"YulFunctionCall","src":"7981:72:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7971:6:14"}]}]}]},"name":"abi_decode_tuple_t_address_payable_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7758:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7769:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7781:6:14","type":""}],"src":"7703:367:14"},{"body":{"nodeType":"YulBlock","src":"8134:40:14","statements":[{"nodeType":"YulAssignment","src":"8145:22:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8161:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8155:5:14"},"nodeType":"YulFunctionCall","src":"8155:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8145:6:14"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8117:5:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8127:6:14","type":""}],"src":"8076:98:14"},{"body":{"nodeType":"YulBlock","src":"8275:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8292:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"8297:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8285:6:14"},"nodeType":"YulFunctionCall","src":"8285:19:14"},"nodeType":"YulExpressionStatement","src":"8285:19:14"},{"nodeType":"YulAssignment","src":"8313:29:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8332:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8337:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8328:3:14"},"nodeType":"YulFunctionCall","src":"8328:14:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8313:11:14"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8247:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"8252:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8263:11:14","type":""}],"src":"8180:168:14"},{"body":{"nodeType":"YulBlock","src":"8403:258:14","statements":[{"nodeType":"YulVariableDeclaration","src":"8413:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"8422:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8417:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"8482:63:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8507:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"8512:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8503:3:14"},"nodeType":"YulFunctionCall","src":"8503:11:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8526:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"8531:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8522:3:14"},"nodeType":"YulFunctionCall","src":"8522:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8516:5:14"},"nodeType":"YulFunctionCall","src":"8516:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8496:6:14"},"nodeType":"YulFunctionCall","src":"8496:39:14"},"nodeType":"YulExpressionStatement","src":"8496:39:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8443:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"8446:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8440:2:14"},"nodeType":"YulFunctionCall","src":"8440:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8454:19:14","statements":[{"nodeType":"YulAssignment","src":"8456:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8465:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"8468:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8461:3:14"},"nodeType":"YulFunctionCall","src":"8461:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8456:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"8436:3:14","statements":[]},"src":"8432:113:14"},{"body":{"nodeType":"YulBlock","src":"8579:76:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8629:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"8634:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8625:3:14"},"nodeType":"YulFunctionCall","src":"8625:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"8643:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8618:6:14"},"nodeType":"YulFunctionCall","src":"8618:27:14"},"nodeType":"YulExpressionStatement","src":"8618:27:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8560:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"8563:6:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8557:2:14"},"nodeType":"YulFunctionCall","src":"8557:13:14"},"nodeType":"YulIf","src":"8554:101:14"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8385:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8390:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"8395:6:14","type":""}],"src":"8354:307:14"},{"body":{"nodeType":"YulBlock","src":"8757:270:14","statements":[{"nodeType":"YulVariableDeclaration","src":"8767:52:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8813:5:14"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8781:31:14"},"nodeType":"YulFunctionCall","src":"8781:38:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8771:6:14","type":""}]},{"nodeType":"YulAssignment","src":"8828:77:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8893:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"8898:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8835:57:14"},"nodeType":"YulFunctionCall","src":"8835:70:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8828:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8940:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"8947:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8936:3:14"},"nodeType":"YulFunctionCall","src":"8936:16:14"},{"name":"pos","nodeType":"YulIdentifier","src":"8954:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"8959:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"8914:21:14"},"nodeType":"YulFunctionCall","src":"8914:52:14"},"nodeType":"YulExpressionStatement","src":"8914:52:14"},{"nodeType":"YulAssignment","src":"8975:46:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8986:3:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9013:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8991:21:14"},"nodeType":"YulFunctionCall","src":"8991:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8982:3:14"},"nodeType":"YulFunctionCall","src":"8982:39:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8975:3:14"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8738:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8745:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8753:3:14","type":""}],"src":"8667:360:14"},{"body":{"nodeType":"YulBlock","src":"9177:275:14","statements":[{"nodeType":"YulAssignment","src":"9187:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9199:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9210:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9195:3:14"},"nodeType":"YulFunctionCall","src":"9195:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9187:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9267:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9280:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9291:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9276:3:14"},"nodeType":"YulFunctionCall","src":"9276:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9223:43:14"},"nodeType":"YulFunctionCall","src":"9223:71:14"},"nodeType":"YulExpressionStatement","src":"9223:71:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9315:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9326:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9311:3:14"},"nodeType":"YulFunctionCall","src":"9311:18:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9335:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"9341:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9331:3:14"},"nodeType":"YulFunctionCall","src":"9331:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9304:6:14"},"nodeType":"YulFunctionCall","src":"9304:48:14"},"nodeType":"YulExpressionStatement","src":"9304:48:14"},{"nodeType":"YulAssignment","src":"9361:84:14","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9431:6:14"},{"name":"tail","nodeType":"YulIdentifier","src":"9440:4:14"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9369:61:14"},"nodeType":"YulFunctionCall","src":"9369:76:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9361:4:14"}]}]},"name":"abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9141:9:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9153:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9161:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9172:4:14","type":""}],"src":"9033:419:14"},{"body":{"nodeType":"YulBlock","src":"9554:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9571:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"9576:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9564:6:14"},"nodeType":"YulFunctionCall","src":"9564:19:14"},"nodeType":"YulExpressionStatement","src":"9564:19:14"},{"nodeType":"YulAssignment","src":"9592:29:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9611:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9616:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9607:3:14"},"nodeType":"YulFunctionCall","src":"9607:14:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9592:11:14"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9526:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"9531:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9542:11:14","type":""}],"src":"9458:169:14"},{"body":{"nodeType":"YulBlock","src":"9739:119:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9761:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"9769:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9757:3:14"},"nodeType":"YulFunctionCall","src":"9757:14:14"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"9773:34:14","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9750:6:14"},"nodeType":"YulFunctionCall","src":"9750:58:14"},"nodeType":"YulExpressionStatement","src":"9750:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9829:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"9837:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9825:3:14"},"nodeType":"YulFunctionCall","src":"9825:15:14"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"9842:8:14","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9818:6:14"},"nodeType":"YulFunctionCall","src":"9818:33:14"},"nodeType":"YulExpressionStatement","src":"9818:33:14"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9731:6:14","type":""}],"src":"9633:225:14"},{"body":{"nodeType":"YulBlock","src":"10010:220:14","statements":[{"nodeType":"YulAssignment","src":"10020:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10086:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"10091:2:14","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10027:58:14"},"nodeType":"YulFunctionCall","src":"10027:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10020:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10192:3:14"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"10103:88:14"},"nodeType":"YulFunctionCall","src":"10103:93:14"},"nodeType":"YulExpressionStatement","src":"10103:93:14"},{"nodeType":"YulAssignment","src":"10205:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10216:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"10221:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10212:3:14"},"nodeType":"YulFunctionCall","src":"10212:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10205:3:14"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9998:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10006:3:14","type":""}],"src":"9864:366:14"},{"body":{"nodeType":"YulBlock","src":"10407:248:14","statements":[{"nodeType":"YulAssignment","src":"10417:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10429:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10440:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10425:3:14"},"nodeType":"YulFunctionCall","src":"10425:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10417:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10464:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10475:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10460:3:14"},"nodeType":"YulFunctionCall","src":"10460:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10483:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"10489:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10479:3:14"},"nodeType":"YulFunctionCall","src":"10479:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10453:6:14"},"nodeType":"YulFunctionCall","src":"10453:47:14"},"nodeType":"YulExpressionStatement","src":"10453:47:14"},{"nodeType":"YulAssignment","src":"10509:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10643:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10517:124:14"},"nodeType":"YulFunctionCall","src":"10517:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10509:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10387:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10402:4:14","type":""}],"src":"10236:419:14"},{"body":{"nodeType":"YulBlock","src":"10767:108:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10789:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"10797:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10785:3:14"},"nodeType":"YulFunctionCall","src":"10785:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"10801:66:14","type":"","value":"0xf851a44000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10778:6:14"},"nodeType":"YulFunctionCall","src":"10778:90:14"},"nodeType":"YulExpressionStatement","src":"10778:90:14"}]},"name":"store_literal_in_memory_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10759:6:14","type":""}],"src":"10661:214:14"},{"body":{"nodeType":"YulBlock","src":"11044:235:14","statements":[{"nodeType":"YulAssignment","src":"11054:90:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11137:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"11142:1:14","type":"","value":"4"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"11061:75:14"},"nodeType":"YulFunctionCall","src":"11061:83:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11054:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11242:3:14"}],"functionName":{"name":"store_literal_in_memory_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7","nodeType":"YulIdentifier","src":"11153:88:14"},"nodeType":"YulFunctionCall","src":"11153:93:14"},"nodeType":"YulExpressionStatement","src":"11153:93:14"},{"nodeType":"YulAssignment","src":"11255:18:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11266:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"11271:1:14","type":"","value":"4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11262:3:14"},"nodeType":"YulFunctionCall","src":"11262:11:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11255:3:14"}]}]},"name":"abi_encode_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11032:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11040:3:14","type":""}],"src":"10881:398:14"},{"body":{"nodeType":"YulBlock","src":"11473:191:14","statements":[{"nodeType":"YulAssignment","src":"11484:154:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11634:3:14"}],"functionName":{"name":"abi_encode_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"11491:141:14"},"nodeType":"YulFunctionCall","src":"11491:147:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11484:3:14"}]},{"nodeType":"YulAssignment","src":"11648:10:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"11655:3:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11648:3:14"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11460:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11469:3:14","type":""}],"src":"11285:379:14"},{"body":{"nodeType":"YulBlock","src":"11776:76:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11798:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"11806:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11794:3:14"},"nodeType":"YulFunctionCall","src":"11794:14:14"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"11810:34:14","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11787:6:14"},"nodeType":"YulFunctionCall","src":"11787:58:14"},"nodeType":"YulExpressionStatement","src":"11787:58:14"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11768:6:14","type":""}],"src":"11670:182:14"},{"body":{"nodeType":"YulBlock","src":"12004:220:14","statements":[{"nodeType":"YulAssignment","src":"12014:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12080:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"12085:2:14","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12021:58:14"},"nodeType":"YulFunctionCall","src":"12021:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12014:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12186:3:14"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"12097:88:14"},"nodeType":"YulFunctionCall","src":"12097:93:14"},"nodeType":"YulExpressionStatement","src":"12097:93:14"},{"nodeType":"YulAssignment","src":"12199:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12210:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"12215:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12206:3:14"},"nodeType":"YulFunctionCall","src":"12206:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12199:3:14"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11992:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12000:3:14","type":""}],"src":"11858:366:14"},{"body":{"nodeType":"YulBlock","src":"12401:248:14","statements":[{"nodeType":"YulAssignment","src":"12411:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12423:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12434:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12419:3:14"},"nodeType":"YulFunctionCall","src":"12419:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12411:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12458:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12469:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12454:3:14"},"nodeType":"YulFunctionCall","src":"12454:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12477:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"12483:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12473:3:14"},"nodeType":"YulFunctionCall","src":"12473:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12447:6:14"},"nodeType":"YulFunctionCall","src":"12447:47:14"},"nodeType":"YulExpressionStatement","src":"12447:47:14"},{"nodeType":"YulAssignment","src":"12503:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12637:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12511:124:14"},"nodeType":"YulFunctionCall","src":"12511:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12503:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12381:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12396:4:14","type":""}],"src":"12230:419:14"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_TransparentUpgradeableProxy_$823(value) -> cleaned {\n        cleaned := cleanup_t_address_payable(value)\n    }\n\n    function validator_revert_t_contract$_TransparentUpgradeableProxy_$823(value) {\n        if iszero(eq(value, cleanup_t_contract$_TransparentUpgradeableProxy_$823(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_TransparentUpgradeableProxy_$823(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_TransparentUpgradeableProxy_$823(value)\n    }\n\n    function abi_decode_tuple_t_contract$_TransparentUpgradeableProxy_$823(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_TransparentUpgradeableProxy_$823(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_contract$_TransparentUpgradeableProxy_$823t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_TransparentUpgradeableProxy_$823(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_contract$_TransparentUpgradeableProxy_$823t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_TransparentUpgradeableProxy_$823(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29(memPtr) {\n\n        mstore(add(memPtr, 0), 0x5c60da1b00000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 4)\n        store_literal_in_memory_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29(pos)\n        end := add(pos, 4)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7(memPtr) {\n\n        mstore(add(memPtr, 0), 0xf851a44000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 4)\n        store_literal_in_memory_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7(pos)\n        end := add(pos, 4)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461012857806399a88ec414610144578063f2fde38b1461016d578063f3b7dead146101965761007b565b8063204e1c7a14610080578063715018a6146100bd5780637eff275e146100d45780638da5cb5b146100fd575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a291906106f3565b6101d3565b6040516100b49190610741565b60405180910390f35b3480156100c957600080fd5b506100d2610267565b005b3480156100e057600080fd5b506100fb60048036038101906100f69190610788565b61027b565b005b34801561010957600080fd5b506101126102f2565b60405161011f9190610741565b60405180910390f35b610142600480360381019061013d919061090e565b61031b565b005b34801561015057600080fd5b5061016b60048036038101906101669190610788565b610396565b005b34801561017957600080fd5b50610194600480360381019061018f919061097d565b61040d565b005b3480156101a257600080fd5b506101bd60048036038101906101b891906106f3565b610491565b6040516101ca9190610741565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff166040516101fb90610a01565b600060405180830381855afa9150503d8060008114610236576040519150601f19603f3d011682016040523d82523d6000602084013e61023b565b606091505b50915091508161024a57600080fd5b8080602001905181019061025e9190610a42565b92505050919050565b61026f610525565b61027960006105a3565b565b610283610525565b8173ffffffffffffffffffffffffffffffffffffffff16638f283970826040518263ffffffff1660e01b81526004016102bc9190610741565b600060405180830381600087803b1580156102d657600080fd5b505af11580156102ea573d6000803e3d6000fd5b505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610323610525565b8273ffffffffffffffffffffffffffffffffffffffff16634f1ef2863484846040518463ffffffff1660e01b815260040161035f929190610af7565b6000604051808303818588803b15801561037857600080fd5b505af115801561038c573d6000803e3d6000fd5b5050505050505050565b61039e610525565b8173ffffffffffffffffffffffffffffffffffffffff16633659cfe6826040518263ffffffff1660e01b81526004016103d79190610741565b600060405180830381600087803b1580156103f157600080fd5b505af1158015610405573d6000803e3d6000fd5b505050505050565b610415610525565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610485576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047c90610baa565b60405180910390fd5b61048e816105a3565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff166040516104b990610c16565b600060405180830381855afa9150503d80600081146104f4576040519150601f19603f3d011682016040523d82523d6000602084013e6104f9565b606091505b50915091508161050857600080fd5b8080602001905181019061051c9190610a42565b92505050919050565b61052d610667565b73ffffffffffffffffffffffffffffffffffffffff1661054b6102f2565b73ffffffffffffffffffffffffffffffffffffffff16146105a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059890610c77565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106ae82610683565b9050919050565b60006106c0826106a3565b9050919050565b6106d0816106b5565b81146106db57600080fd5b50565b6000813590506106ed816106c7565b92915050565b60006020828403121561070957610708610679565b5b6000610717848285016106de565b91505092915050565b600061072b82610683565b9050919050565b61073b81610720565b82525050565b60006020820190506107566000830184610732565b92915050565b61076581610720565b811461077057600080fd5b50565b6000813590506107828161075c565b92915050565b6000806040838503121561079f5761079e610679565b5b60006107ad858286016106de565b92505060206107be85828601610773565b9150509250929050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61081b826107d2565b810181811067ffffffffffffffff8211171561083a576108396107e3565b5b80604052505050565b600061084d61066f565b90506108598282610812565b919050565b600067ffffffffffffffff821115610879576108786107e3565b5b610882826107d2565b9050602081019050919050565b82818337600083830152505050565b60006108b16108ac8461085e565b610843565b9050828152602081018484840111156108cd576108cc6107cd565b5b6108d884828561088f565b509392505050565b600082601f8301126108f5576108f46107c8565b5b813561090584826020860161089e565b91505092915050565b60008060006060848603121561092757610926610679565b5b6000610935868287016106de565b935050602061094686828701610773565b925050604084013567ffffffffffffffff8111156109675761096661067e565b5b610973868287016108e0565b9150509250925092565b60006020828403121561099357610992610679565b5b60006109a184828501610773565b91505092915050565b600081905092915050565b7f5c60da1b00000000000000000000000000000000000000000000000000000000600082015250565b60006109eb6004836109aa565b91506109f6826109b5565b600482019050919050565b6000610a0c826109de565b9150819050919050565b610a1f816106a3565b8114610a2a57600080fd5b50565b600081519050610a3c81610a16565b92915050565b600060208284031215610a5857610a57610679565b5b6000610a6684828501610a2d565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610aa9578082015181840152602081019050610a8e565b83811115610ab8576000848401525b50505050565b6000610ac982610a6f565b610ad38185610a7a565b9350610ae3818560208601610a8b565b610aec816107d2565b840191505092915050565b6000604082019050610b0c6000830185610732565b8181036020830152610b1e8184610abe565b90509392505050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610b94602683610b27565b9150610b9f82610b38565b604082019050919050565b60006020820190508181036000830152610bc381610b87565b9050919050565b7ff851a44000000000000000000000000000000000000000000000000000000000600082015250565b6000610c006004836109aa565b9150610c0b82610bca565b600482019050919050565b6000610c2182610bf3565b9150819050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610c61602083610b27565b9150610c6c82610c2b565b602082019050919050565b60006020820190508181036000830152610c9081610c54565b905091905056fea2646970667358221220b7c550633f23ecd65746c79e1635e22add2396243922eff50d7b9b83c942f20664736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9623609D GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x9623609D EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x99A88EC4 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xF3B7DEAD EQ PUSH2 0x196 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x204E1C7A EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x7EFF275E EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x741 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD2 PUSH2 0x267 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x788 JUMP JUMPDEST PUSH2 0x27B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x112 PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x741 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13D SWAP2 SWAP1 PUSH2 0x90E JUMP JUMPDEST PUSH2 0x31B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x788 JUMP JUMPDEST PUSH2 0x396 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x97D JUMP JUMPDEST PUSH2 0x40D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x491 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x741 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP1 PUSH2 0xA01 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x236 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x25E SWAP2 SWAP1 PUSH2 0xA42 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26F PUSH2 0x525 JUMP JUMPDEST PUSH2 0x279 PUSH1 0x0 PUSH2 0x5A3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x283 PUSH2 0x525 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8F283970 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x741 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x323 PUSH2 0x525 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4F1EF286 CALLVALUE DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35F SWAP3 SWAP2 SWAP1 PUSH2 0xAF7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x38C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x39E PUSH2 0x525 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3659CFE6 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0x741 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x405 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x415 PUSH2 0x525 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x485 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47C SWAP1 PUSH2 0xBAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x48E DUP2 PUSH2 0x5A3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x4B9 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4F4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x508 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x51C SWAP2 SWAP1 PUSH2 0xA42 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52D PUSH2 0x667 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x54B PUSH2 0x2F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x598 SWAP1 PUSH2 0xC77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6AE DUP3 PUSH2 0x683 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C0 DUP3 PUSH2 0x6A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6D0 DUP2 PUSH2 0x6B5 JUMP JUMPDEST DUP2 EQ PUSH2 0x6DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6ED DUP2 PUSH2 0x6C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x709 JUMPI PUSH2 0x708 PUSH2 0x679 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x717 DUP5 DUP3 DUP6 ADD PUSH2 0x6DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x72B DUP3 PUSH2 0x683 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x73B DUP2 PUSH2 0x720 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x756 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x732 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x765 DUP2 PUSH2 0x720 JUMP JUMPDEST DUP2 EQ PUSH2 0x770 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x782 DUP2 PUSH2 0x75C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x79F JUMPI PUSH2 0x79E PUSH2 0x679 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7AD DUP6 DUP3 DUP7 ADD PUSH2 0x6DE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7BE DUP6 DUP3 DUP7 ADD PUSH2 0x773 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x81B DUP3 PUSH2 0x7D2 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x83A JUMPI PUSH2 0x839 PUSH2 0x7E3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x84D PUSH2 0x66F JUMP JUMPDEST SWAP1 POP PUSH2 0x859 DUP3 DUP3 PUSH2 0x812 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x879 JUMPI PUSH2 0x878 PUSH2 0x7E3 JUMP JUMPDEST JUMPDEST PUSH2 0x882 DUP3 PUSH2 0x7D2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B1 PUSH2 0x8AC DUP5 PUSH2 0x85E JUMP JUMPDEST PUSH2 0x843 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x8CD JUMPI PUSH2 0x8CC PUSH2 0x7CD JUMP JUMPDEST JUMPDEST PUSH2 0x8D8 DUP5 DUP3 DUP6 PUSH2 0x88F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8F5 JUMPI PUSH2 0x8F4 PUSH2 0x7C8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x905 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x89E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x927 JUMPI PUSH2 0x926 PUSH2 0x679 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x935 DUP7 DUP3 DUP8 ADD PUSH2 0x6DE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x946 DUP7 DUP3 DUP8 ADD PUSH2 0x773 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x967 JUMPI PUSH2 0x966 PUSH2 0x67E JUMP JUMPDEST JUMPDEST PUSH2 0x973 DUP7 DUP3 DUP8 ADD PUSH2 0x8E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x993 JUMPI PUSH2 0x992 PUSH2 0x679 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9A1 DUP5 DUP3 DUP6 ADD PUSH2 0x773 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9EB PUSH1 0x4 DUP4 PUSH2 0x9AA JUMP JUMPDEST SWAP2 POP PUSH2 0x9F6 DUP3 PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA0C DUP3 PUSH2 0x9DE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA1F DUP2 PUSH2 0x6A3 JUMP JUMPDEST DUP2 EQ PUSH2 0xA2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA3C DUP2 PUSH2 0xA16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA58 JUMPI PUSH2 0xA57 PUSH2 0x679 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA66 DUP5 DUP3 DUP6 ADD PUSH2 0xA2D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAA9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA8E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xAB8 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC9 DUP3 PUSH2 0xA6F JUMP JUMPDEST PUSH2 0xAD3 DUP2 DUP6 PUSH2 0xA7A JUMP JUMPDEST SWAP4 POP PUSH2 0xAE3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA8B JUMP JUMPDEST PUSH2 0xAEC DUP2 PUSH2 0x7D2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB0C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x732 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xB1E DUP2 DUP5 PUSH2 0xABE JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB94 PUSH1 0x26 DUP4 PUSH2 0xB27 JUMP JUMPDEST SWAP2 POP PUSH2 0xB9F DUP3 PUSH2 0xB38 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBC3 DUP2 PUSH2 0xB87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xF851A44000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC00 PUSH1 0x4 DUP4 PUSH2 0x9AA JUMP JUMPDEST SWAP2 POP PUSH2 0xC0B DUP3 PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC21 DUP3 PUSH2 0xBF3 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC61 PUSH1 0x20 DUP4 PUSH2 0xB27 JUMP JUMPDEST SWAP2 POP PUSH2 0xC6C DUP3 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC90 DUP2 PUSH2 0xC54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 0xC5 POP PUSH4 0x3F23ECD6 JUMPI CHAINID 0xC7 SWAP15 AND CALLDATALOAD 0xE2 0x2A 0xDD 0x23 SWAP7 0x24 CODECOPY 0x22 0xEF CREATE2 0xD PUSH28 0x9B83C942F20664736F6C634300080900330000000000000000000000 ","sourceMap":"435:2404:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;635:437;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;;;;;;;;;;;:::i;:::-;;1825:148:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1201:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2593:244:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2178:149;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2081:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1232:419:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;635:437;731:7;908:12;922:23;957:5;949:25;;:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;907:82;;;;1007:7;999:16;;;;;;1043:10;1032:33;;;;;;;;;;;;:::i;:::-;1025:40;;;;635:437;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1825:148:6:-;1094:13:0;:11;:13::i;:::-;1939:5:6::1;:17;;;1957:8;1939:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1825:148:::0;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2593:244:6:-;1094:13:0;:11;:13::i;:::-;2768:5:6::1;:22;;;2798:9;2809:14;2825:4;2768:62;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;2593:244:::0;;;:::o;2178:149::-;1094:13:0;:11;:13::i;:::-;2289:5:6::1;:15;;;2305:14;2289:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2178:149:::0;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1232:419:6:-;1319:7;1487:12;1501:23;1536:5;1528:25;;:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1486:82;;;;1586:7;1578:16;;;;;;1622:10;1611:33;;;;;;;;;;;;:::i;:::-;1604:40;;;;1232:419;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:9:-;693:7;719:10;712:17;;640:96;:::o;7:75:14:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:104::-;511:7;540:24;558:5;540:24;:::i;:::-;529:35;;466:104;;;:::o;576:139::-;648:7;677:32;703:5;677:32;:::i;:::-;666:43;;576:139;;;:::o;721:192::-;829:59;882:5;829:59;:::i;:::-;822:5;819:70;809:98;;903:1;900;893:12;809:98;721:192;:::o;919:209::-;1000:5;1038:6;1025:20;1016:29;;1054:68;1116:5;1054:68;:::i;:::-;919:209;;;;:::o;1134:399::-;1228:6;1277:2;1265:9;1256:7;1252:23;1248:32;1245:119;;;1283:79;;:::i;:::-;1245:119;1403:1;1428:88;1508:7;1499:6;1488:9;1484:22;1428:88;:::i;:::-;1418:98;;1374:152;1134:399;;;;:::o;1539:96::-;1576:7;1605:24;1623:5;1605:24;:::i;:::-;1594:35;;1539:96;;;:::o;1641:118::-;1728:24;1746:5;1728:24;:::i;:::-;1723:3;1716:37;1641:118;;:::o;1765:222::-;1858:4;1896:2;1885:9;1881:18;1873:26;;1909:71;1977:1;1966:9;1962:17;1953:6;1909:71;:::i;:::-;1765:222;;;;:::o;1993:122::-;2066:24;2084:5;2066:24;:::i;:::-;2059:5;2056:35;2046:63;;2105:1;2102;2095:12;2046:63;1993:122;:::o;2121:139::-;2167:5;2205:6;2192:20;2183:29;;2221:33;2248:5;2221:33;:::i;:::-;2121:139;;;;:::o;2266:544::-;2369:6;2377;2426:2;2414:9;2405:7;2401:23;2397:32;2394:119;;;2432:79;;:::i;:::-;2394:119;2552:1;2577:88;2657:7;2648:6;2637:9;2633:22;2577:88;:::i;:::-;2567:98;;2523:152;2714:2;2740:53;2785:7;2776:6;2765:9;2761:22;2740:53;:::i;:::-;2730:63;;2685:118;2266:544;;;;;:::o;2816:117::-;2925:1;2922;2915:12;2939:117;3048:1;3045;3038:12;3062:102;3103:6;3154:2;3150:7;3145:2;3138:5;3134:14;3130:28;3120:38;;3062:102;;;:::o;3170:180::-;3218:77;3215:1;3208:88;3315:4;3312:1;3305:15;3339:4;3336:1;3329:15;3356:281;3439:27;3461:4;3439:27;:::i;:::-;3431:6;3427:40;3569:6;3557:10;3554:22;3533:18;3521:10;3518:34;3515:62;3512:88;;;3580:18;;:::i;:::-;3512:88;3620:10;3616:2;3609:22;3399:238;3356:281;;:::o;3643:129::-;3677:6;3704:20;;:::i;:::-;3694:30;;3733:33;3761:4;3753:6;3733:33;:::i;:::-;3643:129;;;:::o;3778:307::-;3839:4;3929:18;3921:6;3918:30;3915:56;;;3951:18;;:::i;:::-;3915:56;3989:29;4011:6;3989:29;:::i;:::-;3981:37;;4073:4;4067;4063:15;4055:23;;3778:307;;;:::o;4091:154::-;4175:6;4170:3;4165;4152:30;4237:1;4228:6;4223:3;4219:16;4212:27;4091:154;;;:::o;4251:410::-;4328:5;4353:65;4369:48;4410:6;4369:48;:::i;:::-;4353:65;:::i;:::-;4344:74;;4441:6;4434:5;4427:21;4479:4;4472:5;4468:16;4517:3;4508:6;4503:3;4499:16;4496:25;4493:112;;;4524:79;;:::i;:::-;4493:112;4614:41;4648:6;4643:3;4638;4614:41;:::i;:::-;4334:327;4251:410;;;;;:::o;4680:338::-;4735:5;4784:3;4777:4;4769:6;4765:17;4761:27;4751:122;;4792:79;;:::i;:::-;4751:122;4909:6;4896:20;4934:78;5008:3;5000:6;4993:4;4985:6;4981:17;4934:78;:::i;:::-;4925:87;;4741:277;4680:338;;;;:::o;5024:867::-;5145:6;5153;5161;5210:2;5198:9;5189:7;5185:23;5181:32;5178:119;;;5216:79;;:::i;:::-;5178:119;5336:1;5361:88;5441:7;5432:6;5421:9;5417:22;5361:88;:::i;:::-;5351:98;;5307:152;5498:2;5524:53;5569:7;5560:6;5549:9;5545:22;5524:53;:::i;:::-;5514:63;;5469:118;5654:2;5643:9;5639:18;5626:32;5685:18;5677:6;5674:30;5671:117;;;5707:79;;:::i;:::-;5671:117;5812:62;5866:7;5857:6;5846:9;5842:22;5812:62;:::i;:::-;5802:72;;5597:287;5024:867;;;;;:::o;5897:329::-;5956:6;6005:2;5993:9;5984:7;5980:23;5976:32;5973:119;;;6011:79;;:::i;:::-;5973:119;6131:1;6156:53;6201:7;6192:6;6181:9;6177:22;6156:53;:::i;:::-;6146:63;;6102:117;5897:329;;;;:::o;6232:147::-;6333:11;6370:3;6355:18;;6232:147;;;;:::o;6385:214::-;6525:66;6521:1;6513:6;6509:14;6502:90;6385:214;:::o;6605:398::-;6764:3;6785:83;6866:1;6861:3;6785:83;:::i;:::-;6778:90;;6877:93;6966:3;6877:93;:::i;:::-;6995:1;6990:3;6986:11;6979:18;;6605:398;;;:::o;7009:379::-;7193:3;7215:147;7358:3;7215:147;:::i;:::-;7208:154;;7379:3;7372:10;;7009:379;;;:::o;7394:138::-;7475:32;7501:5;7475:32;:::i;:::-;7468:5;7465:43;7455:71;;7522:1;7519;7512:12;7455:71;7394:138;:::o;7538:159::-;7603:5;7634:6;7628:13;7619:22;;7650:41;7685:5;7650:41;:::i;:::-;7538:159;;;;:::o;7703:367::-;7781:6;7830:2;7818:9;7809:7;7805:23;7801:32;7798:119;;;7836:79;;:::i;:::-;7798:119;7956:1;7981:72;8045:7;8036:6;8025:9;8021:22;7981:72;:::i;:::-;7971:82;;7927:136;7703:367;;;;:::o;8076:98::-;8127:6;8161:5;8155:12;8145:22;;8076:98;;;:::o;8180:168::-;8263:11;8297:6;8292:3;8285:19;8337:4;8332:3;8328:14;8313:29;;8180:168;;;;:::o;8354:307::-;8422:1;8432:113;8446:6;8443:1;8440:13;8432:113;;;8531:1;8526:3;8522:11;8516:18;8512:1;8507:3;8503:11;8496:39;8468:2;8465:1;8461:10;8456:15;;8432:113;;;8563:6;8560:1;8557:13;8554:101;;;8643:1;8634:6;8629:3;8625:16;8618:27;8554:101;8403:258;8354:307;;;:::o;8667:360::-;8753:3;8781:38;8813:5;8781:38;:::i;:::-;8835:70;8898:6;8893:3;8835:70;:::i;:::-;8828:77;;8914:52;8959:6;8954:3;8947:4;8940:5;8936:16;8914:52;:::i;:::-;8991:29;9013:6;8991:29;:::i;:::-;8986:3;8982:39;8975:46;;8757:270;8667:360;;;;:::o;9033:419::-;9172:4;9210:2;9199:9;9195:18;9187:26;;9223:71;9291:1;9280:9;9276:17;9267:6;9223:71;:::i;:::-;9341:9;9335:4;9331:20;9326:2;9315:9;9311:18;9304:48;9369:76;9440:4;9431:6;9369:76;:::i;:::-;9361:84;;9033:419;;;;;:::o;9458:169::-;9542:11;9576:6;9571:3;9564:19;9616:4;9611:3;9607:14;9592:29;;9458:169;;;;:::o;9633:225::-;9773:34;9769:1;9761:6;9757:14;9750:58;9842:8;9837:2;9829:6;9825:15;9818:33;9633:225;:::o;9864:366::-;10006:3;10027:67;10091:2;10086:3;10027:67;:::i;:::-;10020:74;;10103:93;10192:3;10103:93;:::i;:::-;10221:2;10216:3;10212:12;10205:19;;9864:366;;;:::o;10236:419::-;10402:4;10440:2;10429:9;10425:18;10417:26;;10489:9;10483:4;10479:20;10475:1;10464:9;10460:17;10453:47;10517:131;10643:4;10517:131;:::i;:::-;10509:139;;10236:419;;;:::o;10661:214::-;10801:66;10797:1;10789:6;10785:14;10778:90;10661:214;:::o;10881:398::-;11040:3;11061:83;11142:1;11137:3;11061:83;:::i;:::-;11054:90;;11153:93;11242:3;11153:93;:::i;:::-;11271:1;11266:3;11262:11;11255:18;;10881:398;;;:::o;11285:379::-;11469:3;11491:147;11634:3;11491:147;:::i;:::-;11484:154;;11655:3;11648:10;;11285:379;;;:::o;11670:182::-;11810:34;11806:1;11798:6;11794:14;11787:58;11670:182;:::o;11858:366::-;12000:3;12021:67;12085:2;12080:3;12021:67;:::i;:::-;12014:74;;12097:93;12186:3;12097:93;:::i;:::-;12215:2;12210:3;12206:12;12199:19;;11858:366;;;:::o;12230:419::-;12396:4;12434:2;12423:9;12419:18;12411:26;;12483:9;12477:4;12473:20;12469:1;12458:9;12454:17;12447:47;12511:131;12637:4;12511:131;:::i;:::-;12503:139;;12230:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"655400","executionCost":"infinite","totalCost":"infinite"},"external":{"changeProxyAdmin(address,address)":"infinite","getProxyAdmin(address)":"infinite","getProxyImplementation(address)":"infinite","owner()":"2589","renounceOwnership()":"30421","transferOwnership(address)":"30791","upgrade(address,address)":"infinite","upgradeAndCall(address,address,bytes)":"infinite"}},"methodIdentifiers":{"changeProxyAdmin(address,address)":"7eff275e","getProxyAdmin(address)":"f3b7dead","getProxyImplementation(address)":"204e1c7a","owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","upgrade(address,address)":"99a88ec4","upgradeAndCall(address,address,bytes)":"9623609d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract TransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeProxyAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract TransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"getProxyAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract TransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"getProxyImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract TransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract TransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\",\"kind\":\"dev\",\"methods\":{\"changeProxyAdmin(address,address)\":{\"details\":\"Changes the admin of `proxy` to `newAdmin`. Requirements: - This contract must be the current admin of `proxy`.\"},\"getProxyAdmin(address)\":{\"details\":\"Returns the current admin of `proxy`. Requirements: - This contract must be the admin of `proxy`.\"},\"getProxyImplementation(address)\":{\"details\":\"Returns the current implementation of `proxy`. Requirements: - This contract must be the admin of `proxy`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgrade(address,address)\":{\"details\":\"Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}. Requirements: - This contract must be the admin of `proxy`.\"},\"upgradeAndCall(address,address,bytes)\":{\"details\":\"Upgrades `proxy` to `implementation` and calls a function on the new implementation. See {TransparentUpgradeableProxy-upgradeToAndCall}. Requirements: - This contract must be the admin of `proxy`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":\"ProxyAdmin\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/ERC1967/ERC1967Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"./ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializing the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        _upgradeToAndCall(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal view virtual override returns (address impl) {\\n        return ERC1967Upgrade._getImplementation();\\n    }\\n}\\n\",\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n *\\n * @custom:oz-upgrades-unsafe-allow delegatecall\\n */\\nabstract contract ERC1967Upgrade {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Emitted when the beacon is upgraded.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            Address.isContract(IBeacon(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(\\n        address newBeacon,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xabf3f59bc0e5423eae45e459dbe92e7052c6983628d39008590edc852a62f94a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/transparent/ProxyAdmin.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./TransparentUpgradeableProxy.sol\\\";\\nimport \\\"../../access/Ownable.sol\\\";\\n\\n/**\\n * @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\\n * explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\\n */\\ncontract ProxyAdmin is Ownable {\\n    /**\\n     * @dev Returns the current implementation of `proxy`.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the admin of `proxy`.\\n     */\\n    function getProxyImplementation(TransparentUpgradeableProxy proxy) public view virtual returns (address) {\\n        // We need to manually run the static call since the getter cannot be flagged as view\\n        // bytes4(keccak256(\\\"implementation()\\\")) == 0x5c60da1b\\n        (bool success, bytes memory returndata) = address(proxy).staticcall(hex\\\"5c60da1b\\\");\\n        require(success);\\n        return abi.decode(returndata, (address));\\n    }\\n\\n    /**\\n     * @dev Returns the current admin of `proxy`.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the admin of `proxy`.\\n     */\\n    function getProxyAdmin(TransparentUpgradeableProxy proxy) public view virtual returns (address) {\\n        // We need to manually run the static call since the getter cannot be flagged as view\\n        // bytes4(keccak256(\\\"admin()\\\")) == 0xf851a440\\n        (bool success, bytes memory returndata) = address(proxy).staticcall(hex\\\"f851a440\\\");\\n        require(success);\\n        return abi.decode(returndata, (address));\\n    }\\n\\n    /**\\n     * @dev Changes the admin of `proxy` to `newAdmin`.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the current admin of `proxy`.\\n     */\\n    function changeProxyAdmin(TransparentUpgradeableProxy proxy, address newAdmin) public virtual onlyOwner {\\n        proxy.changeAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the admin of `proxy`.\\n     */\\n    function upgrade(TransparentUpgradeableProxy proxy, address implementation) public virtual onlyOwner {\\n        proxy.upgradeTo(implementation);\\n    }\\n\\n    /**\\n     * @dev Upgrades `proxy` to `implementation` and calls a function on the new implementation. See\\n     * {TransparentUpgradeableProxy-upgradeToAndCall}.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the admin of `proxy`.\\n     */\\n    function upgradeAndCall(\\n        TransparentUpgradeableProxy proxy,\\n        address implementation,\\n        bytes memory data\\n    ) public payable virtual onlyOwner {\\n        proxy.upgradeToAndCall{value: msg.value}(implementation, data);\\n    }\\n}\\n\",\"keccak256\":\"0x33b8603bfbef7f33d9308b79c79aa3db7eb19525fd1addd764285e834ca275d7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/transparent/TransparentUpgradeableProxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1967/ERC1967Proxy.sol\\\";\\n\\n/**\\n * @dev This contract implements a proxy that is upgradeable by an admin.\\n *\\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\\n * clashing], which can potentially be used in an attack, this contract uses the\\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\\n * things that go hand in hand:\\n *\\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\\n * that call matches one of the admin functions exposed by the proxy itself.\\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\\n * \\\"admin cannot fallback to proxy target\\\".\\n *\\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\\n * to sudden errors when trying to call a function from the proxy implementation.\\n *\\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\\n * you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\\n */\\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\\n    /**\\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\\n     * optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\\n     */\\n    constructor(\\n        address _logic,\\n        address admin_,\\n        bytes memory _data\\n    ) payable ERC1967Proxy(_logic, _data) {\\n        _changeAdmin(admin_);\\n    }\\n\\n    /**\\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\\n     */\\n    modifier ifAdmin() {\\n        if (msg.sender == _getAdmin()) {\\n            _;\\n        } else {\\n            _fallback();\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function admin() external ifAdmin returns (address admin_) {\\n        admin_ = _getAdmin();\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\\n     */\\n    function implementation() external ifAdmin returns (address implementation_) {\\n        implementation_ = _implementation();\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\\n     */\\n    function changeAdmin(address newAdmin) external virtual ifAdmin {\\n        _changeAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\\n     */\\n    function upgradeTo(address newImplementation) external ifAdmin {\\n        _upgradeToAndCall(newImplementation, bytes(\\\"\\\"), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\\n     * proxied contract.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes calldata data) external payable ifAdmin {\\n        _upgradeToAndCall(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _admin() internal view virtual returns (address) {\\n        return _getAdmin();\\n    }\\n\\n    /**\\n     * @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}.\\n     */\\n    function _beforeFallback() internal virtual override {\\n        require(msg.sender != _getAdmin(), \\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\");\\n        super._beforeFallback();\\n    }\\n}\\n\",\"keccak256\":\"0xa6a787e7a901af6511e19aa53e1a00352db215a011d2c7a438d0582dd5da76f9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol":{"TransparentUpgradeableProxy":{"abi":[{"inputs":[{"internalType":"address","name":"_logic","type":"address"},{"internalType":"address","name":"admin_","type":"address"},{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"payable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[],"name":"admin","outputs":[{"internalType":"address","name":"admin_","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newAdmin","type":"address"}],"name":"changeAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"implementation_","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"details":"This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \"admin cannot fallback to proxy target\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.","kind":"dev","methods":{"admin()":{"details":"Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"changeAdmin(address)":{"details":"Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."},"constructor":{"details":"Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}."},"implementation()":{"details":"Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"},"upgradeTo(address)":{"details":"Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."},"upgradeToAndCall(address,bytes)":{"details":"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_146":{"entryPoint":null,"id":146,"parameterSlots":2,"returnSlots":0},"@_700":{"entryPoint":null,"id":700,"parameterSlots":3,"returnSlots":0},"@_changeAdmin_380":{"entryPoint":158,"id":380,"parameterSlots":1,"returnSlots":0},"@_getAdmin_337":{"entryPoint":393,"id":337,"parameterSlots":0,"returnSlots":1},"@_setAdmin_363":{"entryPoint":493,"id":363,"parameterSlots":1,"returnSlots":0},"@_setImplementation_215":{"entryPoint":734,"id":215,"parameterSlots":1,"returnSlots":0},"@_upgradeToAndCall_260":{"entryPoint":91,"id":260,"parameterSlots":3,"returnSlots":0},"@_upgradeTo_230":{"entryPoint":252,"id":230,"parameterSlots":1,"returnSlots":0},"@functionDelegateCall_1051":{"entryPoint":339,"id":1051,"parameterSlots":2,"returnSlots":1},"@functionDelegateCall_1086":{"entryPoint":948,"id":1086,"parameterSlots":3,"returnSlots":1},"@getAddressSlot_1166":{"entryPoint":1176,"id":1166,"parameterSlots":1,"returnSlots":1},"@isContract_841":{"entryPoint":1186,"id":841,"parameterSlots":1,"returnSlots":1},"@verifyCallResult_1117":{"entryPoint":1221,"id":1117,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr_fromMemory":{"entryPoint":1717,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":1427,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr_fromMemory":{"entryPoint":1792,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr_fromMemory":{"entryPoint":1843,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1966,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2523,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2614,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5_to_t_string_memory_ptr_fromStack":{"entryPoint":2124,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack":{"entryPoint":2276,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack":{"entryPoint":2428,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":2578,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":1983,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2679,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2163,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2315,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2467,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":1578,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1329,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":1609,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":2501,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2603,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2512,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2028,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1381,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1349,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":1663,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":1524,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x41":{"entryPoint":1477,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1450,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1455,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1344,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1339,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1460,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5":{"entryPoint":2045,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65":{"entryPoint":2197,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520":{"entryPoint":2349,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1401,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9502:14","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:14","statements":[{"nodeType":"YulAssignment","src":"57:19:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:14"},"nodeType":"YulFunctionCall","src":"67:9:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:14"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:14","type":""}],"src":"7:75:14"},{"body":{"nodeType":"YulBlock","src":"177:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:14"},"nodeType":"YulFunctionCall","src":"187:12:14"},"nodeType":"YulExpressionStatement","src":"187:12:14"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:14"},{"body":{"nodeType":"YulBlock","src":"300:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:14"},"nodeType":"YulFunctionCall","src":"310:12:14"},"nodeType":"YulExpressionStatement","src":"310:12:14"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:14"},{"body":{"nodeType":"YulBlock","src":"379:81:14","statements":[{"nodeType":"YulAssignment","src":"389:65:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:14"},"nodeType":"YulFunctionCall","src":"400:54:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:14"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:14","type":""}],"src":"334:126:14"},{"body":{"nodeType":"YulBlock","src":"511:51:14","statements":[{"nodeType":"YulAssignment","src":"521:35:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:14"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:14"},"nodeType":"YulFunctionCall","src":"532:24:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:14"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:14","type":""}],"src":"466:96:14"},{"body":{"nodeType":"YulBlock","src":"611:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:14"},"nodeType":"YulFunctionCall","src":"670:12:14"},"nodeType":"YulExpressionStatement","src":"670:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:14"},"nodeType":"YulFunctionCall","src":"641:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:14"},"nodeType":"YulFunctionCall","src":"631:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:14"},"nodeType":"YulFunctionCall","src":"624:43:14"},"nodeType":"YulIf","src":"621:63:14"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:14","type":""}],"src":"568:122:14"},{"body":{"nodeType":"YulBlock","src":"759:80:14","statements":[{"nodeType":"YulAssignment","src":"769:22:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:14"},"nodeType":"YulFunctionCall","src":"778:13:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:14"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:14"},"nodeType":"YulFunctionCall","src":"800:33:14"},"nodeType":"YulExpressionStatement","src":"800:33:14"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:14","type":""}],"src":"696:143:14"},{"body":{"nodeType":"YulBlock","src":"934:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"951:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"944:6:14"},"nodeType":"YulFunctionCall","src":"944:12:14"},"nodeType":"YulExpressionStatement","src":"944:12:14"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"845:117:14"},{"body":{"nodeType":"YulBlock","src":"1057:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1074:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1077:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1067:6:14"},"nodeType":"YulFunctionCall","src":"1067:12:14"},"nodeType":"YulExpressionStatement","src":"1067:12:14"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"968:117:14"},{"body":{"nodeType":"YulBlock","src":"1139:54:14","statements":[{"nodeType":"YulAssignment","src":"1149:38:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1167:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"1174:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1163:3:14"},"nodeType":"YulFunctionCall","src":"1163:14:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1183:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1179:3:14"},"nodeType":"YulFunctionCall","src":"1179:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1159:3:14"},"nodeType":"YulFunctionCall","src":"1159:28:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1149:6:14"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1122:5:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1132:6:14","type":""}],"src":"1091:102:14"},{"body":{"nodeType":"YulBlock","src":"1227:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1244:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1247:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1237:6:14"},"nodeType":"YulFunctionCall","src":"1237:88:14"},"nodeType":"YulExpressionStatement","src":"1237:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1341:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1344:4:14","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1334:6:14"},"nodeType":"YulFunctionCall","src":"1334:15:14"},"nodeType":"YulExpressionStatement","src":"1334:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1365:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1368:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1358:6:14"},"nodeType":"YulFunctionCall","src":"1358:15:14"},"nodeType":"YulExpressionStatement","src":"1358:15:14"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1199:180:14"},{"body":{"nodeType":"YulBlock","src":"1428:238:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1438:58:14","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1460:6:14"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1490:4:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1468:21:14"},"nodeType":"YulFunctionCall","src":"1468:27:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1456:3:14"},"nodeType":"YulFunctionCall","src":"1456:40:14"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1442:10:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1607:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1609:16:14"},"nodeType":"YulFunctionCall","src":"1609:18:14"},"nodeType":"YulExpressionStatement","src":"1609:18:14"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1550:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"1562:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1547:2:14"},"nodeType":"YulFunctionCall","src":"1547:34:14"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1586:10:14"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1598:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1583:2:14"},"nodeType":"YulFunctionCall","src":"1583:22:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1544:2:14"},"nodeType":"YulFunctionCall","src":"1544:62:14"},"nodeType":"YulIf","src":"1541:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1645:2:14","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1649:10:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1638:6:14"},"nodeType":"YulFunctionCall","src":"1638:22:14"},"nodeType":"YulExpressionStatement","src":"1638:22:14"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1414:6:14","type":""},{"name":"size","nodeType":"YulTypedName","src":"1422:4:14","type":""}],"src":"1385:281:14"},{"body":{"nodeType":"YulBlock","src":"1713:88:14","statements":[{"nodeType":"YulAssignment","src":"1723:30:14","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1733:18:14"},"nodeType":"YulFunctionCall","src":"1733:20:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1723:6:14"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1782:6:14"},{"name":"size","nodeType":"YulIdentifier","src":"1790:4:14"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1762:19:14"},"nodeType":"YulFunctionCall","src":"1762:33:14"},"nodeType":"YulExpressionStatement","src":"1762:33:14"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1697:4:14","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1706:6:14","type":""}],"src":"1672:129:14"},{"body":{"nodeType":"YulBlock","src":"1873:241:14","statements":[{"body":{"nodeType":"YulBlock","src":"1978:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1980:16:14"},"nodeType":"YulFunctionCall","src":"1980:18:14"},"nodeType":"YulExpressionStatement","src":"1980:18:14"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1950:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1958:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1947:2:14"},"nodeType":"YulFunctionCall","src":"1947:30:14"},"nodeType":"YulIf","src":"1944:56:14"},{"nodeType":"YulAssignment","src":"2010:37:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2040:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2018:21:14"},"nodeType":"YulFunctionCall","src":"2018:29:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2010:4:14"}]},{"nodeType":"YulAssignment","src":"2084:23:14","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2096:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"2102:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:14"},"nodeType":"YulFunctionCall","src":"2092:15:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2084:4:14"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1857:6:14","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1868:4:14","type":""}],"src":"1807:307:14"},{"body":{"nodeType":"YulBlock","src":"2169:258:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2179:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2188:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2183:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2248:63:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2273:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"2278:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2269:3:14"},"nodeType":"YulFunctionCall","src":"2269:11:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2292:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"2297:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2288:3:14"},"nodeType":"YulFunctionCall","src":"2288:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2282:5:14"},"nodeType":"YulFunctionCall","src":"2282:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2262:6:14"},"nodeType":"YulFunctionCall","src":"2262:39:14"},"nodeType":"YulExpressionStatement","src":"2262:39:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2209:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"2212:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2206:2:14"},"nodeType":"YulFunctionCall","src":"2206:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2220:19:14","statements":[{"nodeType":"YulAssignment","src":"2222:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2231:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"2234:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2227:3:14"},"nodeType":"YulFunctionCall","src":"2227:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2222:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"2202:3:14","statements":[]},"src":"2198:113:14"},{"body":{"nodeType":"YulBlock","src":"2345:76:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2395:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"2400:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2391:3:14"},"nodeType":"YulFunctionCall","src":"2391:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"2409:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2384:6:14"},"nodeType":"YulFunctionCall","src":"2384:27:14"},"nodeType":"YulExpressionStatement","src":"2384:27:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2326:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"2329:6:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2323:2:14"},"nodeType":"YulFunctionCall","src":"2323:13:14"},"nodeType":"YulIf","src":"2320:101:14"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2151:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2156:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"2161:6:14","type":""}],"src":"2120:307:14"},{"body":{"nodeType":"YulBlock","src":"2527:325:14","statements":[{"nodeType":"YulAssignment","src":"2537:74:14","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2603:6:14"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"2562:40:14"},"nodeType":"YulFunctionCall","src":"2562:48:14"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2546:15:14"},"nodeType":"YulFunctionCall","src":"2546:65:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2537:5:14"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2627:5:14"},{"name":"length","nodeType":"YulIdentifier","src":"2634:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2620:6:14"},"nodeType":"YulFunctionCall","src":"2620:21:14"},"nodeType":"YulExpressionStatement","src":"2620:21:14"},{"nodeType":"YulVariableDeclaration","src":"2650:27:14","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2665:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"2672:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2661:3:14"},"nodeType":"YulFunctionCall","src":"2661:16:14"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2654:3:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2715:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2717:77:14"},"nodeType":"YulFunctionCall","src":"2717:79:14"},"nodeType":"YulExpressionStatement","src":"2717:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2696:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"2701:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2692:3:14"},"nodeType":"YulFunctionCall","src":"2692:16:14"},{"name":"end","nodeType":"YulIdentifier","src":"2710:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2689:2:14"},"nodeType":"YulFunctionCall","src":"2689:25:14"},"nodeType":"YulIf","src":"2686:112:14"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2829:3:14"},{"name":"dst","nodeType":"YulIdentifier","src":"2834:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"2839:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2807:21:14"},"nodeType":"YulFunctionCall","src":"2807:39:14"},"nodeType":"YulExpressionStatement","src":"2807:39:14"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2500:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"2505:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"2513:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2521:5:14","type":""}],"src":"2433:419:14"},{"body":{"nodeType":"YulBlock","src":"2943:281:14","statements":[{"body":{"nodeType":"YulBlock","src":"2992:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2994:77:14"},"nodeType":"YulFunctionCall","src":"2994:79:14"},"nodeType":"YulExpressionStatement","src":"2994:79:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2971:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2979:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2967:3:14"},"nodeType":"YulFunctionCall","src":"2967:17:14"},{"name":"end","nodeType":"YulIdentifier","src":"2986:3:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2963:3:14"},"nodeType":"YulFunctionCall","src":"2963:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2956:6:14"},"nodeType":"YulFunctionCall","src":"2956:35:14"},"nodeType":"YulIf","src":"2953:122:14"},{"nodeType":"YulVariableDeclaration","src":"3084:27:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3104:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3098:5:14"},"nodeType":"YulFunctionCall","src":"3098:13:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3088:6:14","type":""}]},{"nodeType":"YulAssignment","src":"3120:98:14","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3191:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"3199:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3187:3:14"},"nodeType":"YulFunctionCall","src":"3187:17:14"},{"name":"length","nodeType":"YulIdentifier","src":"3206:6:14"},{"name":"end","nodeType":"YulIdentifier","src":"3214:3:14"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3129:57:14"},"nodeType":"YulFunctionCall","src":"3129:89:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3120:5:14"}]}]},"name":"abi_decode_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2921:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"2929:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2937:5:14","type":""}],"src":"2871:353:14"},{"body":{"nodeType":"YulBlock","src":"3350:714:14","statements":[{"body":{"nodeType":"YulBlock","src":"3396:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3398:77:14"},"nodeType":"YulFunctionCall","src":"3398:79:14"},"nodeType":"YulExpressionStatement","src":"3398:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3371:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"3380:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3367:3:14"},"nodeType":"YulFunctionCall","src":"3367:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"3392:2:14","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3363:3:14"},"nodeType":"YulFunctionCall","src":"3363:32:14"},"nodeType":"YulIf","src":"3360:119:14"},{"nodeType":"YulBlock","src":"3489:128:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3504:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3518:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3508:6:14","type":""}]},{"nodeType":"YulAssignment","src":"3533:74:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3579:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3590:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3575:3:14"},"nodeType":"YulFunctionCall","src":"3575:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3599:7:14"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"3543:31:14"},"nodeType":"YulFunctionCall","src":"3543:64:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3533:6:14"}]}]},{"nodeType":"YulBlock","src":"3627:129:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3642:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3656:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3646:6:14","type":""}]},{"nodeType":"YulAssignment","src":"3672:74:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3718:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3729:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3714:3:14"},"nodeType":"YulFunctionCall","src":"3714:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3738:7:14"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"3682:31:14"},"nodeType":"YulFunctionCall","src":"3682:64:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3672:6:14"}]}]},{"nodeType":"YulBlock","src":"3766:291:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3781:39:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3805:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3816:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3801:3:14"},"nodeType":"YulFunctionCall","src":"3801:18:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3795:5:14"},"nodeType":"YulFunctionCall","src":"3795:25:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3785:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3867:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3869:77:14"},"nodeType":"YulFunctionCall","src":"3869:79:14"},"nodeType":"YulExpressionStatement","src":"3869:79:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3839:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"3847:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3836:2:14"},"nodeType":"YulFunctionCall","src":"3836:30:14"},"nodeType":"YulIf","src":"3833:117:14"},{"nodeType":"YulAssignment","src":"3964:83:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4019:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4030:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4015:3:14"},"nodeType":"YulFunctionCall","src":"4015:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4039:7:14"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3974:40:14"},"nodeType":"YulFunctionCall","src":"3974:73:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3964:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3304:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3315:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3327:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3335:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3343:6:14","type":""}],"src":"3230:834:14"},{"body":{"nodeType":"YulBlock","src":"4135:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4152:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4175:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4157:17:14"},"nodeType":"YulFunctionCall","src":"4157:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4145:6:14"},"nodeType":"YulFunctionCall","src":"4145:37:14"},"nodeType":"YulExpressionStatement","src":"4145:37:14"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4123:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4130:3:14","type":""}],"src":"4070:118:14"},{"body":{"nodeType":"YulBlock","src":"4320:206:14","statements":[{"nodeType":"YulAssignment","src":"4330:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4342:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4353:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4338:3:14"},"nodeType":"YulFunctionCall","src":"4338:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4330:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4410:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4423:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4434:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4419:3:14"},"nodeType":"YulFunctionCall","src":"4419:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4366:43:14"},"nodeType":"YulFunctionCall","src":"4366:71:14"},"nodeType":"YulExpressionStatement","src":"4366:71:14"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4491:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4504:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4515:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4500:3:14"},"nodeType":"YulFunctionCall","src":"4500:18:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4447:43:14"},"nodeType":"YulFunctionCall","src":"4447:72:14"},"nodeType":"YulExpressionStatement","src":"4447:72:14"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4284:9:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4296:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4304:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4315:4:14","type":""}],"src":"4194:332:14"},{"body":{"nodeType":"YulBlock","src":"4628:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4645:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"4650:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4638:6:14"},"nodeType":"YulFunctionCall","src":"4638:19:14"},"nodeType":"YulExpressionStatement","src":"4638:19:14"},{"nodeType":"YulAssignment","src":"4666:29:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4685:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"4690:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4681:3:14"},"nodeType":"YulFunctionCall","src":"4681:14:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4666:11:14"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4600:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"4605:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4616:11:14","type":""}],"src":"4532:169:14"},{"body":{"nodeType":"YulBlock","src":"4813:119:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4835:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"4843:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4831:3:14"},"nodeType":"YulFunctionCall","src":"4831:14:14"},{"hexValue":"455243313936373a206e65772061646d696e20697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"4847:34:14","type":"","value":"ERC1967: new admin is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4824:6:14"},"nodeType":"YulFunctionCall","src":"4824:58:14"},"nodeType":"YulExpressionStatement","src":"4824:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4903:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"4911:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4899:3:14"},"nodeType":"YulFunctionCall","src":"4899:15:14"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"4916:8:14","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4892:6:14"},"nodeType":"YulFunctionCall","src":"4892:33:14"},"nodeType":"YulExpressionStatement","src":"4892:33:14"}]},"name":"store_literal_in_memory_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"4805:6:14","type":""}],"src":"4707:225:14"},{"body":{"nodeType":"YulBlock","src":"5084:220:14","statements":[{"nodeType":"YulAssignment","src":"5094:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5160:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"5165:2:14","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5101:58:14"},"nodeType":"YulFunctionCall","src":"5101:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5094:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5266:3:14"}],"functionName":{"name":"store_literal_in_memory_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","nodeType":"YulIdentifier","src":"5177:88:14"},"nodeType":"YulFunctionCall","src":"5177:93:14"},"nodeType":"YulExpressionStatement","src":"5177:93:14"},{"nodeType":"YulAssignment","src":"5279:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5290:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"5295:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5286:3:14"},"nodeType":"YulFunctionCall","src":"5286:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5279:3:14"}]}]},"name":"abi_encode_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5072:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5080:3:14","type":""}],"src":"4938:366:14"},{"body":{"nodeType":"YulBlock","src":"5481:248:14","statements":[{"nodeType":"YulAssignment","src":"5491:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5503:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5514:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5499:3:14"},"nodeType":"YulFunctionCall","src":"5499:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5491:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5538:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5549:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5534:3:14"},"nodeType":"YulFunctionCall","src":"5534:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5557:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"5563:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5553:3:14"},"nodeType":"YulFunctionCall","src":"5553:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5527:6:14"},"nodeType":"YulFunctionCall","src":"5527:47:14"},"nodeType":"YulExpressionStatement","src":"5527:47:14"},{"nodeType":"YulAssignment","src":"5583:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5717:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5591:124:14"},"nodeType":"YulFunctionCall","src":"5591:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5583:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5461:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5476:4:14","type":""}],"src":"5310:419:14"},{"body":{"nodeType":"YulBlock","src":"5841:126:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5863:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"5871:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5859:3:14"},"nodeType":"YulFunctionCall","src":"5859:14:14"},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e","kind":"string","nodeType":"YulLiteral","src":"5875:34:14","type":"","value":"ERC1967: new implementation is n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5852:6:14"},"nodeType":"YulFunctionCall","src":"5852:58:14"},"nodeType":"YulExpressionStatement","src":"5852:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5931:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"5939:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5927:3:14"},"nodeType":"YulFunctionCall","src":"5927:15:14"},{"hexValue":"6f74206120636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"5944:15:14","type":"","value":"ot a contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5920:6:14"},"nodeType":"YulFunctionCall","src":"5920:40:14"},"nodeType":"YulExpressionStatement","src":"5920:40:14"}]},"name":"store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5833:6:14","type":""}],"src":"5735:232:14"},{"body":{"nodeType":"YulBlock","src":"6119:220:14","statements":[{"nodeType":"YulAssignment","src":"6129:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6195:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"6200:2:14","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6136:58:14"},"nodeType":"YulFunctionCall","src":"6136:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6129:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6301:3:14"}],"functionName":{"name":"store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","nodeType":"YulIdentifier","src":"6212:88:14"},"nodeType":"YulFunctionCall","src":"6212:93:14"},"nodeType":"YulExpressionStatement","src":"6212:93:14"},{"nodeType":"YulAssignment","src":"6314:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6325:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"6330:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6321:3:14"},"nodeType":"YulFunctionCall","src":"6321:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6314:3:14"}]}]},"name":"abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6107:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6115:3:14","type":""}],"src":"5973:366:14"},{"body":{"nodeType":"YulBlock","src":"6516:248:14","statements":[{"nodeType":"YulAssignment","src":"6526:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6538:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6549:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6534:3:14"},"nodeType":"YulFunctionCall","src":"6534:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6526:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6573:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6584:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6569:3:14"},"nodeType":"YulFunctionCall","src":"6569:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6592:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"6598:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6588:3:14"},"nodeType":"YulFunctionCall","src":"6588:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6562:6:14"},"nodeType":"YulFunctionCall","src":"6562:47:14"},"nodeType":"YulExpressionStatement","src":"6562:47:14"},{"nodeType":"YulAssignment","src":"6618:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6752:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6626:124:14"},"nodeType":"YulFunctionCall","src":"6626:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6618:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6496:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6511:4:14","type":""}],"src":"6345:419:14"},{"body":{"nodeType":"YulBlock","src":"6876:119:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6898:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"6906:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6894:3:14"},"nodeType":"YulFunctionCall","src":"6894:14:14"},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f","kind":"string","nodeType":"YulLiteral","src":"6910:34:14","type":"","value":"Address: delegate call to non-co"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6887:6:14"},"nodeType":"YulFunctionCall","src":"6887:58:14"},"nodeType":"YulExpressionStatement","src":"6887:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6966:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"6974:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6962:3:14"},"nodeType":"YulFunctionCall","src":"6962:15:14"},{"hexValue":"6e7472616374","kind":"string","nodeType":"YulLiteral","src":"6979:8:14","type":"","value":"ntract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6955:6:14"},"nodeType":"YulFunctionCall","src":"6955:33:14"},"nodeType":"YulExpressionStatement","src":"6955:33:14"}]},"name":"store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6868:6:14","type":""}],"src":"6770:225:14"},{"body":{"nodeType":"YulBlock","src":"7147:220:14","statements":[{"nodeType":"YulAssignment","src":"7157:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7223:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"7228:2:14","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7164:58:14"},"nodeType":"YulFunctionCall","src":"7164:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7157:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7329:3:14"}],"functionName":{"name":"store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","nodeType":"YulIdentifier","src":"7240:88:14"},"nodeType":"YulFunctionCall","src":"7240:93:14"},"nodeType":"YulExpressionStatement","src":"7240:93:14"},{"nodeType":"YulAssignment","src":"7342:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7353:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"7358:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7349:3:14"},"nodeType":"YulFunctionCall","src":"7349:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7342:3:14"}]}]},"name":"abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7135:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7143:3:14","type":""}],"src":"7001:366:14"},{"body":{"nodeType":"YulBlock","src":"7544:248:14","statements":[{"nodeType":"YulAssignment","src":"7554:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7566:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7577:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7562:3:14"},"nodeType":"YulFunctionCall","src":"7562:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7554:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7601:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7612:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7597:3:14"},"nodeType":"YulFunctionCall","src":"7597:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7620:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"7626:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7616:3:14"},"nodeType":"YulFunctionCall","src":"7616:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7590:6:14"},"nodeType":"YulFunctionCall","src":"7590:47:14"},"nodeType":"YulExpressionStatement","src":"7590:47:14"},{"nodeType":"YulAssignment","src":"7646:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7780:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7654:124:14"},"nodeType":"YulFunctionCall","src":"7654:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7646:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7524:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7539:4:14","type":""}],"src":"7373:419:14"},{"body":{"nodeType":"YulBlock","src":"7856:40:14","statements":[{"nodeType":"YulAssignment","src":"7867:22:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7883:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7877:5:14"},"nodeType":"YulFunctionCall","src":"7877:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7867:6:14"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7839:5:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7849:6:14","type":""}],"src":"7798:98:14"},{"body":{"nodeType":"YulBlock","src":"8015:34:14","statements":[{"nodeType":"YulAssignment","src":"8025:18:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"8040:3:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8025:11:14"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7987:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"7992:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8003:11:14","type":""}],"src":"7902:147:14"},{"body":{"nodeType":"YulBlock","src":"8163:265:14","statements":[{"nodeType":"YulVariableDeclaration","src":"8173:52:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8219:5:14"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8187:31:14"},"nodeType":"YulFunctionCall","src":"8187:38:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8177:6:14","type":""}]},{"nodeType":"YulAssignment","src":"8234:95:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8317:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"8322:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"8241:75:14"},"nodeType":"YulFunctionCall","src":"8241:88:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8234:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8364:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"8371:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8360:3:14"},"nodeType":"YulFunctionCall","src":"8360:16:14"},{"name":"pos","nodeType":"YulIdentifier","src":"8378:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"8383:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"8338:21:14"},"nodeType":"YulFunctionCall","src":"8338:52:14"},"nodeType":"YulExpressionStatement","src":"8338:52:14"},{"nodeType":"YulAssignment","src":"8399:23:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8410:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"8415:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8406:3:14"},"nodeType":"YulFunctionCall","src":"8406:16:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8399:3:14"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8144:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8151:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8159:3:14","type":""}],"src":"8055:373:14"},{"body":{"nodeType":"YulBlock","src":"8568:137:14","statements":[{"nodeType":"YulAssignment","src":"8579:100:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8666:6:14"},{"name":"pos","nodeType":"YulIdentifier","src":"8675:3:14"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"8586:79:14"},"nodeType":"YulFunctionCall","src":"8586:93:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8579:3:14"}]},{"nodeType":"YulAssignment","src":"8689:10:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"8696:3:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8689:3:14"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8547:3:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8553:6:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8564:3:14","type":""}],"src":"8434:271:14"},{"body":{"nodeType":"YulBlock","src":"8770:40:14","statements":[{"nodeType":"YulAssignment","src":"8781:22:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8797:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8791:5:14"},"nodeType":"YulFunctionCall","src":"8791:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8781:6:14"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8753:5:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8763:6:14","type":""}],"src":"8711:99:14"},{"body":{"nodeType":"YulBlock","src":"8908:272:14","statements":[{"nodeType":"YulVariableDeclaration","src":"8918:53:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8965:5:14"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8932:32:14"},"nodeType":"YulFunctionCall","src":"8932:39:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8922:6:14","type":""}]},{"nodeType":"YulAssignment","src":"8980:78:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9046:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"9051:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8987:58:14"},"nodeType":"YulFunctionCall","src":"8987:71:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8980:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9093:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"9100:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9089:3:14"},"nodeType":"YulFunctionCall","src":"9089:16:14"},{"name":"pos","nodeType":"YulIdentifier","src":"9107:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"9112:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"9067:21:14"},"nodeType":"YulFunctionCall","src":"9067:52:14"},"nodeType":"YulExpressionStatement","src":"9067:52:14"},{"nodeType":"YulAssignment","src":"9128:46:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9139:3:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9166:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"9144:21:14"},"nodeType":"YulFunctionCall","src":"9144:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9135:3:14"},"nodeType":"YulFunctionCall","src":"9135:39:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9128:3:14"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8889:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8896:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8904:3:14","type":""}],"src":"8816:364:14"},{"body":{"nodeType":"YulBlock","src":"9304:195:14","statements":[{"nodeType":"YulAssignment","src":"9314:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9326:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9337:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9322:3:14"},"nodeType":"YulFunctionCall","src":"9322:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9314:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9361:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9372:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9357:3:14"},"nodeType":"YulFunctionCall","src":"9357:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9380:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"9386:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9376:3:14"},"nodeType":"YulFunctionCall","src":"9376:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9350:6:14"},"nodeType":"YulFunctionCall","src":"9350:47:14"},"nodeType":"YulExpressionStatement","src":"9350:47:14"},{"nodeType":"YulAssignment","src":"9406:86:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9478:6:14"},{"name":"tail","nodeType":"YulIdentifier","src":"9487:4:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9414:63:14"},"nodeType":"YulFunctionCall","src":"9414:78:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9406:4:14"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9276:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9288:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9299:4:14","type":""}],"src":"9186:313:14"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_bytes_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1967: new admin is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1967: new implementation is n\")\n\n        mstore(add(memPtr, 32), \"ot a contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: delegate call to non-co\")\n\n        mstore(add(memPtr, 32), \"ntract\")\n\n    }\n\n    function abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040526040516200190638038062001906833981810160405281019062000029919062000733565b82816200003f828260006200005b60201b60201c565b505062000052826200009e60201b60201c565b50505062000a9b565b6200006c83620000fc60201b60201c565b6000825111806200007a5750805b1562000099576200009783836200015360201b6200034f1760201c565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f620000cf6200018960201b60201c565b82604051620000e0929190620007bf565b60405180910390a1620000f981620001ed60201b60201c565b50565b6200010d81620002de60201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b6060620001818383604051806060016040528060278152602001620018df60279139620003b460201b60201c565b905092915050565b6000620001c47fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b6200049860201b6200037c1760201c565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000260576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002579062000873565b60405180910390fd5b806200029a7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b6200049860201b6200037c1760201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b620002f481620004a260201b620003861760201c565b62000336576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200032d906200090b565b60405180910390fd5b80620003707f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6200049860201b6200037c1760201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6060620003c784620004a260201b60201c565b62000409576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200040090620009a3565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168560405162000433919062000a12565b600060405180830381855af49150503d806000811462000470576040519150601f19603f3d011682016040523d82523d6000602084013e62000475565b606091505b50915091506200048d828286620004c560201b60201c565b925050509392505050565b6000819050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315620004d7578290506200052a565b600083511115620004eb5782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000521919062000a77565b60405180910390fd5b9392505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620005728262000545565b9050919050565b620005848162000565565b81146200059057600080fd5b50565b600081519050620005a48162000579565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620005ff82620005b4565b810181811067ffffffffffffffff82111715620006215762000620620005c5565b5b80604052505050565b60006200063662000531565b9050620006448282620005f4565b919050565b600067ffffffffffffffff821115620006675762000666620005c5565b5b6200067282620005b4565b9050602081019050919050565b60005b838110156200069f57808201518184015260208101905062000682565b83811115620006af576000848401525b50505050565b6000620006cc620006c68462000649565b6200062a565b905082815260208101848484011115620006eb57620006ea620005af565b5b620006f88482856200067f565b509392505050565b600082601f830112620007185762000717620005aa565b5b81516200072a848260208601620006b5565b91505092915050565b6000806000606084860312156200074f576200074e6200053b565b5b60006200075f8682870162000593565b9350506020620007728682870162000593565b925050604084015167ffffffffffffffff81111562000796576200079562000540565b5b620007a48682870162000700565b9150509250925092565b620007b98162000565565b82525050565b6000604082019050620007d66000830185620007ae565b620007e56020830184620007ae565b9392505050565b600082825260208201905092915050565b7f455243313936373a206e65772061646d696e20697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006200085b602683620007ec565b91506200086882620007fd565b604082019050919050565b600060208201905081810360008301526200088e816200084c565b9050919050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b6000620008f3602d83620007ec565b9150620009008262000895565b604082019050919050565b600060208201905081810360008301526200092681620008e4565b9050919050565b7f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60008201527f6e74726163740000000000000000000000000000000000000000000000000000602082015250565b60006200098b602683620007ec565b915062000998826200092d565b604082019050919050565b60006020820190508181036000830152620009be816200097c565b9050919050565b600081519050919050565b600081905092915050565b6000620009e882620009c5565b620009f48185620009d0565b935062000a068185602086016200067f565b80840191505092915050565b600062000a208284620009db565b915081905092915050565b600081519050919050565b600062000a438262000a2b565b62000a4f8185620007ec565b935062000a618185602086016200067f565b62000a6c81620005b4565b840191505092915050565b6000602082019050818103600083015262000a93818462000a36565b905092915050565b610e348062000aab6000396000f3fe60806040526004361061004e5760003560e01c80633659cfe6146100675780634f1ef286146100905780635c60da1b146100ac5780638f283970146100d7578063f851a440146101005761005d565b3661005d5761005b61012b565b005b61006561012b565b005b34801561007357600080fd5b5061008e6004803603810190610089919061090b565b610145565b005b6100aa60048036038101906100a5919061099d565b6101ac565b005b3480156100b857600080fd5b506100c161024a565b6040516100ce9190610a0c565b60405180910390f35b3480156100e357600080fd5b506100fe60048036038101906100f9919061090b565b6102a2565b005b34801561010c57600080fd5b506101156102f7565b6040516101229190610a0c565b60405180910390f35b6101336103a9565b61014361013e610429565b610438565b565b61014d61045e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156101a05761019b816040518060200160405280600081525060006104b5565b6101a9565b6101a861012b565b5b50565b6101b461045e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561023c576102378383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505060016104b5565b610245565b61024461012b565b5b505050565b600061025461045e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156102965761028f610429565b905061029f565b61029e61012b565b5b90565b6102aa61045e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156102eb576102e6816104e1565b6102f4565b6102f361012b565b5b50565b600061030161045e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156103435761033c61045e565b905061034c565b61034b61012b565b5b90565b60606103748383604051806060016040528060278152602001610dd86027913961052d565b905092915050565b6000819050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6103b161045e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561041f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041690610ad0565b60405180910390fd5b6104276105fa565b565b60006104336105fc565b905090565b3660008037600080366000845af43d6000803e8060008114610459573d6000f35b3d6000fd5b600061048c7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b61037c565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104be83610653565b6000825111806104cb5750805b156104dc576104da838361034f565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f61050a61045e565b82604051610519929190610af0565b60405180910390a161052a816106a2565b50565b606061053884610386565b610577576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056e90610b8b565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168560405161059f9190610c25565b600060405180830381855af49150503d80600081146105da576040519150601f19603f3d011682016040523d82523d6000602084013e6105df565b606091505b50915091506105ef828286610783565b925050509392505050565b565b600061062a7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61037c565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61065c816107ea565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610712576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070990610cae565b60405180910390fd5b8061073f7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b61037c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60608315610793578290506107e3565b6000835111156107a65782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107da9190610d23565b60405180910390fd5b9392505050565b6107f381610386565b610832576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082990610db7565b60405180910390fd5b8061085f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61037c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108d8826108ad565b9050919050565b6108e8816108cd565b81146108f357600080fd5b50565b600081359050610905816108df565b92915050565b600060208284031215610921576109206108a3565b5b600061092f848285016108f6565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261095d5761095c610938565b5b8235905067ffffffffffffffff81111561097a5761097961093d565b5b60208301915083600182028301111561099657610995610942565b5b9250929050565b6000806000604084860312156109b6576109b56108a3565b5b60006109c4868287016108f6565b935050602084013567ffffffffffffffff8111156109e5576109e46108a8565b5b6109f186828701610947565b92509250509250925092565b610a06816108cd565b82525050565b6000602082019050610a2160008301846109fd565b92915050565b600082825260208201905092915050565b7f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60008201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760208201527f6574000000000000000000000000000000000000000000000000000000000000604082015250565b6000610aba604283610a27565b9150610ac582610a38565b606082019050919050565b60006020820190508181036000830152610ae981610aad565b9050919050565b6000604082019050610b0560008301856109fd565b610b1260208301846109fd565b9392505050565b7f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60008201527f6e74726163740000000000000000000000000000000000000000000000000000602082015250565b6000610b75602683610a27565b9150610b8082610b19565b604082019050919050565b60006020820190508181036000830152610ba481610b68565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015610bdf578082015181840152602081019050610bc4565b83811115610bee576000848401525b50505050565b6000610bff82610bab565b610c098185610bb6565b9350610c19818560208601610bc1565b80840191505092915050565b6000610c318284610bf4565b915081905092915050565b7f455243313936373a206e65772061646d696e20697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610c98602683610a27565b9150610ca382610c3c565b604082019050919050565b60006020820190508181036000830152610cc781610c8b565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b6000610cf582610cce565b610cff8185610a27565b9350610d0f818560208601610bc1565b610d1881610cd9565b840191505092915050565b60006020820190508181036000830152610d3d8184610cea565b905092915050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b6000610da1602d83610a27565b9150610dac82610d45565b604082019050919050565b60006020820190508181036000830152610dd081610d94565b905091905056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220bde7cb8871b03c099add256f9adeaeea1dc6fe7e15bdb29faa6e1f6e16b5074d64736f6c63430008090033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH3 0x1906 CODESIZE SUB DUP1 PUSH3 0x1906 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x29 SWAP2 SWAP1 PUSH3 0x733 JUMP JUMPDEST DUP3 DUP2 PUSH3 0x3F DUP3 DUP3 PUSH1 0x0 PUSH3 0x5B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x52 DUP3 PUSH3 0x9E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH3 0xA9B JUMP JUMPDEST PUSH3 0x6C DUP4 PUSH3 0xFC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH3 0x7A JUMPI POP DUP1 JUMPDEST ISZERO PUSH3 0x99 JUMPI PUSH3 0x97 DUP4 DUP4 PUSH3 0x153 PUSH1 0x20 SHL PUSH3 0x34F OR PUSH1 0x20 SHR JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH3 0xCF PUSH3 0x189 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH3 0xE0 SWAP3 SWAP2 SWAP1 PUSH3 0x7BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH3 0xF9 DUP2 PUSH3 0x1ED PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP JUMP JUMPDEST PUSH3 0x10D DUP2 PUSH3 0x2DE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH3 0x181 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x18DF PUSH1 0x27 SWAP2 CODECOPY PUSH3 0x3B4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C4 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 PUSH1 0x0 SHL PUSH3 0x498 PUSH1 0x20 SHL PUSH3 0x37C OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x260 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x257 SWAP1 PUSH3 0x873 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH3 0x29A PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 PUSH1 0x0 SHL PUSH3 0x498 PUSH1 0x20 SHL PUSH3 0x37C OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH3 0x2F4 DUP2 PUSH3 0x4A2 PUSH1 0x20 SHL PUSH3 0x386 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x336 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x32D SWAP1 PUSH3 0x90B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH3 0x370 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH3 0x498 PUSH1 0x20 SHL PUSH3 0x37C OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH3 0x3C7 DUP5 PUSH3 0x4A2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x409 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x400 SWAP1 PUSH3 0x9A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH3 0x433 SWAP2 SWAP1 PUSH3 0xA12 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH3 0x470 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x475 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH3 0x48D DUP3 DUP3 DUP7 PUSH3 0x4C5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH3 0x4D7 JUMPI DUP3 SWAP1 POP PUSH3 0x52A JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH3 0x4EB JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x521 SWAP2 SWAP1 PUSH3 0xA77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x572 DUP3 PUSH3 0x545 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x584 DUP2 PUSH3 0x565 JUMP JUMPDEST DUP2 EQ PUSH3 0x590 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x5A4 DUP2 PUSH3 0x579 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x5FF DUP3 PUSH3 0x5B4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x621 JUMPI PUSH3 0x620 PUSH3 0x5C5 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x636 PUSH3 0x531 JUMP JUMPDEST SWAP1 POP PUSH3 0x644 DUP3 DUP3 PUSH3 0x5F4 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x667 JUMPI PUSH3 0x666 PUSH3 0x5C5 JUMP JUMPDEST JUMPDEST PUSH3 0x672 DUP3 PUSH3 0x5B4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x69F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x682 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x6AF JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6CC PUSH3 0x6C6 DUP5 PUSH3 0x649 JUMP JUMPDEST PUSH3 0x62A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x6EB JUMPI PUSH3 0x6EA PUSH3 0x5AF JUMP JUMPDEST JUMPDEST PUSH3 0x6F8 DUP5 DUP3 DUP6 PUSH3 0x67F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x718 JUMPI PUSH3 0x717 PUSH3 0x5AA JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x72A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x6B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x74F JUMPI PUSH3 0x74E PUSH3 0x53B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x75F DUP7 DUP3 DUP8 ADD PUSH3 0x593 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x772 DUP7 DUP3 DUP8 ADD PUSH3 0x593 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x796 JUMPI PUSH3 0x795 PUSH3 0x540 JUMP JUMPDEST JUMPDEST PUSH3 0x7A4 DUP7 DUP3 DUP8 ADD PUSH3 0x700 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH3 0x7B9 DUP2 PUSH3 0x565 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x7D6 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x7AE JUMP JUMPDEST PUSH3 0x7E5 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x7AE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x85B PUSH1 0x26 DUP4 PUSH3 0x7EC JUMP JUMPDEST SWAP2 POP PUSH3 0x868 DUP3 PUSH3 0x7FD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x88E DUP2 PUSH3 0x84C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8F3 PUSH1 0x2D DUP4 PUSH3 0x7EC JUMP JUMPDEST SWAP2 POP PUSH3 0x900 DUP3 PUSH3 0x895 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x926 DUP2 PUSH3 0x8E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E74726163740000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x98B PUSH1 0x26 DUP4 PUSH3 0x7EC JUMP JUMPDEST SWAP2 POP PUSH3 0x998 DUP3 PUSH3 0x92D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x9BE DUP2 PUSH3 0x97C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x9E8 DUP3 PUSH3 0x9C5 JUMP JUMPDEST PUSH3 0x9F4 DUP2 DUP6 PUSH3 0x9D0 JUMP JUMPDEST SWAP4 POP PUSH3 0xA06 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x67F JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA20 DUP3 DUP5 PUSH3 0x9DB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA43 DUP3 PUSH3 0xA2B JUMP JUMPDEST PUSH3 0xA4F DUP2 DUP6 PUSH3 0x7EC JUMP JUMPDEST SWAP4 POP PUSH3 0xA61 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x67F JUMP JUMPDEST PUSH3 0xA6C DUP2 PUSH3 0x5B4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0xA93 DUP2 DUP5 PUSH3 0xA36 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE34 DUP1 PUSH3 0xAAB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x90 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x8F283970 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x100 JUMPI PUSH2 0x5D JUMP JUMPDEST CALLDATASIZE PUSH2 0x5D JUMPI PUSH2 0x5B PUSH2 0x12B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x65 PUSH2 0x12B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x89 SWAP2 SWAP1 PUSH2 0x90B JUMP JUMPDEST PUSH2 0x145 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA5 SWAP2 SWAP1 PUSH2 0x99D JUMP JUMPDEST PUSH2 0x1AC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC1 PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x90B JUMP JUMPDEST PUSH2 0x2A2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x115 PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x133 PUSH2 0x3A9 JUMP JUMPDEST PUSH2 0x143 PUSH2 0x13E PUSH2 0x429 JUMP JUMPDEST PUSH2 0x438 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x14D PUSH2 0x45E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A0 JUMPI PUSH2 0x19B DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0x4B5 JUMP JUMPDEST PUSH2 0x1A9 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x12B JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x1B4 PUSH2 0x45E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x23C JUMPI PUSH2 0x237 DUP4 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH1 0x1 PUSH2 0x4B5 JUMP JUMPDEST PUSH2 0x245 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x12B JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x254 PUSH2 0x45E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x296 JUMPI PUSH2 0x28F PUSH2 0x429 JUMP JUMPDEST SWAP1 POP PUSH2 0x29F JUMP JUMPDEST PUSH2 0x29E PUSH2 0x12B JUMP JUMPDEST JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2AA PUSH2 0x45E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2EB JUMPI PUSH2 0x2E6 DUP2 PUSH2 0x4E1 JUMP JUMPDEST PUSH2 0x2F4 JUMP JUMPDEST PUSH2 0x2F3 PUSH2 0x12B JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x301 PUSH2 0x45E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x343 JUMPI PUSH2 0x33C PUSH2 0x45E JUMP JUMPDEST SWAP1 POP PUSH2 0x34C JUMP JUMPDEST PUSH2 0x34B PUSH2 0x12B JUMP JUMPDEST JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x374 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDD8 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x52D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B1 PUSH2 0x45E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x41F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x416 SWAP1 PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x427 PUSH2 0x5FA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 PUSH2 0x5FC JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x459 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x48C PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 PUSH1 0x0 SHL PUSH2 0x37C JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4BE DUP4 PUSH2 0x653 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x4CB JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x4DC JUMPI PUSH2 0x4DA DUP4 DUP4 PUSH2 0x34F JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH2 0x50A PUSH2 0x45E JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH2 0x519 SWAP3 SWAP2 SWAP1 PUSH2 0xAF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x52A DUP2 PUSH2 0x6A2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x538 DUP5 PUSH2 0x386 JUMP JUMPDEST PUSH2 0x577 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56E SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x59F SWAP2 SWAP1 PUSH2 0xC25 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x5EF DUP3 DUP3 DUP7 PUSH2 0x783 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62A PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x37C JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x65C DUP2 PUSH2 0x7EA JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x712 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x709 SWAP1 PUSH2 0xCAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x73F PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 PUSH1 0x0 SHL PUSH2 0x37C JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x793 JUMPI DUP3 SWAP1 POP PUSH2 0x7E3 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x7A6 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DA SWAP2 SWAP1 PUSH2 0xD23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x7F3 DUP2 PUSH2 0x386 JUMP JUMPDEST PUSH2 0x832 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x829 SWAP1 PUSH2 0xDB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x85F PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x37C JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D8 DUP3 PUSH2 0x8AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8E8 DUP2 PUSH2 0x8CD JUMP JUMPDEST DUP2 EQ PUSH2 0x8F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x905 DUP2 PUSH2 0x8DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x921 JUMPI PUSH2 0x920 PUSH2 0x8A3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x92F DUP5 DUP3 DUP6 ADD PUSH2 0x8F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x95D JUMPI PUSH2 0x95C PUSH2 0x938 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x97A JUMPI PUSH2 0x979 PUSH2 0x93D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x996 JUMPI PUSH2 0x995 PUSH2 0x942 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9B6 JUMPI PUSH2 0x9B5 PUSH2 0x8A3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9C4 DUP7 DUP3 DUP8 ADD PUSH2 0x8F6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9E5 JUMPI PUSH2 0x9E4 PUSH2 0x8A8 JUMP JUMPDEST JUMPDEST PUSH2 0x9F1 DUP7 DUP3 DUP8 ADD PUSH2 0x947 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xA06 DUP2 PUSH2 0x8CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA21 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73706172656E745570677261646561626C6550726F78793A2061646D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x696E2063616E6E6F742066616C6C6261636B20746F2070726F78792074617267 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6574000000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xABA PUSH1 0x42 DUP4 PUSH2 0xA27 JUMP JUMPDEST SWAP2 POP PUSH2 0xAC5 DUP3 PUSH2 0xA38 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAE9 DUP2 PUSH2 0xAAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB05 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x9FD JUMP JUMPDEST PUSH2 0xB12 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9FD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E74726163740000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB75 PUSH1 0x26 DUP4 PUSH2 0xA27 JUMP JUMPDEST SWAP2 POP PUSH2 0xB80 DUP3 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBA4 DUP2 PUSH2 0xB68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBDF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xBC4 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xBEE JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBFF DUP3 PUSH2 0xBAB JUMP JUMPDEST PUSH2 0xC09 DUP2 DUP6 PUSH2 0xBB6 JUMP JUMPDEST SWAP4 POP PUSH2 0xC19 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xBC1 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC31 DUP3 DUP5 PUSH2 0xBF4 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC98 PUSH1 0x26 DUP4 PUSH2 0xA27 JUMP JUMPDEST SWAP2 POP PUSH2 0xCA3 DUP3 PUSH2 0xC3C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCC7 DUP2 PUSH2 0xC8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF5 DUP3 PUSH2 0xCCE JUMP JUMPDEST PUSH2 0xCFF DUP2 DUP6 PUSH2 0xA27 JUMP JUMPDEST SWAP4 POP PUSH2 0xD0F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0xD18 DUP2 PUSH2 0xCD9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD3D DUP2 DUP5 PUSH2 0xCEA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA1 PUSH1 0x2D DUP4 PUSH2 0xA27 JUMP JUMPDEST SWAP2 POP PUSH2 0xDAC DUP3 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDD0 DUP2 PUSH2 0xD94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220BDE7CB DUP9 PUSH18 0xB03C099ADD256F9ADEAEEA1DC6FE7E15BDB2 SWAP16 0xAA PUSH15 0x1F6E16B5074D64736F6C6343000809 STOP CALLER COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C65640000 ","sourceMap":"1649:3469:7:-:0;;;1923:167;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2038:6;2046:5;1024:39:2;1042:6;1050:5;1057;1024:17;;;:39;;:::i;:::-;958:112;;2063:20:7::1;2076:6;2063:12;;;:20;;:::i;:::-;1923:167:::0;;;1649:3469;;2183:295:3;2321:29;2332:17;2321:10;;;:29;;:::i;:::-;2378:1;2364:4;:11;:15;:28;;;;2383:9;2364:28;2360:112;;;2408:53;2437:17;2456:4;2408:28;;;;;:53;;:::i;:::-;;2360:112;2183:295;;;:::o;4624:135::-;4688:35;4701:11;:9;;;:11;;:::i;:::-;4714:8;4688:35;;;;;;;:::i;:::-;;;;;;;;4733:19;4743:8;4733:9;;;:19;;:::i;:::-;4624:135;:::o;1897:152::-;1963:37;1982:17;1963:18;;;:37;;:::i;:::-;2024:17;2015:27;;;;;;;;;;;;1897:152;:::o;6570:198:8:-;6653:12;6684:77;6705:6;6713:4;6684:77;;;;;;;;;;;;;;;;;:20;;;:77;;:::i;:::-;6677:84;;6570:198;;;;:::o;4108:122:3:-;4152:7;4178:39;3842:66;4205:11;;4178:26;;;;;:39;;:::i;:::-;:45;;;;;;;;;;;;4171:52;;4108:122;:::o;4312:201::-;4395:1;4375:22;;:8;:22;;;;4367:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;4498:8;4450:39;3842:66;4477:11;;4450:26;;;;;:39;;:::i;:::-;:45;;;:56;;;;;;;;;;;;;;;;;;4312:201;:::o;1532:259::-;1613:37;1632:17;1613:18;;;;;:37;;:::i;:::-;1605:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:17;1710:48;1030:66;1737:20;;1710:26;;;;;:48;;:::i;:::-;:54;;;:74;;;;;;;;;;;;;;;;;;1532:259;:::o;6954:387:8:-;7095:12;7127:18;7138:6;7127:10;;;:18;;:::i;:::-;7119:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;7200:12;7214:23;7241:6;:19;;7261:4;7241:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7199:67;;;;7283:51;7300:7;7309:10;7321:12;7283:16;;;:51;;:::i;:::-;7276:58;;;;6954:387;;;;;:::o;1614:190:10:-;1675:21;1784:4;1774:14;;1614:190;;;:::o;1175:320:8:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7561:742::-;7707:12;7735:7;7731:566;;;7765:10;7758:17;;;;7731:566;7896:1;7876:10;:17;:21;7872:415;;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;7872:415;8259:12;8252:20;;;;;;;;;;;:::i;:::-;;;;;;;;7561:742;;;;;;:::o;7:75:14:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:117::-;954:1;951;944:12;968:117;1077:1;1074;1067:12;1091:102;1132:6;1183:2;1179:7;1174:2;1167:5;1163:14;1159:28;1149:38;;1091:102;;;:::o;1199:180::-;1247:77;1244:1;1237:88;1344:4;1341:1;1334:15;1368:4;1365:1;1358:15;1385:281;1468:27;1490:4;1468:27;:::i;:::-;1460:6;1456:40;1598:6;1586:10;1583:22;1562:18;1550:10;1547:34;1544:62;1541:88;;;1609:18;;:::i;:::-;1541:88;1649:10;1645:2;1638:22;1428:238;1385:281;;:::o;1672:129::-;1706:6;1733:20;;:::i;:::-;1723:30;;1762:33;1790:4;1782:6;1762:33;:::i;:::-;1672:129;;;:::o;1807:307::-;1868:4;1958:18;1950:6;1947:30;1944:56;;;1980:18;;:::i;:::-;1944:56;2018:29;2040:6;2018:29;:::i;:::-;2010:37;;2102:4;2096;2092:15;2084:23;;1807:307;;;:::o;2120:::-;2188:1;2198:113;2212:6;2209:1;2206:13;2198:113;;;2297:1;2292:3;2288:11;2282:18;2278:1;2273:3;2269:11;2262:39;2234:2;2231:1;2227:10;2222:15;;2198:113;;;2329:6;2326:1;2323:13;2320:101;;;2409:1;2400:6;2395:3;2391:16;2384:27;2320:101;2169:258;2120:307;;;:::o;2433:419::-;2521:5;2546:65;2562:48;2603:6;2562:48;:::i;:::-;2546:65;:::i;:::-;2537:74;;2634:6;2627:5;2620:21;2672:4;2665:5;2661:16;2710:3;2701:6;2696:3;2692:16;2689:25;2686:112;;;2717:79;;:::i;:::-;2686:112;2807:39;2839:6;2834:3;2829;2807:39;:::i;:::-;2527:325;2433:419;;;;;:::o;2871:353::-;2937:5;2986:3;2979:4;2971:6;2967:17;2963:27;2953:122;;2994:79;;:::i;:::-;2953:122;3104:6;3098:13;3129:89;3214:3;3206:6;3199:4;3191:6;3187:17;3129:89;:::i;:::-;3120:98;;2943:281;2871:353;;;;:::o;3230:834::-;3327:6;3335;3343;3392:2;3380:9;3371:7;3367:23;3363:32;3360:119;;;3398:79;;:::i;:::-;3360:119;3518:1;3543:64;3599:7;3590:6;3579:9;3575:22;3543:64;:::i;:::-;3533:74;;3489:128;3656:2;3682:64;3738:7;3729:6;3718:9;3714:22;3682:64;:::i;:::-;3672:74;;3627:129;3816:2;3805:9;3801:18;3795:25;3847:18;3839:6;3836:30;3833:117;;;3869:79;;:::i;:::-;3833:117;3974:73;4039:7;4030:6;4019:9;4015:22;3974:73;:::i;:::-;3964:83;;3766:291;3230:834;;;;;:::o;4070:118::-;4157:24;4175:5;4157:24;:::i;:::-;4152:3;4145:37;4070:118;;:::o;4194:332::-;4315:4;4353:2;4342:9;4338:18;4330:26;;4366:71;4434:1;4423:9;4419:17;4410:6;4366:71;:::i;:::-;4447:72;4515:2;4504:9;4500:18;4491:6;4447:72;:::i;:::-;4194:332;;;;;:::o;4532:169::-;4616:11;4650:6;4645:3;4638:19;4690:4;4685:3;4681:14;4666:29;;4532:169;;;;:::o;4707:225::-;4847:34;4843:1;4835:6;4831:14;4824:58;4916:8;4911:2;4903:6;4899:15;4892:33;4707:225;:::o;4938:366::-;5080:3;5101:67;5165:2;5160:3;5101:67;:::i;:::-;5094:74;;5177:93;5266:3;5177:93;:::i;:::-;5295:2;5290:3;5286:12;5279:19;;4938:366;;;:::o;5310:419::-;5476:4;5514:2;5503:9;5499:18;5491:26;;5563:9;5557:4;5553:20;5549:1;5538:9;5534:17;5527:47;5591:131;5717:4;5591:131;:::i;:::-;5583:139;;5310:419;;;:::o;5735:232::-;5875:34;5871:1;5863:6;5859:14;5852:58;5944:15;5939:2;5931:6;5927:15;5920:40;5735:232;:::o;5973:366::-;6115:3;6136:67;6200:2;6195:3;6136:67;:::i;:::-;6129:74;;6212:93;6301:3;6212:93;:::i;:::-;6330:2;6325:3;6321:12;6314:19;;5973:366;;;:::o;6345:419::-;6511:4;6549:2;6538:9;6534:18;6526:26;;6598:9;6592:4;6588:20;6584:1;6573:9;6569:17;6562:47;6626:131;6752:4;6626:131;:::i;:::-;6618:139;;6345:419;;;:::o;6770:225::-;6910:34;6906:1;6898:6;6894:14;6887:58;6979:8;6974:2;6966:6;6962:15;6955:33;6770:225;:::o;7001:366::-;7143:3;7164:67;7228:2;7223:3;7164:67;:::i;:::-;7157:74;;7240:93;7329:3;7240:93;:::i;:::-;7358:2;7353:3;7349:12;7342:19;;7001:366;;;:::o;7373:419::-;7539:4;7577:2;7566:9;7562:18;7554:26;;7626:9;7620:4;7616:20;7612:1;7601:9;7597:17;7590:47;7654:131;7780:4;7654:131;:::i;:::-;7646:139;;7373:419;;;:::o;7798:98::-;7849:6;7883:5;7877:12;7867:22;;7798:98;;;:::o;7902:147::-;8003:11;8040:3;8025:18;;7902:147;;;;:::o;8055:373::-;8159:3;8187:38;8219:5;8187:38;:::i;:::-;8241:88;8322:6;8317:3;8241:88;:::i;:::-;8234:95;;8338:52;8383:6;8378:3;8371:4;8364:5;8360:16;8338:52;:::i;:::-;8415:6;8410:3;8406:16;8399:23;;8163:265;8055:373;;;;:::o;8434:271::-;8564:3;8586:93;8675:3;8666:6;8586:93;:::i;:::-;8579:100;;8696:3;8689:10;;8434:271;;;;:::o;8711:99::-;8763:6;8797:5;8791:12;8781:22;;8711:99;;;:::o;8816:364::-;8904:3;8932:39;8965:5;8932:39;:::i;:::-;8987:71;9051:6;9046:3;8987:71;:::i;:::-;8980:78;;9067:52;9112:6;9107:3;9100:4;9093:5;9089:16;9067:52;:::i;:::-;9144:29;9166:6;9144:29;:::i;:::-;9139:3;9135:39;9128:46;;8908:272;8816:364;;;;:::o;9186:313::-;9299:4;9337:2;9326:9;9322:18;9314:26;;9386:9;9380:4;9376:20;9372:1;9361:9;9357:17;9350:47;9414:78;9487:4;9478:6;9414:78;:::i;:::-;9406:86;;9186:313;;;;:::o;1649:3469:7:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_515":{"entryPoint":null,"id":515,"parameterSlots":0,"returnSlots":0},"@_523":{"entryPoint":null,"id":523,"parameterSlots":0,"returnSlots":0},"@_beforeFallback_528":{"entryPoint":1530,"id":528,"parameterSlots":0,"returnSlots":0},"@_beforeFallback_822":{"entryPoint":937,"id":822,"parameterSlots":0,"returnSlots":0},"@_changeAdmin_380":{"entryPoint":1249,"id":380,"parameterSlots":1,"returnSlots":0},"@_delegate_488":{"entryPoint":1080,"id":488,"parameterSlots":1,"returnSlots":0},"@_fallback_507":{"entryPoint":299,"id":507,"parameterSlots":0,"returnSlots":0},"@_getAdmin_337":{"entryPoint":1118,"id":337,"parameterSlots":0,"returnSlots":1},"@_getImplementation_191":{"entryPoint":1532,"id":191,"parameterSlots":0,"returnSlots":1},"@_implementation_158":{"entryPoint":1065,"id":158,"parameterSlots":0,"returnSlots":1},"@_setAdmin_363":{"entryPoint":1698,"id":363,"parameterSlots":1,"returnSlots":0},"@_setImplementation_215":{"entryPoint":2026,"id":215,"parameterSlots":1,"returnSlots":0},"@_upgradeToAndCall_260":{"entryPoint":1205,"id":260,"parameterSlots":3,"returnSlots":0},"@_upgradeTo_230":{"entryPoint":1619,"id":230,"parameterSlots":1,"returnSlots":0},"@admin_730":{"entryPoint":759,"id":730,"parameterSlots":0,"returnSlots":1},"@changeAdmin_757":{"entryPoint":674,"id":757,"parameterSlots":1,"returnSlots":0},"@functionDelegateCall_1051":{"entryPoint":847,"id":1051,"parameterSlots":2,"returnSlots":1},"@functionDelegateCall_1086":{"entryPoint":1325,"id":1086,"parameterSlots":3,"returnSlots":1},"@getAddressSlot_1166":{"entryPoint":892,"id":1166,"parameterSlots":1,"returnSlots":1},"@implementation_744":{"entryPoint":586,"id":744,"parameterSlots":0,"returnSlots":1},"@isContract_841":{"entryPoint":902,"id":841,"parameterSlots":1,"returnSlots":1},"@upgradeToAndCall_792":{"entryPoint":428,"id":792,"parameterSlots":3,"returnSlots":0},"@upgradeTo_775":{"entryPoint":325,"id":775,"parameterSlots":1,"returnSlots":0},"@verifyCallResult_1117":{"entryPoint":1923,"id":1117,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2294,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":2375,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_address":{"entryPoint":2315,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_bytes_calldata_ptr":{"entryPoint":2461,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2557,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":3060,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3306,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5_to_t_string_memory_ptr_fromStack":{"entryPoint":3211,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack":{"entryPoint":3476,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack":{"entryPoint":2920,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d_to_t_string_memory_ptr_fromStack":{"entryPoint":2733,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":3109,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2572,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":2800,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3363,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3246,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3511,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2955,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2768,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":2987,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3278,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2998,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2599,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2253,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2221,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":3009,"id":null,"parameterSlots":3,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":2365,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":2360,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":2370,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":2216,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2211,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3289,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5":{"entryPoint":3132,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65":{"entryPoint":3397,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520":{"entryPoint":2841,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d":{"entryPoint":2616,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2271,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9968:14","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:14","statements":[{"nodeType":"YulAssignment","src":"57:19:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:14"},"nodeType":"YulFunctionCall","src":"67:9:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:14"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:14","type":""}],"src":"7:75:14"},{"body":{"nodeType":"YulBlock","src":"177:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:14"},"nodeType":"YulFunctionCall","src":"187:12:14"},"nodeType":"YulExpressionStatement","src":"187:12:14"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:14"},{"body":{"nodeType":"YulBlock","src":"300:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:14"},"nodeType":"YulFunctionCall","src":"310:12:14"},"nodeType":"YulExpressionStatement","src":"310:12:14"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:14"},{"body":{"nodeType":"YulBlock","src":"379:81:14","statements":[{"nodeType":"YulAssignment","src":"389:65:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:14"},"nodeType":"YulFunctionCall","src":"400:54:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:14"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:14","type":""}],"src":"334:126:14"},{"body":{"nodeType":"YulBlock","src":"511:51:14","statements":[{"nodeType":"YulAssignment","src":"521:35:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:14"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:14"},"nodeType":"YulFunctionCall","src":"532:24:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:14"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:14","type":""}],"src":"466:96:14"},{"body":{"nodeType":"YulBlock","src":"611:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:14"},"nodeType":"YulFunctionCall","src":"670:12:14"},"nodeType":"YulExpressionStatement","src":"670:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:14"},"nodeType":"YulFunctionCall","src":"641:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:14"},"nodeType":"YulFunctionCall","src":"631:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:14"},"nodeType":"YulFunctionCall","src":"624:43:14"},"nodeType":"YulIf","src":"621:63:14"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:14","type":""}],"src":"568:122:14"},{"body":{"nodeType":"YulBlock","src":"748:87:14","statements":[{"nodeType":"YulAssignment","src":"758:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:14"},"nodeType":"YulFunctionCall","src":"767:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:14"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:14"},"nodeType":"YulFunctionCall","src":"796:33:14"},"nodeType":"YulExpressionStatement","src":"796:33:14"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:14","type":""}],"src":"696:139:14"},{"body":{"nodeType":"YulBlock","src":"907:263:14","statements":[{"body":{"nodeType":"YulBlock","src":"953:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"955:77:14"},"nodeType":"YulFunctionCall","src":"955:79:14"},"nodeType":"YulExpressionStatement","src":"955:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"928:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"937:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"924:3:14"},"nodeType":"YulFunctionCall","src":"924:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"949:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"920:3:14"},"nodeType":"YulFunctionCall","src":"920:32:14"},"nodeType":"YulIf","src":"917:119:14"},{"nodeType":"YulBlock","src":"1046:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1061:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"1075:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1065:6:14","type":""}]},{"nodeType":"YulAssignment","src":"1090:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1125:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1121:3:14"},"nodeType":"YulFunctionCall","src":"1121:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1145:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1100:20:14"},"nodeType":"YulFunctionCall","src":"1100:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1090:6:14"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"877:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"888:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"900:6:14","type":""}],"src":"841:329:14"},{"body":{"nodeType":"YulBlock","src":"1265:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1282:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1285:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1275:6:14"},"nodeType":"YulFunctionCall","src":"1275:12:14"},"nodeType":"YulExpressionStatement","src":"1275:12:14"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"1176:117:14"},{"body":{"nodeType":"YulBlock","src":"1388:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1405:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1408:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1398:6:14"},"nodeType":"YulFunctionCall","src":"1398:12:14"},"nodeType":"YulExpressionStatement","src":"1398:12:14"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"1299:117:14"},{"body":{"nodeType":"YulBlock","src":"1511:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1528:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1531:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1521:6:14"},"nodeType":"YulFunctionCall","src":"1521:12:14"},"nodeType":"YulExpressionStatement","src":"1521:12:14"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"1422:117:14"},{"body":{"nodeType":"YulBlock","src":"1632:478:14","statements":[{"body":{"nodeType":"YulBlock","src":"1681:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1683:77:14"},"nodeType":"YulFunctionCall","src":"1683:79:14"},"nodeType":"YulExpressionStatement","src":"1683:79:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1660:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1668:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1656:3:14"},"nodeType":"YulFunctionCall","src":"1656:17:14"},{"name":"end","nodeType":"YulIdentifier","src":"1675:3:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1652:3:14"},"nodeType":"YulFunctionCall","src":"1652:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1645:6:14"},"nodeType":"YulFunctionCall","src":"1645:35:14"},"nodeType":"YulIf","src":"1642:122:14"},{"nodeType":"YulAssignment","src":"1773:30:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1796:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1783:12:14"},"nodeType":"YulFunctionCall","src":"1783:20:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1773:6:14"}]},{"body":{"nodeType":"YulBlock","src":"1846:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"1848:77:14"},"nodeType":"YulFunctionCall","src":"1848:79:14"},"nodeType":"YulExpressionStatement","src":"1848:79:14"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1818:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1826:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1815:2:14"},"nodeType":"YulFunctionCall","src":"1815:30:14"},"nodeType":"YulIf","src":"1812:117:14"},{"nodeType":"YulAssignment","src":"1938:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1954:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1962:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1950:3:14"},"nodeType":"YulFunctionCall","src":"1950:17:14"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1938:8:14"}]},{"body":{"nodeType":"YulBlock","src":"2021:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2023:77:14"},"nodeType":"YulFunctionCall","src":"2023:79:14"},"nodeType":"YulExpressionStatement","src":"2023:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1986:8:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2000:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2008:4:14","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1996:3:14"},"nodeType":"YulFunctionCall","src":"1996:17:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1982:3:14"},"nodeType":"YulFunctionCall","src":"1982:32:14"},{"name":"end","nodeType":"YulIdentifier","src":"2016:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1979:2:14"},"nodeType":"YulFunctionCall","src":"1979:41:14"},"nodeType":"YulIf","src":"1976:128:14"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1599:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"1607:3:14","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"1615:8:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"1625:6:14","type":""}],"src":"1558:552:14"},{"body":{"nodeType":"YulBlock","src":"2218:570:14","statements":[{"body":{"nodeType":"YulBlock","src":"2264:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2266:77:14"},"nodeType":"YulFunctionCall","src":"2266:79:14"},"nodeType":"YulExpressionStatement","src":"2266:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2239:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2248:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2235:3:14"},"nodeType":"YulFunctionCall","src":"2235:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2260:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2231:3:14"},"nodeType":"YulFunctionCall","src":"2231:32:14"},"nodeType":"YulIf","src":"2228:119:14"},{"nodeType":"YulBlock","src":"2357:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2372:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2386:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2376:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2401:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2436:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2447:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2432:3:14"},"nodeType":"YulFunctionCall","src":"2432:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2456:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2411:20:14"},"nodeType":"YulFunctionCall","src":"2411:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2401:6:14"}]}]},{"nodeType":"YulBlock","src":"2484:297:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2499:46:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2530:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2541:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2526:3:14"},"nodeType":"YulFunctionCall","src":"2526:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2513:12:14"},"nodeType":"YulFunctionCall","src":"2513:32:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2503:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2592:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"2594:77:14"},"nodeType":"YulFunctionCall","src":"2594:79:14"},"nodeType":"YulExpressionStatement","src":"2594:79:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2564:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2572:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2561:2:14"},"nodeType":"YulFunctionCall","src":"2561:30:14"},"nodeType":"YulIf","src":"2558:117:14"},{"nodeType":"YulAssignment","src":"2689:82:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2743:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2754:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2739:3:14"},"nodeType":"YulFunctionCall","src":"2739:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2763:7:14"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"2707:31:14"},"nodeType":"YulFunctionCall","src":"2707:64:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2689:6:14"},{"name":"value2","nodeType":"YulIdentifier","src":"2697:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2172:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2183:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2195:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2203:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2211:6:14","type":""}],"src":"2116:672:14"},{"body":{"nodeType":"YulBlock","src":"2859:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2876:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2899:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2881:17:14"},"nodeType":"YulFunctionCall","src":"2881:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2869:6:14"},"nodeType":"YulFunctionCall","src":"2869:37:14"},"nodeType":"YulExpressionStatement","src":"2869:37:14"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2847:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2854:3:14","type":""}],"src":"2794:118:14"},{"body":{"nodeType":"YulBlock","src":"3016:124:14","statements":[{"nodeType":"YulAssignment","src":"3026:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3038:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3049:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3034:3:14"},"nodeType":"YulFunctionCall","src":"3034:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3026:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3106:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3119:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3130:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3115:3:14"},"nodeType":"YulFunctionCall","src":"3115:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"3062:43:14"},"nodeType":"YulFunctionCall","src":"3062:71:14"},"nodeType":"YulExpressionStatement","src":"3062:71:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2988:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3000:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3011:4:14","type":""}],"src":"2918:222:14"},{"body":{"nodeType":"YulBlock","src":"3242:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3259:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"3264:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3252:6:14"},"nodeType":"YulFunctionCall","src":"3252:19:14"},"nodeType":"YulExpressionStatement","src":"3252:19:14"},{"nodeType":"YulAssignment","src":"3280:29:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3299:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"3304:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3295:3:14"},"nodeType":"YulFunctionCall","src":"3295:14:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3280:11:14"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3214:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"3219:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3230:11:14","type":""}],"src":"3146:169:14"},{"body":{"nodeType":"YulBlock","src":"3427:184:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3449:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"3457:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3445:3:14"},"nodeType":"YulFunctionCall","src":"3445:14:14"},{"hexValue":"5472616e73706172656e745570677261646561626c6550726f78793a2061646d","kind":"string","nodeType":"YulLiteral","src":"3461:34:14","type":"","value":"TransparentUpgradeableProxy: adm"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3438:6:14"},"nodeType":"YulFunctionCall","src":"3438:58:14"},"nodeType":"YulExpressionStatement","src":"3438:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3517:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"3525:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3513:3:14"},"nodeType":"YulFunctionCall","src":"3513:15:14"},{"hexValue":"696e2063616e6e6f742066616c6c6261636b20746f2070726f78792074617267","kind":"string","nodeType":"YulLiteral","src":"3530:34:14","type":"","value":"in cannot fallback to proxy targ"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3506:6:14"},"nodeType":"YulFunctionCall","src":"3506:59:14"},"nodeType":"YulExpressionStatement","src":"3506:59:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3586:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"3594:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3582:3:14"},"nodeType":"YulFunctionCall","src":"3582:15:14"},{"hexValue":"6574","kind":"string","nodeType":"YulLiteral","src":"3599:4:14","type":"","value":"et"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3575:6:14"},"nodeType":"YulFunctionCall","src":"3575:29:14"},"nodeType":"YulExpressionStatement","src":"3575:29:14"}]},"name":"store_literal_in_memory_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3419:6:14","type":""}],"src":"3321:290:14"},{"body":{"nodeType":"YulBlock","src":"3763:220:14","statements":[{"nodeType":"YulAssignment","src":"3773:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3839:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"3844:2:14","type":"","value":"66"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3780:58:14"},"nodeType":"YulFunctionCall","src":"3780:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3773:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3945:3:14"}],"functionName":{"name":"store_literal_in_memory_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d","nodeType":"YulIdentifier","src":"3856:88:14"},"nodeType":"YulFunctionCall","src":"3856:93:14"},"nodeType":"YulExpressionStatement","src":"3856:93:14"},{"nodeType":"YulAssignment","src":"3958:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3969:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"3974:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3965:3:14"},"nodeType":"YulFunctionCall","src":"3965:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3958:3:14"}]}]},"name":"abi_encode_t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3751:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3759:3:14","type":""}],"src":"3617:366:14"},{"body":{"nodeType":"YulBlock","src":"4160:248:14","statements":[{"nodeType":"YulAssignment","src":"4170:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4182:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4193:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4178:3:14"},"nodeType":"YulFunctionCall","src":"4178:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4170:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4217:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4228:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4213:3:14"},"nodeType":"YulFunctionCall","src":"4213:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4236:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"4242:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4232:3:14"},"nodeType":"YulFunctionCall","src":"4232:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4206:6:14"},"nodeType":"YulFunctionCall","src":"4206:47:14"},"nodeType":"YulExpressionStatement","src":"4206:47:14"},{"nodeType":"YulAssignment","src":"4262:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4396:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4270:124:14"},"nodeType":"YulFunctionCall","src":"4270:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4262:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4140:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4155:4:14","type":""}],"src":"3989:419:14"},{"body":{"nodeType":"YulBlock","src":"4540:206:14","statements":[{"nodeType":"YulAssignment","src":"4550:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4562:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4573:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4558:3:14"},"nodeType":"YulFunctionCall","src":"4558:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4550:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4630:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4643:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4654:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4639:3:14"},"nodeType":"YulFunctionCall","src":"4639:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4586:43:14"},"nodeType":"YulFunctionCall","src":"4586:71:14"},"nodeType":"YulExpressionStatement","src":"4586:71:14"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4711:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4724:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4735:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4720:3:14"},"nodeType":"YulFunctionCall","src":"4720:18:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4667:43:14"},"nodeType":"YulFunctionCall","src":"4667:72:14"},"nodeType":"YulExpressionStatement","src":"4667:72:14"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4504:9:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4516:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4524:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4535:4:14","type":""}],"src":"4414:332:14"},{"body":{"nodeType":"YulBlock","src":"4858:119:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4880:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"4888:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4876:3:14"},"nodeType":"YulFunctionCall","src":"4876:14:14"},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f","kind":"string","nodeType":"YulLiteral","src":"4892:34:14","type":"","value":"Address: delegate call to non-co"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4869:6:14"},"nodeType":"YulFunctionCall","src":"4869:58:14"},"nodeType":"YulExpressionStatement","src":"4869:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4948:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"4956:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4944:3:14"},"nodeType":"YulFunctionCall","src":"4944:15:14"},{"hexValue":"6e7472616374","kind":"string","nodeType":"YulLiteral","src":"4961:8:14","type":"","value":"ntract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4937:6:14"},"nodeType":"YulFunctionCall","src":"4937:33:14"},"nodeType":"YulExpressionStatement","src":"4937:33:14"}]},"name":"store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"4850:6:14","type":""}],"src":"4752:225:14"},{"body":{"nodeType":"YulBlock","src":"5129:220:14","statements":[{"nodeType":"YulAssignment","src":"5139:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5205:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"5210:2:14","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5146:58:14"},"nodeType":"YulFunctionCall","src":"5146:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5139:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5311:3:14"}],"functionName":{"name":"store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","nodeType":"YulIdentifier","src":"5222:88:14"},"nodeType":"YulFunctionCall","src":"5222:93:14"},"nodeType":"YulExpressionStatement","src":"5222:93:14"},{"nodeType":"YulAssignment","src":"5324:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5335:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"5340:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5331:3:14"},"nodeType":"YulFunctionCall","src":"5331:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5324:3:14"}]}]},"name":"abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5117:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5125:3:14","type":""}],"src":"4983:366:14"},{"body":{"nodeType":"YulBlock","src":"5526:248:14","statements":[{"nodeType":"YulAssignment","src":"5536:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5548:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5559:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5544:3:14"},"nodeType":"YulFunctionCall","src":"5544:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5536:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5583:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5594:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5579:3:14"},"nodeType":"YulFunctionCall","src":"5579:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5602:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"5608:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5598:3:14"},"nodeType":"YulFunctionCall","src":"5598:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5572:6:14"},"nodeType":"YulFunctionCall","src":"5572:47:14"},"nodeType":"YulExpressionStatement","src":"5572:47:14"},{"nodeType":"YulAssignment","src":"5628:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5762:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5636:124:14"},"nodeType":"YulFunctionCall","src":"5636:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5628:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5506:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5521:4:14","type":""}],"src":"5355:419:14"},{"body":{"nodeType":"YulBlock","src":"5838:40:14","statements":[{"nodeType":"YulAssignment","src":"5849:22:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5865:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5859:5:14"},"nodeType":"YulFunctionCall","src":"5859:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5849:6:14"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5821:5:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5831:6:14","type":""}],"src":"5780:98:14"},{"body":{"nodeType":"YulBlock","src":"5997:34:14","statements":[{"nodeType":"YulAssignment","src":"6007:18:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"6022:3:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6007:11:14"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5969:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"5974:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"5985:11:14","type":""}],"src":"5884:147:14"},{"body":{"nodeType":"YulBlock","src":"6086:258:14","statements":[{"nodeType":"YulVariableDeclaration","src":"6096:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"6105:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6100:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"6165:63:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6190:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"6195:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6186:3:14"},"nodeType":"YulFunctionCall","src":"6186:11:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6209:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"6214:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6205:3:14"},"nodeType":"YulFunctionCall","src":"6205:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6199:5:14"},"nodeType":"YulFunctionCall","src":"6199:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6179:6:14"},"nodeType":"YulFunctionCall","src":"6179:39:14"},"nodeType":"YulExpressionStatement","src":"6179:39:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6126:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"6129:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6123:2:14"},"nodeType":"YulFunctionCall","src":"6123:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6137:19:14","statements":[{"nodeType":"YulAssignment","src":"6139:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6148:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"6151:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6144:3:14"},"nodeType":"YulFunctionCall","src":"6144:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6139:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"6119:3:14","statements":[]},"src":"6115:113:14"},{"body":{"nodeType":"YulBlock","src":"6262:76:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6312:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"6317:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6308:3:14"},"nodeType":"YulFunctionCall","src":"6308:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"6326:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6301:6:14"},"nodeType":"YulFunctionCall","src":"6301:27:14"},"nodeType":"YulExpressionStatement","src":"6301:27:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6243:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"6246:6:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6240:2:14"},"nodeType":"YulFunctionCall","src":"6240:13:14"},"nodeType":"YulIf","src":"6237:101:14"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6068:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"6073:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"6078:6:14","type":""}],"src":"6037:307:14"},{"body":{"nodeType":"YulBlock","src":"6458:265:14","statements":[{"nodeType":"YulVariableDeclaration","src":"6468:52:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6514:5:14"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"6482:31:14"},"nodeType":"YulFunctionCall","src":"6482:38:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6472:6:14","type":""}]},{"nodeType":"YulAssignment","src":"6529:95:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6612:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"6617:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"6536:75:14"},"nodeType":"YulFunctionCall","src":"6536:88:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6529:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6659:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"6666:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6655:3:14"},"nodeType":"YulFunctionCall","src":"6655:16:14"},{"name":"pos","nodeType":"YulIdentifier","src":"6673:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"6678:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"6633:21:14"},"nodeType":"YulFunctionCall","src":"6633:52:14"},"nodeType":"YulExpressionStatement","src":"6633:52:14"},{"nodeType":"YulAssignment","src":"6694:23:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6705:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"6710:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6701:3:14"},"nodeType":"YulFunctionCall","src":"6701:16:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6694:3:14"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6439:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6446:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6454:3:14","type":""}],"src":"6350:373:14"},{"body":{"nodeType":"YulBlock","src":"6863:137:14","statements":[{"nodeType":"YulAssignment","src":"6874:100:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6961:6:14"},{"name":"pos","nodeType":"YulIdentifier","src":"6970:3:14"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"6881:79:14"},"nodeType":"YulFunctionCall","src":"6881:93:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6874:3:14"}]},{"nodeType":"YulAssignment","src":"6984:10:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"6991:3:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6984:3:14"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6842:3:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6848:6:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6859:3:14","type":""}],"src":"6729:271:14"},{"body":{"nodeType":"YulBlock","src":"7112:119:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7134:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"7142:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7130:3:14"},"nodeType":"YulFunctionCall","src":"7130:14:14"},{"hexValue":"455243313936373a206e65772061646d696e20697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"7146:34:14","type":"","value":"ERC1967: new admin is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7123:6:14"},"nodeType":"YulFunctionCall","src":"7123:58:14"},"nodeType":"YulExpressionStatement","src":"7123:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7202:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"7210:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7198:3:14"},"nodeType":"YulFunctionCall","src":"7198:15:14"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"7215:8:14","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7191:6:14"},"nodeType":"YulFunctionCall","src":"7191:33:14"},"nodeType":"YulExpressionStatement","src":"7191:33:14"}]},"name":"store_literal_in_memory_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7104:6:14","type":""}],"src":"7006:225:14"},{"body":{"nodeType":"YulBlock","src":"7383:220:14","statements":[{"nodeType":"YulAssignment","src":"7393:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7459:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"7464:2:14","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7400:58:14"},"nodeType":"YulFunctionCall","src":"7400:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7393:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7565:3:14"}],"functionName":{"name":"store_literal_in_memory_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","nodeType":"YulIdentifier","src":"7476:88:14"},"nodeType":"YulFunctionCall","src":"7476:93:14"},"nodeType":"YulExpressionStatement","src":"7476:93:14"},{"nodeType":"YulAssignment","src":"7578:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7589:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"7594:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7585:3:14"},"nodeType":"YulFunctionCall","src":"7585:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7578:3:14"}]}]},"name":"abi_encode_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7371:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7379:3:14","type":""}],"src":"7237:366:14"},{"body":{"nodeType":"YulBlock","src":"7780:248:14","statements":[{"nodeType":"YulAssignment","src":"7790:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7802:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7813:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7798:3:14"},"nodeType":"YulFunctionCall","src":"7798:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7790:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7837:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7848:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7833:3:14"},"nodeType":"YulFunctionCall","src":"7833:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7856:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"7862:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7852:3:14"},"nodeType":"YulFunctionCall","src":"7852:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7826:6:14"},"nodeType":"YulFunctionCall","src":"7826:47:14"},"nodeType":"YulExpressionStatement","src":"7826:47:14"},{"nodeType":"YulAssignment","src":"7882:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8016:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7890:124:14"},"nodeType":"YulFunctionCall","src":"7890:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7882:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7760:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7775:4:14","type":""}],"src":"7609:419:14"},{"body":{"nodeType":"YulBlock","src":"8093:40:14","statements":[{"nodeType":"YulAssignment","src":"8104:22:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8120:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8114:5:14"},"nodeType":"YulFunctionCall","src":"8114:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8104:6:14"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8076:5:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8086:6:14","type":""}],"src":"8034:99:14"},{"body":{"nodeType":"YulBlock","src":"8187:54:14","statements":[{"nodeType":"YulAssignment","src":"8197:38:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8215:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"8222:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8211:3:14"},"nodeType":"YulFunctionCall","src":"8211:14:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8231:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8227:3:14"},"nodeType":"YulFunctionCall","src":"8227:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8207:3:14"},"nodeType":"YulFunctionCall","src":"8207:28:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8197:6:14"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8170:5:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"8180:6:14","type":""}],"src":"8139:102:14"},{"body":{"nodeType":"YulBlock","src":"8339:272:14","statements":[{"nodeType":"YulVariableDeclaration","src":"8349:53:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8396:5:14"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8363:32:14"},"nodeType":"YulFunctionCall","src":"8363:39:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8353:6:14","type":""}]},{"nodeType":"YulAssignment","src":"8411:78:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8477:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"8482:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8418:58:14"},"nodeType":"YulFunctionCall","src":"8418:71:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8411:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8524:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"8531:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8520:3:14"},"nodeType":"YulFunctionCall","src":"8520:16:14"},{"name":"pos","nodeType":"YulIdentifier","src":"8538:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"8543:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"8498:21:14"},"nodeType":"YulFunctionCall","src":"8498:52:14"},"nodeType":"YulExpressionStatement","src":"8498:52:14"},{"nodeType":"YulAssignment","src":"8559:46:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8570:3:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8597:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8575:21:14"},"nodeType":"YulFunctionCall","src":"8575:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8566:3:14"},"nodeType":"YulFunctionCall","src":"8566:39:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8559:3:14"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8320:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8327:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8335:3:14","type":""}],"src":"8247:364:14"},{"body":{"nodeType":"YulBlock","src":"8735:195:14","statements":[{"nodeType":"YulAssignment","src":"8745:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8757:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8768:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8753:3:14"},"nodeType":"YulFunctionCall","src":"8753:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8745:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8792:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8803:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8788:3:14"},"nodeType":"YulFunctionCall","src":"8788:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8811:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"8817:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8807:3:14"},"nodeType":"YulFunctionCall","src":"8807:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8781:6:14"},"nodeType":"YulFunctionCall","src":"8781:47:14"},"nodeType":"YulExpressionStatement","src":"8781:47:14"},{"nodeType":"YulAssignment","src":"8837:86:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8909:6:14"},{"name":"tail","nodeType":"YulIdentifier","src":"8918:4:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8845:63:14"},"nodeType":"YulFunctionCall","src":"8845:78:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8837:4:14"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8707:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8719:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8730:4:14","type":""}],"src":"8617:313:14"},{"body":{"nodeType":"YulBlock","src":"9042:126:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9064:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"9072:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9060:3:14"},"nodeType":"YulFunctionCall","src":"9060:14:14"},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e","kind":"string","nodeType":"YulLiteral","src":"9076:34:14","type":"","value":"ERC1967: new implementation is n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9053:6:14"},"nodeType":"YulFunctionCall","src":"9053:58:14"},"nodeType":"YulExpressionStatement","src":"9053:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9132:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"9140:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9128:3:14"},"nodeType":"YulFunctionCall","src":"9128:15:14"},{"hexValue":"6f74206120636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"9145:15:14","type":"","value":"ot a contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9121:6:14"},"nodeType":"YulFunctionCall","src":"9121:40:14"},"nodeType":"YulExpressionStatement","src":"9121:40:14"}]},"name":"store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9034:6:14","type":""}],"src":"8936:232:14"},{"body":{"nodeType":"YulBlock","src":"9320:220:14","statements":[{"nodeType":"YulAssignment","src":"9330:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9396:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9401:2:14","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9337:58:14"},"nodeType":"YulFunctionCall","src":"9337:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9330:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9502:3:14"}],"functionName":{"name":"store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","nodeType":"YulIdentifier","src":"9413:88:14"},"nodeType":"YulFunctionCall","src":"9413:93:14"},"nodeType":"YulExpressionStatement","src":"9413:93:14"},{"nodeType":"YulAssignment","src":"9515:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9526:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9531:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9522:3:14"},"nodeType":"YulFunctionCall","src":"9522:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9515:3:14"}]}]},"name":"abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9308:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9316:3:14","type":""}],"src":"9174:366:14"},{"body":{"nodeType":"YulBlock","src":"9717:248:14","statements":[{"nodeType":"YulAssignment","src":"9727:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9739:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9750:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9735:3:14"},"nodeType":"YulFunctionCall","src":"9735:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9727:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9774:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9785:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9770:3:14"},"nodeType":"YulFunctionCall","src":"9770:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9793:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"9799:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9789:3:14"},"nodeType":"YulFunctionCall","src":"9789:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9763:6:14"},"nodeType":"YulFunctionCall","src":"9763:47:14"},"nodeType":"YulExpressionStatement","src":"9763:47:14"},{"nodeType":"YulAssignment","src":"9819:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9953:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9827:124:14"},"nodeType":"YulFunctionCall","src":"9827:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9819:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9697:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9712:4:14","type":""}],"src":"9546:419:14"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d(memPtr) {\n\n        mstore(add(memPtr, 0), \"TransparentUpgradeableProxy: adm\")\n\n        mstore(add(memPtr, 32), \"in cannot fallback to proxy targ\")\n\n        mstore(add(memPtr, 64), \"et\")\n\n    }\n\n    function abi_encode_t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 66)\n        store_literal_in_memory_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: delegate call to non-co\")\n\n        mstore(add(memPtr, 32), \"ntract\")\n\n    }\n\n    function abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1967: new admin is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1967: new implementation is n\")\n\n        mstore(add(memPtr, 32), \"ot a contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061004e5760003560e01c80633659cfe6146100675780634f1ef286146100905780635c60da1b146100ac5780638f283970146100d7578063f851a440146101005761005d565b3661005d5761005b61012b565b005b61006561012b565b005b34801561007357600080fd5b5061008e6004803603810190610089919061090b565b610145565b005b6100aa60048036038101906100a5919061099d565b6101ac565b005b3480156100b857600080fd5b506100c161024a565b6040516100ce9190610a0c565b60405180910390f35b3480156100e357600080fd5b506100fe60048036038101906100f9919061090b565b6102a2565b005b34801561010c57600080fd5b506101156102f7565b6040516101229190610a0c565b60405180910390f35b6101336103a9565b61014361013e610429565b610438565b565b61014d61045e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156101a05761019b816040518060200160405280600081525060006104b5565b6101a9565b6101a861012b565b5b50565b6101b461045e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561023c576102378383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505060016104b5565b610245565b61024461012b565b5b505050565b600061025461045e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156102965761028f610429565b905061029f565b61029e61012b565b5b90565b6102aa61045e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156102eb576102e6816104e1565b6102f4565b6102f361012b565b5b50565b600061030161045e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156103435761033c61045e565b905061034c565b61034b61012b565b5b90565b60606103748383604051806060016040528060278152602001610dd86027913961052d565b905092915050565b6000819050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6103b161045e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561041f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041690610ad0565b60405180910390fd5b6104276105fa565b565b60006104336105fc565b905090565b3660008037600080366000845af43d6000803e8060008114610459573d6000f35b3d6000fd5b600061048c7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b61037c565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104be83610653565b6000825111806104cb5750805b156104dc576104da838361034f565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f61050a61045e565b82604051610519929190610af0565b60405180910390a161052a816106a2565b50565b606061053884610386565b610577576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056e90610b8b565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168560405161059f9190610c25565b600060405180830381855af49150503d80600081146105da576040519150601f19603f3d011682016040523d82523d6000602084013e6105df565b606091505b50915091506105ef828286610783565b925050509392505050565b565b600061062a7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61037c565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61065c816107ea565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610712576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070990610cae565b60405180910390fd5b8061073f7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b61037c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60608315610793578290506107e3565b6000835111156107a65782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107da9190610d23565b60405180910390fd5b9392505050565b6107f381610386565b610832576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082990610db7565b60405180910390fd5b8061085f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61037c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108d8826108ad565b9050919050565b6108e8816108cd565b81146108f357600080fd5b50565b600081359050610905816108df565b92915050565b600060208284031215610921576109206108a3565b5b600061092f848285016108f6565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261095d5761095c610938565b5b8235905067ffffffffffffffff81111561097a5761097961093d565b5b60208301915083600182028301111561099657610995610942565b5b9250929050565b6000806000604084860312156109b6576109b56108a3565b5b60006109c4868287016108f6565b935050602084013567ffffffffffffffff8111156109e5576109e46108a8565b5b6109f186828701610947565b92509250509250925092565b610a06816108cd565b82525050565b6000602082019050610a2160008301846109fd565b92915050565b600082825260208201905092915050565b7f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60008201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760208201527f6574000000000000000000000000000000000000000000000000000000000000604082015250565b6000610aba604283610a27565b9150610ac582610a38565b606082019050919050565b60006020820190508181036000830152610ae981610aad565b9050919050565b6000604082019050610b0560008301856109fd565b610b1260208301846109fd565b9392505050565b7f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60008201527f6e74726163740000000000000000000000000000000000000000000000000000602082015250565b6000610b75602683610a27565b9150610b8082610b19565b604082019050919050565b60006020820190508181036000830152610ba481610b68565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015610bdf578082015181840152602081019050610bc4565b83811115610bee576000848401525b50505050565b6000610bff82610bab565b610c098185610bb6565b9350610c19818560208601610bc1565b80840191505092915050565b6000610c318284610bf4565b915081905092915050565b7f455243313936373a206e65772061646d696e20697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610c98602683610a27565b9150610ca382610c3c565b604082019050919050565b60006020820190508181036000830152610cc781610c8b565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b6000610cf582610cce565b610cff8185610a27565b9350610d0f818560208601610bc1565b610d1881610cd9565b840191505092915050565b60006020820190508181036000830152610d3d8184610cea565b905092915050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b6000610da1602d83610a27565b9150610dac82610d45565b604082019050919050565b60006020820190508181036000830152610dd081610d94565b905091905056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220bde7cb8871b03c099add256f9adeaeea1dc6fe7e15bdb29faa6e1f6e16b5074d64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x90 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x8F283970 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x100 JUMPI PUSH2 0x5D JUMP JUMPDEST CALLDATASIZE PUSH2 0x5D JUMPI PUSH2 0x5B PUSH2 0x12B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x65 PUSH2 0x12B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x89 SWAP2 SWAP1 PUSH2 0x90B JUMP JUMPDEST PUSH2 0x145 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA5 SWAP2 SWAP1 PUSH2 0x99D JUMP JUMPDEST PUSH2 0x1AC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC1 PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x90B JUMP JUMPDEST PUSH2 0x2A2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x115 PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x133 PUSH2 0x3A9 JUMP JUMPDEST PUSH2 0x143 PUSH2 0x13E PUSH2 0x429 JUMP JUMPDEST PUSH2 0x438 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x14D PUSH2 0x45E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A0 JUMPI PUSH2 0x19B DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0x4B5 JUMP JUMPDEST PUSH2 0x1A9 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x12B JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x1B4 PUSH2 0x45E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x23C JUMPI PUSH2 0x237 DUP4 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH1 0x1 PUSH2 0x4B5 JUMP JUMPDEST PUSH2 0x245 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x12B JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x254 PUSH2 0x45E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x296 JUMPI PUSH2 0x28F PUSH2 0x429 JUMP JUMPDEST SWAP1 POP PUSH2 0x29F JUMP JUMPDEST PUSH2 0x29E PUSH2 0x12B JUMP JUMPDEST JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2AA PUSH2 0x45E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2EB JUMPI PUSH2 0x2E6 DUP2 PUSH2 0x4E1 JUMP JUMPDEST PUSH2 0x2F4 JUMP JUMPDEST PUSH2 0x2F3 PUSH2 0x12B JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x301 PUSH2 0x45E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x343 JUMPI PUSH2 0x33C PUSH2 0x45E JUMP JUMPDEST SWAP1 POP PUSH2 0x34C JUMP JUMPDEST PUSH2 0x34B PUSH2 0x12B JUMP JUMPDEST JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x374 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDD8 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x52D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B1 PUSH2 0x45E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x41F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x416 SWAP1 PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x427 PUSH2 0x5FA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 PUSH2 0x5FC JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x459 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x48C PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 PUSH1 0x0 SHL PUSH2 0x37C JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4BE DUP4 PUSH2 0x653 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x4CB JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x4DC JUMPI PUSH2 0x4DA DUP4 DUP4 PUSH2 0x34F JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH2 0x50A PUSH2 0x45E JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH2 0x519 SWAP3 SWAP2 SWAP1 PUSH2 0xAF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x52A DUP2 PUSH2 0x6A2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x538 DUP5 PUSH2 0x386 JUMP JUMPDEST PUSH2 0x577 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56E SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x59F SWAP2 SWAP1 PUSH2 0xC25 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x5EF DUP3 DUP3 DUP7 PUSH2 0x783 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62A PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x37C JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x65C DUP2 PUSH2 0x7EA JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x712 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x709 SWAP1 PUSH2 0xCAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x73F PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 PUSH1 0x0 SHL PUSH2 0x37C JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x793 JUMPI DUP3 SWAP1 POP PUSH2 0x7E3 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x7A6 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DA SWAP2 SWAP1 PUSH2 0xD23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x7F3 DUP2 PUSH2 0x386 JUMP JUMPDEST PUSH2 0x832 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x829 SWAP1 PUSH2 0xDB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x85F PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x37C JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D8 DUP3 PUSH2 0x8AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8E8 DUP2 PUSH2 0x8CD JUMP JUMPDEST DUP2 EQ PUSH2 0x8F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x905 DUP2 PUSH2 0x8DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x921 JUMPI PUSH2 0x920 PUSH2 0x8A3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x92F DUP5 DUP3 DUP6 ADD PUSH2 0x8F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x95D JUMPI PUSH2 0x95C PUSH2 0x938 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x97A JUMPI PUSH2 0x979 PUSH2 0x93D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x996 JUMPI PUSH2 0x995 PUSH2 0x942 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9B6 JUMPI PUSH2 0x9B5 PUSH2 0x8A3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9C4 DUP7 DUP3 DUP8 ADD PUSH2 0x8F6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9E5 JUMPI PUSH2 0x9E4 PUSH2 0x8A8 JUMP JUMPDEST JUMPDEST PUSH2 0x9F1 DUP7 DUP3 DUP8 ADD PUSH2 0x947 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xA06 DUP2 PUSH2 0x8CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA21 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73706172656E745570677261646561626C6550726F78793A2061646D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x696E2063616E6E6F742066616C6C6261636B20746F2070726F78792074617267 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6574000000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xABA PUSH1 0x42 DUP4 PUSH2 0xA27 JUMP JUMPDEST SWAP2 POP PUSH2 0xAC5 DUP3 PUSH2 0xA38 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAE9 DUP2 PUSH2 0xAAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB05 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x9FD JUMP JUMPDEST PUSH2 0xB12 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9FD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E74726163740000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB75 PUSH1 0x26 DUP4 PUSH2 0xA27 JUMP JUMPDEST SWAP2 POP PUSH2 0xB80 DUP3 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBA4 DUP2 PUSH2 0xB68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBDF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xBC4 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xBEE JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBFF DUP3 PUSH2 0xBAB JUMP JUMPDEST PUSH2 0xC09 DUP2 DUP6 PUSH2 0xBB6 JUMP JUMPDEST SWAP4 POP PUSH2 0xC19 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xBC1 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC31 DUP3 DUP5 PUSH2 0xBF4 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC98 PUSH1 0x26 DUP4 PUSH2 0xA27 JUMP JUMPDEST SWAP2 POP PUSH2 0xCA3 DUP3 PUSH2 0xC3C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCC7 DUP2 PUSH2 0xC8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF5 DUP3 PUSH2 0xCCE JUMP JUMPDEST PUSH2 0xCFF DUP2 DUP6 PUSH2 0xA27 JUMP JUMPDEST SWAP4 POP PUSH2 0xD0F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0xD18 DUP2 PUSH2 0xCD9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD3D DUP2 DUP5 PUSH2 0xCEA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA1 PUSH1 0x2D DUP4 PUSH2 0xA27 JUMP JUMPDEST SWAP2 POP PUSH2 0xDAC DUP3 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDD0 DUP2 PUSH2 0xD94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220BDE7CB DUP9 PUSH18 0xB03C099ADD256F9ADEAEEA1DC6FE7E15BDB2 SWAP16 0xAA PUSH15 0x1F6E16B5074D64736F6C6343000809 STOP CALLER ","sourceMap":"1649:3469:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2898:11:4;:9;:11::i;:::-;1649:3469:7;;2675:11:4;:9;:11::i;:::-;1649:3469:7;3960:134;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4470:164;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3363:129;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3697:103;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2807:96;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2322:110:4;2370:17;:15;:17::i;:::-;2397:28;2407:17;:15;:17::i;:::-;2397:9;:28::i;:::-;2322:110::o;3960:134:7:-;2278:11;:9;:11::i;:::-;2264:25;;:10;:25;;;2260:99;;;4033:54:::1;4051:17;4070:9;;;;;;;;;;;::::0;4081:5:::1;4033:17;:54::i;:::-;2260:99:::0;;;2337:11;:9;:11::i;:::-;2260:99;3960:134;:::o;4470:164::-;2278:11;:9;:11::i;:::-;2264:25;;:10;:25;;;2260:99;;;4579:48:::1;4597:17;4616:4;;4579:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4622:4;4579:17;:48::i;:::-;2260:99:::0;;;2337:11;:9;:11::i;:::-;2260:99;4470:164;;;:::o;3363:129::-;3415:23;2278:11;:9;:11::i;:::-;2264:25;;:10;:25;;;2260:99;;;3468:17:::1;:15;:17::i;:::-;3450:35;;2260:99:::0;;;2337:11;:9;:11::i;:::-;2260:99;3363:129;:::o;3697:103::-;2278:11;:9;:11::i;:::-;2264:25;;:10;:25;;;2260:99;;;3771:22:::1;3784:8;3771:12;:22::i;:::-;2260:99:::0;;;2337:11;:9;:11::i;:::-;2260:99;3697:103;:::o;2807:96::-;2850:14;2278:11;:9;:11::i;:::-;2264:25;;:10;:25;;;2260:99;;;2885:11:::1;:9;:11::i;:::-;2876:20;;2260:99:::0;;;2337:11;:9;:11::i;:::-;2260:99;2807:96;:::o;6570:198:8:-;6653:12;6684:77;6705:6;6713:4;6684:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6677:84;;6570:198;;;;:::o;1614:190:10:-;1675:21;1784:4;1774:14;;1614:190;;;:::o;1175:320:8:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;4909:207:7:-;4994:11;:9;:11::i;:::-;4980:25;;:10;:25;;;;4972:104;;;;;;;;;;;;:::i;:::-;;;;;;;;;5086:23;:21;:23::i;:::-;4909:207::o;1148:140:2:-;1215:12;1246:35;:33;:35::i;:::-;1239:42;;1148:140;:::o;948:895:4:-;1286:14;1283:1;1280;1267:34;1500:1;1497;1481:14;1478:1;1462:14;1455:5;1442:60;1576:16;1573:1;1570;1555:38;1614:6;1686:1;1681:66;;;;1796:16;1793:1;1786:27;1681:66;1716:16;1713:1;1706:27;4108:122:3;4152:7;4178:39;3842:66;4205:11;;4178:26;:39::i;:::-;:45;;;;;;;;;;;;4171:52;;4108:122;:::o;2183:295::-;2321:29;2332:17;2321:10;:29::i;:::-;2378:1;2364:4;:11;:15;:28;;;;2383:9;2364:28;2360:112;;;2408:53;2437:17;2456:4;2408:28;:53::i;:::-;;2360:112;2183:295;;;:::o;4624:135::-;4688:35;4701:11;:9;:11::i;:::-;4714:8;4688:35;;;;;;;:::i;:::-;;;;;;;;4733:19;4743:8;4733:9;:19::i;:::-;4624:135;:::o;6954:387:8:-;7095:12;7127:18;7138:6;7127:10;:18::i;:::-;7119:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;7200:12;7214:23;7241:6;:19;;7261:4;7241:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7199:67;;;;7283:51;7300:7;7309:10;7321:12;7283:16;:51::i;:::-;7276:58;;;;6954:387;;;;;:::o;3198:46:4:-;:::o;1301:140:3:-;1354:7;1380:48;1030:66;1407:20;;1380:26;:48::i;:::-;:54;;;;;;;;;;;;1373:61;;1301:140;:::o;1897:152::-;1963:37;1982:17;1963:18;:37::i;:::-;2024:17;2015:27;;;;;;;;;;;;1897:152;:::o;4312:201::-;4395:1;4375:22;;:8;:22;;;;4367:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;4498:8;4450:39;3842:66;4477:11;;4450:26;:39::i;:::-;:45;;;:56;;;;;;;;;;;;;;;;;;4312:201;:::o;7561:742:8:-;7707:12;7735:7;7731:566;;;7765:10;7758:17;;;;7731:566;7896:1;7876:10;:17;:21;7872:415;;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;7872:415;8259:12;8252:20;;;;;;;;;;;:::i;:::-;;;;;;;;7561:742;;;;;;:::o;1532:259:3:-;1613:37;1632:17;1613:18;:37::i;:::-;1605:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:17;1710:48;1030:66;1737:20;;1710:26;:48::i;:::-;:54;;;:74;;;;;;;;;;;;;;;;;;1532:259;:::o;88:117:14:-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:117::-;1285:1;1282;1275:12;1299:117;1408:1;1405;1398:12;1422:117;1531:1;1528;1521:12;1558:552;1615:8;1625:6;1675:3;1668:4;1660:6;1656:17;1652:27;1642:122;;1683:79;;:::i;:::-;1642:122;1796:6;1783:20;1773:30;;1826:18;1818:6;1815:30;1812:117;;;1848:79;;:::i;:::-;1812:117;1962:4;1954:6;1950:17;1938:29;;2016:3;2008:4;2000:6;1996:17;1986:8;1982:32;1979:41;1976:128;;;2023:79;;:::i;:::-;1976:128;1558:552;;;;;:::o;2116:672::-;2195:6;2203;2211;2260:2;2248:9;2239:7;2235:23;2231:32;2228:119;;;2266:79;;:::i;:::-;2228:119;2386:1;2411:53;2456:7;2447:6;2436:9;2432:22;2411:53;:::i;:::-;2401:63;;2357:117;2541:2;2530:9;2526:18;2513:32;2572:18;2564:6;2561:30;2558:117;;;2594:79;;:::i;:::-;2558:117;2707:64;2763:7;2754:6;2743:9;2739:22;2707:64;:::i;:::-;2689:82;;;;2484:297;2116:672;;;;;:::o;2794:118::-;2881:24;2899:5;2881:24;:::i;:::-;2876:3;2869:37;2794:118;;:::o;2918:222::-;3011:4;3049:2;3038:9;3034:18;3026:26;;3062:71;3130:1;3119:9;3115:17;3106:6;3062:71;:::i;:::-;2918:222;;;;:::o;3146:169::-;3230:11;3264:6;3259:3;3252:19;3304:4;3299:3;3295:14;3280:29;;3146:169;;;;:::o;3321:290::-;3461:34;3457:1;3449:6;3445:14;3438:58;3530:34;3525:2;3517:6;3513:15;3506:59;3599:4;3594:2;3586:6;3582:15;3575:29;3321:290;:::o;3617:366::-;3759:3;3780:67;3844:2;3839:3;3780:67;:::i;:::-;3773:74;;3856:93;3945:3;3856:93;:::i;:::-;3974:2;3969:3;3965:12;3958:19;;3617:366;;;:::o;3989:419::-;4155:4;4193:2;4182:9;4178:18;4170:26;;4242:9;4236:4;4232:20;4228:1;4217:9;4213:17;4206:47;4270:131;4396:4;4270:131;:::i;:::-;4262:139;;3989:419;;;:::o;4414:332::-;4535:4;4573:2;4562:9;4558:18;4550:26;;4586:71;4654:1;4643:9;4639:17;4630:6;4586:71;:::i;:::-;4667:72;4735:2;4724:9;4720:18;4711:6;4667:72;:::i;:::-;4414:332;;;;;:::o;4752:225::-;4892:34;4888:1;4880:6;4876:14;4869:58;4961:8;4956:2;4948:6;4944:15;4937:33;4752:225;:::o;4983:366::-;5125:3;5146:67;5210:2;5205:3;5146:67;:::i;:::-;5139:74;;5222:93;5311:3;5222:93;:::i;:::-;5340:2;5335:3;5331:12;5324:19;;4983:366;;;:::o;5355:419::-;5521:4;5559:2;5548:9;5544:18;5536:26;;5608:9;5602:4;5598:20;5594:1;5583:9;5579:17;5572:47;5636:131;5762:4;5636:131;:::i;:::-;5628:139;;5355:419;;;:::o;5780:98::-;5831:6;5865:5;5859:12;5849:22;;5780:98;;;:::o;5884:147::-;5985:11;6022:3;6007:18;;5884:147;;;;:::o;6037:307::-;6105:1;6115:113;6129:6;6126:1;6123:13;6115:113;;;6214:1;6209:3;6205:11;6199:18;6195:1;6190:3;6186:11;6179:39;6151:2;6148:1;6144:10;6139:15;;6115:113;;;6246:6;6243:1;6240:13;6237:101;;;6326:1;6317:6;6312:3;6308:16;6301:27;6237:101;6086:258;6037:307;;;:::o;6350:373::-;6454:3;6482:38;6514:5;6482:38;:::i;:::-;6536:88;6617:6;6612:3;6536:88;:::i;:::-;6529:95;;6633:52;6678:6;6673:3;6666:4;6659:5;6655:16;6633:52;:::i;:::-;6710:6;6705:3;6701:16;6694:23;;6458:265;6350:373;;;;:::o;6729:271::-;6859:3;6881:93;6970:3;6961:6;6881:93;:::i;:::-;6874:100;;6991:3;6984:10;;6729:271;;;;:::o;7006:225::-;7146:34;7142:1;7134:6;7130:14;7123:58;7215:8;7210:2;7202:6;7198:15;7191:33;7006:225;:::o;7237:366::-;7379:3;7400:67;7464:2;7459:3;7400:67;:::i;:::-;7393:74;;7476:93;7565:3;7476:93;:::i;:::-;7594:2;7589:3;7585:12;7578:19;;7237:366;;;:::o;7609:419::-;7775:4;7813:2;7802:9;7798:18;7790:26;;7862:9;7856:4;7852:20;7848:1;7837:9;7833:17;7826:47;7890:131;8016:4;7890:131;:::i;:::-;7882:139;;7609:419;;;:::o;8034:99::-;8086:6;8120:5;8114:12;8104:22;;8034:99;;;:::o;8139:102::-;8180:6;8231:2;8227:7;8222:2;8215:5;8211:14;8207:28;8197:38;;8139:102;;;:::o;8247:364::-;8335:3;8363:39;8396:5;8363:39;:::i;:::-;8418:71;8482:6;8477:3;8418:71;:::i;:::-;8411:78;;8498:52;8543:6;8538:3;8531:4;8524:5;8520:16;8498:52;:::i;:::-;8575:29;8597:6;8575:29;:::i;:::-;8570:3;8566:39;8559:46;;8339:272;8247:364;;;;:::o;8617:313::-;8730:4;8768:2;8757:9;8753:18;8745:26;;8817:9;8811:4;8807:20;8803:1;8792:9;8788:17;8781:47;8845:78;8918:4;8909:6;8845:78;:::i;:::-;8837:86;;8617:313;;;;:::o;8936:232::-;9076:34;9072:1;9064:6;9060:14;9053:58;9145:15;9140:2;9132:6;9128:15;9121:40;8936:232;:::o;9174:366::-;9316:3;9337:67;9401:2;9396:3;9337:67;:::i;:::-;9330:74;;9413:93;9502:3;9413:93;:::i;:::-;9531:2;9526:3;9522:12;9515:19;;9174:366;;;:::o;9546:419::-;9712:4;9750:2;9739:9;9735:18;9727:26;;9799:9;9793:4;9789:20;9785:1;9774:9;9770:17;9763:47;9827:131;9953:4;9827:131;:::i;:::-;9819:139;;9546:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"727200","executionCost":"infinite","totalCost":"infinite"},"external":{"":"infinite","admin()":"infinite","changeAdmin(address)":"infinite","implementation()":"infinite","upgradeTo(address)":"infinite","upgradeToAndCall(address,bytes)":"infinite"},"internal":{"_admin()":"infinite","_beforeFallback()":"infinite"}},"methodIdentifiers":{"admin()":"f851a440","changeAdmin(address)":"8f283970","implementation()":"5c60da1b","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \\\"admin cannot fallback to proxy target\\\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\",\"kind\":\"dev\",\"methods\":{\"admin()\":{\"details\":\"Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\"},\"changeAdmin(address)\":{\"details\":\"Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\"},\"constructor\":{\"details\":\"Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\"},\"implementation()\":{\"details\":\"Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":\"TransparentUpgradeableProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/ERC1967/ERC1967Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"./ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializing the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        _upgradeToAndCall(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal view virtual override returns (address impl) {\\n        return ERC1967Upgrade._getImplementation();\\n    }\\n}\\n\",\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n *\\n * @custom:oz-upgrades-unsafe-allow delegatecall\\n */\\nabstract contract ERC1967Upgrade {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Emitted when the beacon is upgraded.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            Address.isContract(IBeacon(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(\\n        address newBeacon,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xabf3f59bc0e5423eae45e459dbe92e7052c6983628d39008590edc852a62f94a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/transparent/TransparentUpgradeableProxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1967/ERC1967Proxy.sol\\\";\\n\\n/**\\n * @dev This contract implements a proxy that is upgradeable by an admin.\\n *\\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\\n * clashing], which can potentially be used in an attack, this contract uses the\\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\\n * things that go hand in hand:\\n *\\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\\n * that call matches one of the admin functions exposed by the proxy itself.\\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\\n * \\\"admin cannot fallback to proxy target\\\".\\n *\\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\\n * to sudden errors when trying to call a function from the proxy implementation.\\n *\\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\\n * you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\\n */\\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\\n    /**\\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\\n     * optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\\n     */\\n    constructor(\\n        address _logic,\\n        address admin_,\\n        bytes memory _data\\n    ) payable ERC1967Proxy(_logic, _data) {\\n        _changeAdmin(admin_);\\n    }\\n\\n    /**\\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\\n     */\\n    modifier ifAdmin() {\\n        if (msg.sender == _getAdmin()) {\\n            _;\\n        } else {\\n            _fallback();\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function admin() external ifAdmin returns (address admin_) {\\n        admin_ = _getAdmin();\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\\n     */\\n    function implementation() external ifAdmin returns (address implementation_) {\\n        implementation_ = _implementation();\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\\n     */\\n    function changeAdmin(address newAdmin) external virtual ifAdmin {\\n        _changeAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\\n     */\\n    function upgradeTo(address newImplementation) external ifAdmin {\\n        _upgradeToAndCall(newImplementation, bytes(\\\"\\\"), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\\n     * proxied contract.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes calldata data) external payable ifAdmin {\\n        _upgradeToAndCall(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _admin() internal view virtual returns (address) {\\n        return _getAdmin();\\n    }\\n\\n    /**\\n     * @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}.\\n     */\\n    function _beforeFallback() internal virtual override {\\n        require(msg.sender != _getAdmin(), \\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\");\\n        super._beforeFallback();\\n    }\\n}\\n\",\"keccak256\":\"0xa6a787e7a901af6511e19aa53e1a00352db215a011d2c7a438d0582dd5da76f9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122004008c2120df1d8a05a66d978bee00676de89aecfcb50953de5356e50af930ab64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV STOP DUP13 0x21 KECCAK256 0xDF SAR DUP11 SDIV 0xA6 PUSH14 0x978BEE00676DE89AECFCB50953DE MSTORE8 JUMP 0xE5 EXP 0xF9 ADDRESS 0xAB PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"194:8111:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122004008c2120df1d8a05a66d978bee00676de89aecfcb50953de5356e50af930ab64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV STOP DUP13 0x21 KECCAK256 0xDF SAR DUP11 SDIV 0xA6 PUSH14 0x978BEE00676DE89AECFCB50953DE MSTORE8 JUMP 0xE5 EXP 0xF9 ADDRESS 0xAB PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"194:8111:8:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"devdoc":{"details":"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d865275001638b12f67b21c3dfd0c3ec838856bac3c1eecbabf0b559770abca864736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 PUSH6 0x275001638B12 0xF6 PUSH28 0x21C3DFD0C3EC838856BAC3C1EECBABF0B559770ABCA864736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"1279:1391:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d865275001638b12f67b21c3dfd0c3ec838856bac3c1eecbabf0b559770abca864736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 PUSH6 0x275001638B12 0xF6 PUSH28 0x21C3DFD0C3EC838856BAC3C1EECBABF0B559770ABCA864736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"1279:1391:10:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"getAddressSlot(bytes32)":"infinite","getBooleanSlot(bytes32)":"infinite","getBytes32Slot(bytes32)":"infinite","getUint256Slot(bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Box.sol":{"Box":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newVale","type":"uint256"}],"name":"valueChanged","type":"event"},{"inputs":[],"name":"retrieve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"newValue","type":"uint256"}],"name":"store","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b506102a8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632e64cec11461004657806354fd4d50146100645780636057361d14610082575b600080fd5b61004e61009e565b60405161005b919061013e565b60405180910390f35b61006c6100a7565b60405161007991906101f2565b60405180910390f35b61009c60048036038101906100979190610245565b6100e4565b005b60008054905090565b60606040518060400160405280600381526020017f312e300000000000000000000000000000000000000000000000000000000000815250905090565b806000819055507fc0dd44d3f117c96295a84b2eb7b3f6abe929928d111b030bfb3568f5efa0ff1f8160405161011a919061013e565b60405180910390a150565b6000819050919050565b61013881610125565b82525050565b6000602082019050610153600083018461012f565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610193578082015181840152602081019050610178565b838111156101a2576000848401525b50505050565b6000601f19601f8301169050919050565b60006101c482610159565b6101ce8185610164565b93506101de818560208601610175565b6101e7816101a8565b840191505092915050565b6000602082019050818103600083015261020c81846101b9565b905092915050565b600080fd5b61022281610125565b811461022d57600080fd5b50565b60008135905061023f81610219565b92915050565b60006020828403121561025b5761025a610214565b5b600061026984828501610230565b9150509291505056fea26469706673582212207da34a16d0ee2cd0429c31c2903e4ea999db642b91032521727de3894838732564736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E64CEC1 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x6057361D EQ PUSH2 0x82 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x13E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0xA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x1F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x245 JUMP JUMPDEST PUSH2 0xE4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x312E300000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH32 0xC0DD44D3F117C96295A84B2EB7B3F6ABE929928D111B030BFB3568F5EFA0FF1F DUP2 PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x13E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x138 DUP2 PUSH2 0x125 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x153 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x193 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x178 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C4 DUP3 PUSH2 0x159 JUMP JUMPDEST PUSH2 0x1CE DUP2 DUP6 PUSH2 0x164 JUMP JUMPDEST SWAP4 POP PUSH2 0x1DE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x175 JUMP JUMPDEST PUSH2 0x1E7 DUP2 PUSH2 0x1A8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20C DUP2 DUP5 PUSH2 0x1B9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x222 DUP2 PUSH2 0x125 JUMP JUMPDEST DUP2 EQ PUSH2 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23F DUP2 PUSH2 0x219 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25B JUMPI PUSH2 0x25A PUSH2 0x214 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x269 DUP5 DUP3 DUP6 ADD PUSH2 0x230 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0xA34A16D0EE2CD0429C31C2903E4EA999DB642B91032521727DE389483873 0x25 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"92:376:11:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@retrieve_1230":{"entryPoint":158,"id":1230,"parameterSlots":0,"returnSlots":1},"@store_1222":{"entryPoint":228,"id":1222,"parameterSlots":1,"returnSlots":0},"@version_1238":{"entryPoint":167,"id":1238,"parameterSlots":0,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":560,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":581,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":441,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":303,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":498,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":318,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":345,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":356,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":293,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":373,"id":null,"parameterSlots":3,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":532,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":424,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_uint256":{"entryPoint":537,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2764:14","statements":[{"body":{"nodeType":"YulBlock","src":"52:32:14","statements":[{"nodeType":"YulAssignment","src":"62:16:14","value":{"name":"value","nodeType":"YulIdentifier","src":"73:5:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:14"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:14","type":""}],"src":"7:77:14"},{"body":{"nodeType":"YulBlock","src":"155:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"172:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"195:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"177:17:14"},"nodeType":"YulFunctionCall","src":"177:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"165:6:14"},"nodeType":"YulFunctionCall","src":"165:37:14"},"nodeType":"YulExpressionStatement","src":"165:37:14"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"143:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"150:3:14","type":""}],"src":"90:118:14"},{"body":{"nodeType":"YulBlock","src":"312:124:14","statements":[{"nodeType":"YulAssignment","src":"322:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"345:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"330:3:14"},"nodeType":"YulFunctionCall","src":"330:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"322:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"402:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"426:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:14"},"nodeType":"YulFunctionCall","src":"411:17:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"358:43:14"},"nodeType":"YulFunctionCall","src":"358:71:14"},"nodeType":"YulExpressionStatement","src":"358:71:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"284:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"296:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"307:4:14","type":""}],"src":"214:222:14"},{"body":{"nodeType":"YulBlock","src":"501:40:14","statements":[{"nodeType":"YulAssignment","src":"512:22:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"528:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"522:5:14"},"nodeType":"YulFunctionCall","src":"522:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"512:6:14"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"484:5:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"494:6:14","type":""}],"src":"442:99:14"},{"body":{"nodeType":"YulBlock","src":"643:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"660:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"665:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"653:6:14"},"nodeType":"YulFunctionCall","src":"653:19:14"},"nodeType":"YulExpressionStatement","src":"653:19:14"},{"nodeType":"YulAssignment","src":"681:29:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"700:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"705:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"696:3:14"},"nodeType":"YulFunctionCall","src":"696:14:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"681:11:14"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"615:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"620:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"631:11:14","type":""}],"src":"547:169:14"},{"body":{"nodeType":"YulBlock","src":"771:258:14","statements":[{"nodeType":"YulVariableDeclaration","src":"781:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"790:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"785:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"850:63:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"875:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"880:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"871:3:14"},"nodeType":"YulFunctionCall","src":"871:11:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"894:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"899:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"890:3:14"},"nodeType":"YulFunctionCall","src":"890:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"884:5:14"},"nodeType":"YulFunctionCall","src":"884:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"864:6:14"},"nodeType":"YulFunctionCall","src":"864:39:14"},"nodeType":"YulExpressionStatement","src":"864:39:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"811:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"814:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"808:2:14"},"nodeType":"YulFunctionCall","src":"808:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"822:19:14","statements":[{"nodeType":"YulAssignment","src":"824:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"833:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"836:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"829:3:14"},"nodeType":"YulFunctionCall","src":"829:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"824:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"804:3:14","statements":[]},"src":"800:113:14"},{"body":{"nodeType":"YulBlock","src":"947:76:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"997:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"1002:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"993:3:14"},"nodeType":"YulFunctionCall","src":"993:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"1011:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"986:6:14"},"nodeType":"YulFunctionCall","src":"986:27:14"},"nodeType":"YulExpressionStatement","src":"986:27:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"928:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"931:6:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"925:2:14"},"nodeType":"YulFunctionCall","src":"925:13:14"},"nodeType":"YulIf","src":"922:101:14"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"753:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"758:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"763:6:14","type":""}],"src":"722:307:14"},{"body":{"nodeType":"YulBlock","src":"1083:54:14","statements":[{"nodeType":"YulAssignment","src":"1093:38:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1111:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"1118:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1107:3:14"},"nodeType":"YulFunctionCall","src":"1107:14:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1127:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1123:3:14"},"nodeType":"YulFunctionCall","src":"1123:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1103:3:14"},"nodeType":"YulFunctionCall","src":"1103:28:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1093:6:14"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1066:5:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1076:6:14","type":""}],"src":"1035:102:14"},{"body":{"nodeType":"YulBlock","src":"1235:272:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1245:53:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1292:5:14"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1259:32:14"},"nodeType":"YulFunctionCall","src":"1259:39:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1249:6:14","type":""}]},{"nodeType":"YulAssignment","src":"1307:78:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1373:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"1378:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1314:58:14"},"nodeType":"YulFunctionCall","src":"1314:71:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1307:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1420:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"1427:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1416:3:14"},"nodeType":"YulFunctionCall","src":"1416:16:14"},{"name":"pos","nodeType":"YulIdentifier","src":"1434:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"1439:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"1394:21:14"},"nodeType":"YulFunctionCall","src":"1394:52:14"},"nodeType":"YulExpressionStatement","src":"1394:52:14"},{"nodeType":"YulAssignment","src":"1455:46:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1466:3:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1493:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1471:21:14"},"nodeType":"YulFunctionCall","src":"1471:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1462:3:14"},"nodeType":"YulFunctionCall","src":"1462:39:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1455:3:14"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1216:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1223:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1231:3:14","type":""}],"src":"1143:364:14"},{"body":{"nodeType":"YulBlock","src":"1631:195:14","statements":[{"nodeType":"YulAssignment","src":"1641:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1653:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1664:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1649:3:14"},"nodeType":"YulFunctionCall","src":"1649:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1641:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1688:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1699:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1684:3:14"},"nodeType":"YulFunctionCall","src":"1684:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1707:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1713:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1703:3:14"},"nodeType":"YulFunctionCall","src":"1703:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1677:6:14"},"nodeType":"YulFunctionCall","src":"1677:47:14"},"nodeType":"YulExpressionStatement","src":"1677:47:14"},{"nodeType":"YulAssignment","src":"1733:86:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1805:6:14"},{"name":"tail","nodeType":"YulIdentifier","src":"1814:4:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1741:63:14"},"nodeType":"YulFunctionCall","src":"1741:78:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1733:4:14"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1603:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1615:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1626:4:14","type":""}],"src":"1513:313:14"},{"body":{"nodeType":"YulBlock","src":"1872:35:14","statements":[{"nodeType":"YulAssignment","src":"1882:19:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1898:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1892:5:14"},"nodeType":"YulFunctionCall","src":"1892:9:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1882:6:14"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1865:6:14","type":""}],"src":"1832:75:14"},{"body":{"nodeType":"YulBlock","src":"2002:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:14"},"nodeType":"YulFunctionCall","src":"2012:12:14"},"nodeType":"YulExpressionStatement","src":"2012:12:14"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1913:117:14"},{"body":{"nodeType":"YulBlock","src":"2125:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2142:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2145:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2135:6:14"},"nodeType":"YulFunctionCall","src":"2135:12:14"},"nodeType":"YulExpressionStatement","src":"2135:12:14"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"2036:117:14"},{"body":{"nodeType":"YulBlock","src":"2202:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"2259:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2268:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2271:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2261:6:14"},"nodeType":"YulFunctionCall","src":"2261:12:14"},"nodeType":"YulExpressionStatement","src":"2261:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2225:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2250:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2232:17:14"},"nodeType":"YulFunctionCall","src":"2232:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2222:2:14"},"nodeType":"YulFunctionCall","src":"2222:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2215:6:14"},"nodeType":"YulFunctionCall","src":"2215:43:14"},"nodeType":"YulIf","src":"2212:63:14"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2195:5:14","type":""}],"src":"2159:122:14"},{"body":{"nodeType":"YulBlock","src":"2339:87:14","statements":[{"nodeType":"YulAssignment","src":"2349:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2371:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2358:12:14"},"nodeType":"YulFunctionCall","src":"2358:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2349:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2414:5:14"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2387:26:14"},"nodeType":"YulFunctionCall","src":"2387:33:14"},"nodeType":"YulExpressionStatement","src":"2387:33:14"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2317:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"2325:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2333:5:14","type":""}],"src":"2287:139:14"},{"body":{"nodeType":"YulBlock","src":"2498:263:14","statements":[{"body":{"nodeType":"YulBlock","src":"2544:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2546:77:14"},"nodeType":"YulFunctionCall","src":"2546:79:14"},"nodeType":"YulExpressionStatement","src":"2546:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2519:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2528:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2515:3:14"},"nodeType":"YulFunctionCall","src":"2515:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2540:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2511:3:14"},"nodeType":"YulFunctionCall","src":"2511:32:14"},"nodeType":"YulIf","src":"2508:119:14"},{"nodeType":"YulBlock","src":"2637:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2652:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2666:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2656:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2681:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2716:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2727:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2712:3:14"},"nodeType":"YulFunctionCall","src":"2712:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2736:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2691:20:14"},"nodeType":"YulFunctionCall","src":"2691:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2681:6:14"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2468:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2479:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2491:6:14","type":""}],"src":"2432:329:14"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c80632e64cec11461004657806354fd4d50146100645780636057361d14610082575b600080fd5b61004e61009e565b60405161005b919061013e565b60405180910390f35b61006c6100a7565b60405161007991906101f2565b60405180910390f35b61009c60048036038101906100979190610245565b6100e4565b005b60008054905090565b60606040518060400160405280600381526020017f312e300000000000000000000000000000000000000000000000000000000000815250905090565b806000819055507fc0dd44d3f117c96295a84b2eb7b3f6abe929928d111b030bfb3568f5efa0ff1f8160405161011a919061013e565b60405180910390a150565b6000819050919050565b61013881610125565b82525050565b6000602082019050610153600083018461012f565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610193578082015181840152602081019050610178565b838111156101a2576000848401525b50505050565b6000601f19601f8301169050919050565b60006101c482610159565b6101ce8185610164565b93506101de818560208601610175565b6101e7816101a8565b840191505092915050565b6000602082019050818103600083015261020c81846101b9565b905092915050565b600080fd5b61022281610125565b811461022d57600080fd5b50565b60008135905061023f81610219565b92915050565b60006020828403121561025b5761025a610214565b5b600061026984828501610230565b9150509291505056fea26469706673582212207da34a16d0ee2cd0429c31c2903e4ea999db642b91032521727de3894838732564736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E64CEC1 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x6057361D EQ PUSH2 0x82 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x13E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0xA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x1F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x245 JUMP JUMPDEST PUSH2 0xE4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x312E300000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH32 0xC0DD44D3F117C96295A84B2EB7B3F6ABE929928D111B030BFB3568F5EFA0FF1F DUP2 PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x13E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x138 DUP2 PUSH2 0x125 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x153 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x193 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x178 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C4 DUP3 PUSH2 0x159 JUMP JUMPDEST PUSH2 0x1CE DUP2 DUP6 PUSH2 0x164 JUMP JUMPDEST SWAP4 POP PUSH2 0x1DE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x175 JUMP JUMPDEST PUSH2 0x1E7 DUP2 PUSH2 0x1A8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20C DUP2 DUP5 PUSH2 0x1B9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x222 DUP2 PUSH2 0x125 JUMP JUMPDEST DUP2 EQ PUSH2 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23F DUP2 PUSH2 0x219 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25B JUMPI PUSH2 0x25A PUSH2 0x214 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x269 DUP5 DUP3 DUP6 ADD PUSH2 0x230 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0xA34A16D0EE2CD0429C31C2903E4EA999DB642B91032521727DE389483873 0x25 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"92:376:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;297:79;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;382:84;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;181:110;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;297:79;338:7;364:5;;357:12;;297:79;:::o;382:84::-;422:13;447:12;;;;;;;;;;;;;;;;;;;382:84;:::o;181:110::-;239:8;231:5;:16;;;;262:22;275:8;262:22;;;;;;:::i;:::-;;;;;;;;181:110;:::o;7:77:14:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:99::-;494:6;528:5;522:12;512:22;;442:99;;;:::o;547:169::-;631:11;665:6;660:3;653:19;705:4;700:3;696:14;681:29;;547:169;;;;:::o;722:307::-;790:1;800:113;814:6;811:1;808:13;800:113;;;899:1;894:3;890:11;884:18;880:1;875:3;871:11;864:39;836:2;833:1;829:10;824:15;;800:113;;;931:6;928:1;925:13;922:101;;;1011:1;1002:6;997:3;993:16;986:27;922:101;771:258;722:307;;;:::o;1035:102::-;1076:6;1127:2;1123:7;1118:2;1111:5;1107:14;1103:28;1093:38;;1035:102;;;:::o;1143:364::-;1231:3;1259:39;1292:5;1259:39;:::i;:::-;1314:71;1378:6;1373:3;1314:71;:::i;:::-;1307:78;;1394:52;1439:6;1434:3;1427:4;1420:5;1416:16;1394:52;:::i;:::-;1471:29;1493:6;1471:29;:::i;:::-;1466:3;1462:39;1455:46;;1235:272;1143:364;;;;:::o;1513:313::-;1626:4;1664:2;1653:9;1649:18;1641:26;;1713:9;1707:4;1703:20;1699:1;1688:9;1684:17;1677:47;1741:78;1814:4;1805:6;1741:78;:::i;:::-;1733:86;;1513:313;;;;:::o;1913:117::-;2022:1;2019;2012:12;2159:122;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:329::-;2491:6;2540:2;2528:9;2519:7;2515:23;2511:32;2508:119;;;2546:79;;:::i;:::-;2508:119;2666:1;2691:53;2736:7;2727:6;2716:9;2712:22;2691:53;:::i;:::-;2681:63;;2637:117;2432:329;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"136000","executionCost":"183","totalCost":"136183"},"external":{"retrieve()":"2415","store(uint256)":"infinite","version()":"infinite"}},"methodIdentifiers":{"retrieve()":"2e64cec1","store(uint256)":"6057361d","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVale\",\"type\":\"uint256\"}],\"name\":\"valueChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"retrieve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Box.sol\":\"Box\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Box.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\n//Implementation or Logic Contract\\ncontract Box {\\n    uint256 internal value;\\n    event valueChanged(uint256 newVale);\\n\\n    function store(uint256 newValue) public {\\n        value = newValue;\\n        emit valueChanged(newValue);\\n    }\\n\\n    function retrieve() public view returns (uint256) {\\n        return value;\\n    }\\n\\n    function version() public pure returns (string memory) {\\n        return '1.0';\\n    }\\n}\\n\",\"keccak256\":\"0x7bfbc486124bd5f71bde8f813808765f49b3daf5ce24e1946d789514c811b6b9\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1204,"contract":"contracts/Box.sol:Box","label":"value","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/BoxV2.sol":{"BoxV2":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newVale","type":"uint256"}],"name":"valueChanged","type":"event"},{"inputs":[],"name":"increment","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"retrieve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"newValue","type":"uint256"}],"name":"store","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b506103ae806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632e64cec11461005157806354fd4d501461006f5780636057361d1461008d578063d09de08a146100a9575b600080fd5b6100596100c7565b60405161006691906101bf565b60405180910390f35b6100776100d0565b6040516100849190610273565b60405180910390f35b6100a760048036038101906100a291906102c6565b61010d565b005b6100b161014e565b6040516100be91906101bf565b60405180910390f35b60008054905090565b60606040518060400160405280600381526020017f322e300000000000000000000000000000000000000000000000000000000000815250905090565b806000819055507fc0dd44d3f117c96295a84b2eb7b3f6abe929928d111b030bfb3568f5efa0ff1f8160405161014391906101bf565b60405180910390a150565b6000600160005461015f9190610322565b6000819055507fc0dd44d3f117c96295a84b2eb7b3f6abe929928d111b030bfb3568f5efa0ff1f60005460405161019691906101bf565b60405180910390a1600054905090565b6000819050919050565b6101b9816101a6565b82525050565b60006020820190506101d460008301846101b0565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156102145780820151818401526020810190506101f9565b83811115610223576000848401525b50505050565b6000601f19601f8301169050919050565b6000610245826101da565b61024f81856101e5565b935061025f8185602086016101f6565b61026881610229565b840191505092915050565b6000602082019050818103600083015261028d818461023a565b905092915050565b600080fd5b6102a3816101a6565b81146102ae57600080fd5b50565b6000813590506102c08161029a565b92915050565b6000602082840312156102dc576102db610295565b5b60006102ea848285016102b1565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061032d826101a6565b9150610338836101a6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561036d5761036c6102f3565b5b82820190509291505056fea2646970667358221220409e1e2baa634b0d63e64f481da834dbfe76dc5313a1f18228d0da0bfad6297564736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AE DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E64CEC1 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0x6057361D EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH2 0xA9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x1BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x77 PUSH2 0xD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x273 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x2C6 JUMP JUMPDEST PUSH2 0x10D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB1 PUSH2 0x14E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x1BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x322E300000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH32 0xC0DD44D3F117C96295A84B2EB7B3F6ABE929928D111B030BFB3568F5EFA0FF1F DUP2 PUSH1 0x40 MLOAD PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x1BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x322 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH32 0xC0DD44D3F117C96295A84B2EB7B3F6ABE929928D111B030BFB3568F5EFA0FF1F PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x1BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B9 DUP2 PUSH2 0x1A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x214 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F9 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x245 DUP3 PUSH2 0x1DA JUMP JUMPDEST PUSH2 0x24F DUP2 DUP6 PUSH2 0x1E5 JUMP JUMPDEST SWAP4 POP PUSH2 0x25F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F6 JUMP JUMPDEST PUSH2 0x268 DUP2 PUSH2 0x229 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28D DUP2 DUP5 PUSH2 0x23A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A3 DUP2 PUSH2 0x1A6 JUMP JUMPDEST DUP2 EQ PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2C0 DUP2 PUSH2 0x29A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DC JUMPI PUSH2 0x2DB PUSH2 0x295 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2EA DUP5 DUP3 DUP6 ADD PUSH2 0x2B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x32D DUP3 PUSH2 0x1A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x338 DUP4 PUSH2 0x1A6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x36D JUMPI PUSH2 0x36C PUSH2 0x2F3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH SWAP15 0x1E 0x2B 0xAA PUSH4 0x4B0D63E6 0x4F BASEFEE SAR 0xA8 CALLVALUE 0xDB INVALID PUSH23 0xDC5313A1F18228D0DA0BFAD6297564736F6C6343000809 STOP CALLER ","sourceMap":"92:520:12:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@increment_1287":{"entryPoint":334,"id":1287,"parameterSlots":0,"returnSlots":1},"@retrieve_1269":{"entryPoint":199,"id":1269,"parameterSlots":0,"returnSlots":1},"@store_1261":{"entryPoint":269,"id":1261,"parameterSlots":1,"returnSlots":0},"@version_1295":{"entryPoint":208,"id":1295,"parameterSlots":0,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":689,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":710,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":570,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":432,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":627,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":447,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":474,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":485,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":802,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":422,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":502,"id":null,"parameterSlots":3,"returnSlots":0},"panic_error_0x11":{"entryPoint":755,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":661,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":553,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_uint256":{"entryPoint":666,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3261:14","statements":[{"body":{"nodeType":"YulBlock","src":"52:32:14","statements":[{"nodeType":"YulAssignment","src":"62:16:14","value":{"name":"value","nodeType":"YulIdentifier","src":"73:5:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:14"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:14","type":""}],"src":"7:77:14"},{"body":{"nodeType":"YulBlock","src":"155:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"172:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"195:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"177:17:14"},"nodeType":"YulFunctionCall","src":"177:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"165:6:14"},"nodeType":"YulFunctionCall","src":"165:37:14"},"nodeType":"YulExpressionStatement","src":"165:37:14"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"143:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"150:3:14","type":""}],"src":"90:118:14"},{"body":{"nodeType":"YulBlock","src":"312:124:14","statements":[{"nodeType":"YulAssignment","src":"322:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"345:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"330:3:14"},"nodeType":"YulFunctionCall","src":"330:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"322:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"402:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"426:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:14"},"nodeType":"YulFunctionCall","src":"411:17:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"358:43:14"},"nodeType":"YulFunctionCall","src":"358:71:14"},"nodeType":"YulExpressionStatement","src":"358:71:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"284:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"296:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"307:4:14","type":""}],"src":"214:222:14"},{"body":{"nodeType":"YulBlock","src":"501:40:14","statements":[{"nodeType":"YulAssignment","src":"512:22:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"528:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"522:5:14"},"nodeType":"YulFunctionCall","src":"522:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"512:6:14"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"484:5:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"494:6:14","type":""}],"src":"442:99:14"},{"body":{"nodeType":"YulBlock","src":"643:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"660:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"665:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"653:6:14"},"nodeType":"YulFunctionCall","src":"653:19:14"},"nodeType":"YulExpressionStatement","src":"653:19:14"},{"nodeType":"YulAssignment","src":"681:29:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"700:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"705:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"696:3:14"},"nodeType":"YulFunctionCall","src":"696:14:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"681:11:14"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"615:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"620:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"631:11:14","type":""}],"src":"547:169:14"},{"body":{"nodeType":"YulBlock","src":"771:258:14","statements":[{"nodeType":"YulVariableDeclaration","src":"781:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"790:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"785:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"850:63:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"875:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"880:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"871:3:14"},"nodeType":"YulFunctionCall","src":"871:11:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"894:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"899:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"890:3:14"},"nodeType":"YulFunctionCall","src":"890:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"884:5:14"},"nodeType":"YulFunctionCall","src":"884:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"864:6:14"},"nodeType":"YulFunctionCall","src":"864:39:14"},"nodeType":"YulExpressionStatement","src":"864:39:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"811:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"814:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"808:2:14"},"nodeType":"YulFunctionCall","src":"808:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"822:19:14","statements":[{"nodeType":"YulAssignment","src":"824:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"833:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"836:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"829:3:14"},"nodeType":"YulFunctionCall","src":"829:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"824:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"804:3:14","statements":[]},"src":"800:113:14"},{"body":{"nodeType":"YulBlock","src":"947:76:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"997:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"1002:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"993:3:14"},"nodeType":"YulFunctionCall","src":"993:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"1011:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"986:6:14"},"nodeType":"YulFunctionCall","src":"986:27:14"},"nodeType":"YulExpressionStatement","src":"986:27:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"928:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"931:6:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"925:2:14"},"nodeType":"YulFunctionCall","src":"925:13:14"},"nodeType":"YulIf","src":"922:101:14"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"753:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"758:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"763:6:14","type":""}],"src":"722:307:14"},{"body":{"nodeType":"YulBlock","src":"1083:54:14","statements":[{"nodeType":"YulAssignment","src":"1093:38:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1111:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"1118:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1107:3:14"},"nodeType":"YulFunctionCall","src":"1107:14:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1127:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1123:3:14"},"nodeType":"YulFunctionCall","src":"1123:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1103:3:14"},"nodeType":"YulFunctionCall","src":"1103:28:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1093:6:14"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1066:5:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1076:6:14","type":""}],"src":"1035:102:14"},{"body":{"nodeType":"YulBlock","src":"1235:272:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1245:53:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1292:5:14"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1259:32:14"},"nodeType":"YulFunctionCall","src":"1259:39:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1249:6:14","type":""}]},{"nodeType":"YulAssignment","src":"1307:78:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1373:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"1378:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1314:58:14"},"nodeType":"YulFunctionCall","src":"1314:71:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1307:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1420:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"1427:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1416:3:14"},"nodeType":"YulFunctionCall","src":"1416:16:14"},{"name":"pos","nodeType":"YulIdentifier","src":"1434:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"1439:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"1394:21:14"},"nodeType":"YulFunctionCall","src":"1394:52:14"},"nodeType":"YulExpressionStatement","src":"1394:52:14"},{"nodeType":"YulAssignment","src":"1455:46:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1466:3:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1493:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1471:21:14"},"nodeType":"YulFunctionCall","src":"1471:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1462:3:14"},"nodeType":"YulFunctionCall","src":"1462:39:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1455:3:14"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1216:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1223:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1231:3:14","type":""}],"src":"1143:364:14"},{"body":{"nodeType":"YulBlock","src":"1631:195:14","statements":[{"nodeType":"YulAssignment","src":"1641:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1653:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1664:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1649:3:14"},"nodeType":"YulFunctionCall","src":"1649:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1641:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1688:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1699:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1684:3:14"},"nodeType":"YulFunctionCall","src":"1684:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1707:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1713:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1703:3:14"},"nodeType":"YulFunctionCall","src":"1703:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1677:6:14"},"nodeType":"YulFunctionCall","src":"1677:47:14"},"nodeType":"YulExpressionStatement","src":"1677:47:14"},{"nodeType":"YulAssignment","src":"1733:86:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1805:6:14"},{"name":"tail","nodeType":"YulIdentifier","src":"1814:4:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1741:63:14"},"nodeType":"YulFunctionCall","src":"1741:78:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1733:4:14"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1603:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1615:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1626:4:14","type":""}],"src":"1513:313:14"},{"body":{"nodeType":"YulBlock","src":"1872:35:14","statements":[{"nodeType":"YulAssignment","src":"1882:19:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1898:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1892:5:14"},"nodeType":"YulFunctionCall","src":"1892:9:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1882:6:14"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1865:6:14","type":""}],"src":"1832:75:14"},{"body":{"nodeType":"YulBlock","src":"2002:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:14"},"nodeType":"YulFunctionCall","src":"2012:12:14"},"nodeType":"YulExpressionStatement","src":"2012:12:14"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1913:117:14"},{"body":{"nodeType":"YulBlock","src":"2125:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2142:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2145:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2135:6:14"},"nodeType":"YulFunctionCall","src":"2135:12:14"},"nodeType":"YulExpressionStatement","src":"2135:12:14"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"2036:117:14"},{"body":{"nodeType":"YulBlock","src":"2202:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"2259:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2268:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2271:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2261:6:14"},"nodeType":"YulFunctionCall","src":"2261:12:14"},"nodeType":"YulExpressionStatement","src":"2261:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2225:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2250:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2232:17:14"},"nodeType":"YulFunctionCall","src":"2232:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2222:2:14"},"nodeType":"YulFunctionCall","src":"2222:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2215:6:14"},"nodeType":"YulFunctionCall","src":"2215:43:14"},"nodeType":"YulIf","src":"2212:63:14"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2195:5:14","type":""}],"src":"2159:122:14"},{"body":{"nodeType":"YulBlock","src":"2339:87:14","statements":[{"nodeType":"YulAssignment","src":"2349:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2371:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2358:12:14"},"nodeType":"YulFunctionCall","src":"2358:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2349:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2414:5:14"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2387:26:14"},"nodeType":"YulFunctionCall","src":"2387:33:14"},"nodeType":"YulExpressionStatement","src":"2387:33:14"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2317:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"2325:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2333:5:14","type":""}],"src":"2287:139:14"},{"body":{"nodeType":"YulBlock","src":"2498:263:14","statements":[{"body":{"nodeType":"YulBlock","src":"2544:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2546:77:14"},"nodeType":"YulFunctionCall","src":"2546:79:14"},"nodeType":"YulExpressionStatement","src":"2546:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2519:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2528:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2515:3:14"},"nodeType":"YulFunctionCall","src":"2515:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2540:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2511:3:14"},"nodeType":"YulFunctionCall","src":"2511:32:14"},"nodeType":"YulIf","src":"2508:119:14"},{"nodeType":"YulBlock","src":"2637:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2652:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2666:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2656:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2681:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2716:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2727:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2712:3:14"},"nodeType":"YulFunctionCall","src":"2712:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2736:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2691:20:14"},"nodeType":"YulFunctionCall","src":"2691:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2681:6:14"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2468:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2479:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2491:6:14","type":""}],"src":"2432:329:14"},{"body":{"nodeType":"YulBlock","src":"2795:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2812:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2815:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2805:6:14"},"nodeType":"YulFunctionCall","src":"2805:88:14"},"nodeType":"YulExpressionStatement","src":"2805:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2909:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2912:4:14","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2902:6:14"},"nodeType":"YulFunctionCall","src":"2902:15:14"},"nodeType":"YulExpressionStatement","src":"2902:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2933:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2936:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2926:6:14"},"nodeType":"YulFunctionCall","src":"2926:15:14"},"nodeType":"YulExpressionStatement","src":"2926:15:14"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"2767:180:14"},{"body":{"nodeType":"YulBlock","src":"2997:261:14","statements":[{"nodeType":"YulAssignment","src":"3007:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3030:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3012:17:14"},"nodeType":"YulFunctionCall","src":"3012:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"3007:1:14"}]},{"nodeType":"YulAssignment","src":"3041:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3064:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3046:17:14"},"nodeType":"YulFunctionCall","src":"3046:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"3041:1:14"}]},{"body":{"nodeType":"YulBlock","src":"3204:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3206:16:14"},"nodeType":"YulFunctionCall","src":"3206:18:14"},"nodeType":"YulExpressionStatement","src":"3206:18:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3125:1:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3132:66:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"3200:1:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3128:3:14"},"nodeType":"YulFunctionCall","src":"3128:74:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3122:2:14"},"nodeType":"YulFunctionCall","src":"3122:81:14"},"nodeType":"YulIf","src":"3119:107:14"},{"nodeType":"YulAssignment","src":"3236:16:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3247:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"3250:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3243:3:14"},"nodeType":"YulFunctionCall","src":"3243:9:14"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"3236:3:14"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2984:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"2987:1:14","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"2993:3:14","type":""}],"src":"2953:305:14"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061004c5760003560e01c80632e64cec11461005157806354fd4d501461006f5780636057361d1461008d578063d09de08a146100a9575b600080fd5b6100596100c7565b60405161006691906101bf565b60405180910390f35b6100776100d0565b6040516100849190610273565b60405180910390f35b6100a760048036038101906100a291906102c6565b61010d565b005b6100b161014e565b6040516100be91906101bf565b60405180910390f35b60008054905090565b60606040518060400160405280600381526020017f322e300000000000000000000000000000000000000000000000000000000000815250905090565b806000819055507fc0dd44d3f117c96295a84b2eb7b3f6abe929928d111b030bfb3568f5efa0ff1f8160405161014391906101bf565b60405180910390a150565b6000600160005461015f9190610322565b6000819055507fc0dd44d3f117c96295a84b2eb7b3f6abe929928d111b030bfb3568f5efa0ff1f60005460405161019691906101bf565b60405180910390a1600054905090565b6000819050919050565b6101b9816101a6565b82525050565b60006020820190506101d460008301846101b0565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156102145780820151818401526020810190506101f9565b83811115610223576000848401525b50505050565b6000601f19601f8301169050919050565b6000610245826101da565b61024f81856101e5565b935061025f8185602086016101f6565b61026881610229565b840191505092915050565b6000602082019050818103600083015261028d818461023a565b905092915050565b600080fd5b6102a3816101a6565b81146102ae57600080fd5b50565b6000813590506102c08161029a565b92915050565b6000602082840312156102dc576102db610295565b5b60006102ea848285016102b1565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061032d826101a6565b9150610338836101a6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561036d5761036c6102f3565b5b82820190509291505056fea2646970667358221220409e1e2baa634b0d63e64f481da834dbfe76dc5313a1f18228d0da0bfad6297564736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E64CEC1 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0x6057361D EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH2 0xA9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x1BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x77 PUSH2 0xD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x273 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x2C6 JUMP JUMPDEST PUSH2 0x10D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB1 PUSH2 0x14E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x1BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x322E300000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH32 0xC0DD44D3F117C96295A84B2EB7B3F6ABE929928D111B030BFB3568F5EFA0FF1F DUP2 PUSH1 0x40 MLOAD PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x1BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x322 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH32 0xC0DD44D3F117C96295A84B2EB7B3F6ABE929928D111B030BFB3568F5EFA0FF1F PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x1BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B9 DUP2 PUSH2 0x1A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x214 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F9 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x245 DUP3 PUSH2 0x1DA JUMP JUMPDEST PUSH2 0x24F DUP2 DUP6 PUSH2 0x1E5 JUMP JUMPDEST SWAP4 POP PUSH2 0x25F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F6 JUMP JUMPDEST PUSH2 0x268 DUP2 PUSH2 0x229 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28D DUP2 DUP5 PUSH2 0x23A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A3 DUP2 PUSH2 0x1A6 JUMP JUMPDEST DUP2 EQ PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2C0 DUP2 PUSH2 0x29A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DC JUMPI PUSH2 0x2DB PUSH2 0x295 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2EA DUP5 DUP3 DUP6 ADD PUSH2 0x2B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x32D DUP3 PUSH2 0x1A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x338 DUP4 PUSH2 0x1A6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x36D JUMPI PUSH2 0x36C PUSH2 0x2F3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH SWAP15 0x1E 0x2B 0xAA PUSH4 0x4B0D63E6 0x4F BASEFEE SAR 0xA8 CALLVALUE 0xDB INVALID PUSH23 0xDC5313A1F18228D0DA0BFAD6297564736F6C6343000809 STOP CALLER ","sourceMap":"92:520:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;298:80;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;525:84;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;183:110;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;384:135;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;298:80;340:7;366:5;;359:12;;298:80;:::o;525:84::-;565:13;590:12;;;;;;;;;;;;;;;;;;;525:84;:::o;183:110::-;241:8;233:5;:16;;;;264:22;277:8;264:22;;;;;;:::i;:::-;;;;;;;;183:110;:::o;384:135::-;421:7;455:1;447:5;;:9;;;;:::i;:::-;439:5;:17;;;;471:19;484:5;;471:19;;;;;;:::i;:::-;;;;;;;;507:5;;500:12;;384:135;:::o;7:77:14:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:99::-;494:6;528:5;522:12;512:22;;442:99;;;:::o;547:169::-;631:11;665:6;660:3;653:19;705:4;700:3;696:14;681:29;;547:169;;;;:::o;722:307::-;790:1;800:113;814:6;811:1;808:13;800:113;;;899:1;894:3;890:11;884:18;880:1;875:3;871:11;864:39;836:2;833:1;829:10;824:15;;800:113;;;931:6;928:1;925:13;922:101;;;1011:1;1002:6;997:3;993:16;986:27;922:101;771:258;722:307;;;:::o;1035:102::-;1076:6;1127:2;1123:7;1118:2;1111:5;1107:14;1103:28;1093:38;;1035:102;;;:::o;1143:364::-;1231:3;1259:39;1292:5;1259:39;:::i;:::-;1314:71;1378:6;1373:3;1314:71;:::i;:::-;1307:78;;1394:52;1439:6;1434:3;1427:4;1420:5;1416:16;1394:52;:::i;:::-;1471:29;1493:6;1471:29;:::i;:::-;1466:3;1462:39;1455:46;;1235:272;1143:364;;;;:::o;1513:313::-;1626:4;1664:2;1653:9;1649:18;1641:26;;1713:9;1707:4;1703:20;1699:1;1688:9;1684:17;1677:47;1741:78;1814:4;1805:6;1741:78;:::i;:::-;1733:86;;1513:313;;;;:::o;1913:117::-;2022:1;2019;2012:12;2159:122;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:329::-;2491:6;2540:2;2528:9;2519:7;2515:23;2511:32;2508:119;;;2546:79;;:::i;:::-;2508:119;2666:1;2691:53;2736:7;2727:6;2716:9;2712:22;2691:53;:::i;:::-;2681:63;;2637:117;2432:329;;;;:::o;2767:180::-;2815:77;2812:1;2805:88;2912:4;2909:1;2902:15;2936:4;2933:1;2926:15;2953:305;2993:3;3012:20;3030:1;3012:20;:::i;:::-;3007:25;;3046:20;3064:1;3046:20;:::i;:::-;3041:25;;3200:1;3132:66;3128:74;3125:1;3122:81;3119:107;;;3206:18;;:::i;:::-;3119:107;3250:1;3247;3243:9;3236:16;;2953:305;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"188400","executionCost":"232","totalCost":"188632"},"external":{"increment()":"infinite","retrieve()":"2415","store(uint256)":"infinite","version()":"infinite"}},"methodIdentifiers":{"increment()":"d09de08a","retrieve()":"2e64cec1","store(uint256)":"6057361d","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVale\",\"type\":\"uint256\"}],\"name\":\"valueChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"increment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BoxV2.sol\":\"BoxV2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BoxV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\n//Implementation or Logic Contract\\ncontract BoxV2 {\\n    uint256 internal value;\\n    event valueChanged(uint256 newVale);\\n\\n    function store(uint256 newValue) public {\\n        value = newValue;\\n        emit valueChanged(newValue);\\n    }\\n    function retrieve() public view  returns (uint256) {\\n        return value;\\n    }\\n\\n    function increment() public returns (uint256){\\n        value = value + 1;\\n        emit valueChanged(value);\\n        return value;\\n    }\\n\\n    function version() public pure returns (string memory) {\\n        return \\\"2.0\\\";\\n    }\\n\\n}\",\"keccak256\":\"0x49d7f5fd30ec73e85a3fad5f66cd333758cd0dd07f8b045ad9a933c39b71274d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1243,"contract":"contracts/BoxV2.sol:BoxV2","label":"value","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Proxy/BoxProxyAdmin.sol":{"BoxProxyAdmin":{"abi":[{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"contract TransparentUpgradeableProxy","name":"proxy","type":"address"},{"internalType":"address","name":"newAdmin","type":"address"}],"name":"changeProxyAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract TransparentUpgradeableProxy","name":"proxy","type":"address"}],"name":"getProxyAdmin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract TransparentUpgradeableProxy","name":"proxy","type":"address"}],"name":"getProxyImplementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract TransparentUpgradeableProxy","name":"proxy","type":"address"},{"internalType":"address","name":"implementation","type":"address"}],"name":"upgrade","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract TransparentUpgradeableProxy","name":"proxy","type":"address"},{"internalType":"address","name":"implementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"kind":"dev","methods":{"changeProxyAdmin(address,address)":{"details":"Changes the admin of `proxy` to `newAdmin`. Requirements: - This contract must be the current admin of `proxy`."},"getProxyAdmin(address)":{"details":"Returns the current admin of `proxy`. Requirements: - This contract must be the admin of `proxy`."},"getProxyImplementation(address)":{"details":"Returns the current implementation of `proxy`. Requirements: - This contract must be the admin of `proxy`."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"upgrade(address,address)":{"details":"Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}. Requirements: - This contract must be the admin of `proxy`."},"upgradeAndCall(address,address,bytes)":{"details":"Upgrades `proxy` to `implementation` and calls a function on the new implementation. See {TransparentUpgradeableProxy-upgradeToAndCall}. Requirements: - This contract must be the admin of `proxy`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1309":{"entryPoint":null,"id":1309,"parameterSlots":1,"returnSlots":0},"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_msgSender_1130":{"entryPoint":94,"id":1130,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":102,"id":111,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":381,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":404,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":335,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":303,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":298,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":355,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1199:14","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:14","statements":[{"nodeType":"YulAssignment","src":"57:19:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:14"},"nodeType":"YulFunctionCall","src":"67:9:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:14"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:14","type":""}],"src":"7:75:14"},{"body":{"nodeType":"YulBlock","src":"177:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:14"},"nodeType":"YulFunctionCall","src":"187:12:14"},"nodeType":"YulExpressionStatement","src":"187:12:14"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:14"},{"body":{"nodeType":"YulBlock","src":"300:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:14"},"nodeType":"YulFunctionCall","src":"310:12:14"},"nodeType":"YulExpressionStatement","src":"310:12:14"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:14"},{"body":{"nodeType":"YulBlock","src":"379:81:14","statements":[{"nodeType":"YulAssignment","src":"389:65:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:14"},"nodeType":"YulFunctionCall","src":"400:54:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:14"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:14","type":""}],"src":"334:126:14"},{"body":{"nodeType":"YulBlock","src":"511:51:14","statements":[{"nodeType":"YulAssignment","src":"521:35:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:14"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:14"},"nodeType":"YulFunctionCall","src":"532:24:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:14"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:14","type":""}],"src":"466:96:14"},{"body":{"nodeType":"YulBlock","src":"611:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:14"},"nodeType":"YulFunctionCall","src":"670:12:14"},"nodeType":"YulExpressionStatement","src":"670:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:14"},"nodeType":"YulFunctionCall","src":"641:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:14"},"nodeType":"YulFunctionCall","src":"631:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:14"},"nodeType":"YulFunctionCall","src":"624:43:14"},"nodeType":"YulIf","src":"621:63:14"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:14","type":""}],"src":"568:122:14"},{"body":{"nodeType":"YulBlock","src":"759:80:14","statements":[{"nodeType":"YulAssignment","src":"769:22:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:14"},"nodeType":"YulFunctionCall","src":"778:13:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:14"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:14"},"nodeType":"YulFunctionCall","src":"800:33:14"},"nodeType":"YulExpressionStatement","src":"800:33:14"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:14","type":""}],"src":"696:143:14"},{"body":{"nodeType":"YulBlock","src":"922:274:14","statements":[{"body":{"nodeType":"YulBlock","src":"968:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"970:77:14"},"nodeType":"YulFunctionCall","src":"970:79:14"},"nodeType":"YulExpressionStatement","src":"970:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"943:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"952:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"939:3:14"},"nodeType":"YulFunctionCall","src":"939:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"964:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"935:3:14"},"nodeType":"YulFunctionCall","src":"935:32:14"},"nodeType":"YulIf","src":"932:119:14"},{"nodeType":"YulBlock","src":"1061:128:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1076:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"1090:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1080:6:14","type":""}]},{"nodeType":"YulAssignment","src":"1105:74:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"1162:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1147:3:14"},"nodeType":"YulFunctionCall","src":"1147:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1171:7:14"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1115:31:14"},"nodeType":"YulFunctionCall","src":"1115:64:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1105:6:14"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"892:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"903:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"915:6:14","type":""}],"src":"845:351:14"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000ea338038062000ea3833981810160405281019062000037919062000194565b620000576200004b6200005e60201b60201c565b6200006660201b60201c565b50620001c6565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200015c826200012f565b9050919050565b6200016e816200014f565b81146200017a57600080fd5b50565b6000815190506200018e8162000163565b92915050565b600060208284031215620001ad57620001ac6200012a565b5b6000620001bd848285016200017d565b91505092915050565b610ccd80620001d66000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461012857806399a88ec414610144578063f2fde38b1461016d578063f3b7dead146101965761007b565b8063204e1c7a14610080578063715018a6146100bd5780637eff275e146100d45780638da5cb5b146100fd575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a291906106f3565b6101d3565b6040516100b49190610741565b60405180910390f35b3480156100c957600080fd5b506100d2610267565b005b3480156100e057600080fd5b506100fb60048036038101906100f69190610788565b61027b565b005b34801561010957600080fd5b506101126102f2565b60405161011f9190610741565b60405180910390f35b610142600480360381019061013d919061090e565b61031b565b005b34801561015057600080fd5b5061016b60048036038101906101669190610788565b610396565b005b34801561017957600080fd5b50610194600480360381019061018f919061097d565b61040d565b005b3480156101a257600080fd5b506101bd60048036038101906101b891906106f3565b610491565b6040516101ca9190610741565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff166040516101fb90610a01565b600060405180830381855afa9150503d8060008114610236576040519150601f19603f3d011682016040523d82523d6000602084013e61023b565b606091505b50915091508161024a57600080fd5b8080602001905181019061025e9190610a42565b92505050919050565b61026f610525565b61027960006105a3565b565b610283610525565b8173ffffffffffffffffffffffffffffffffffffffff16638f283970826040518263ffffffff1660e01b81526004016102bc9190610741565b600060405180830381600087803b1580156102d657600080fd5b505af11580156102ea573d6000803e3d6000fd5b505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610323610525565b8273ffffffffffffffffffffffffffffffffffffffff16634f1ef2863484846040518463ffffffff1660e01b815260040161035f929190610af7565b6000604051808303818588803b15801561037857600080fd5b505af115801561038c573d6000803e3d6000fd5b5050505050505050565b61039e610525565b8173ffffffffffffffffffffffffffffffffffffffff16633659cfe6826040518263ffffffff1660e01b81526004016103d79190610741565b600060405180830381600087803b1580156103f157600080fd5b505af1158015610405573d6000803e3d6000fd5b505050505050565b610415610525565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610485576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047c90610baa565b60405180910390fd5b61048e816105a3565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff166040516104b990610c16565b600060405180830381855afa9150503d80600081146104f4576040519150601f19603f3d011682016040523d82523d6000602084013e6104f9565b606091505b50915091508161050857600080fd5b8080602001905181019061051c9190610a42565b92505050919050565b61052d610667565b73ffffffffffffffffffffffffffffffffffffffff1661054b6102f2565b73ffffffffffffffffffffffffffffffffffffffff16146105a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059890610c77565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106ae82610683565b9050919050565b60006106c0826106a3565b9050919050565b6106d0816106b5565b81146106db57600080fd5b50565b6000813590506106ed816106c7565b92915050565b60006020828403121561070957610708610679565b5b6000610717848285016106de565b91505092915050565b600061072b82610683565b9050919050565b61073b81610720565b82525050565b60006020820190506107566000830184610732565b92915050565b61076581610720565b811461077057600080fd5b50565b6000813590506107828161075c565b92915050565b6000806040838503121561079f5761079e610679565b5b60006107ad858286016106de565b92505060206107be85828601610773565b9150509250929050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61081b826107d2565b810181811067ffffffffffffffff8211171561083a576108396107e3565b5b80604052505050565b600061084d61066f565b90506108598282610812565b919050565b600067ffffffffffffffff821115610879576108786107e3565b5b610882826107d2565b9050602081019050919050565b82818337600083830152505050565b60006108b16108ac8461085e565b610843565b9050828152602081018484840111156108cd576108cc6107cd565b5b6108d884828561088f565b509392505050565b600082601f8301126108f5576108f46107c8565b5b813561090584826020860161089e565b91505092915050565b60008060006060848603121561092757610926610679565b5b6000610935868287016106de565b935050602061094686828701610773565b925050604084013567ffffffffffffffff8111156109675761096661067e565b5b610973868287016108e0565b9150509250925092565b60006020828403121561099357610992610679565b5b60006109a184828501610773565b91505092915050565b600081905092915050565b7f5c60da1b00000000000000000000000000000000000000000000000000000000600082015250565b60006109eb6004836109aa565b91506109f6826109b5565b600482019050919050565b6000610a0c826109de565b9150819050919050565b610a1f816106a3565b8114610a2a57600080fd5b50565b600081519050610a3c81610a16565b92915050565b600060208284031215610a5857610a57610679565b5b6000610a6684828501610a2d565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610aa9578082015181840152602081019050610a8e565b83811115610ab8576000848401525b50505050565b6000610ac982610a6f565b610ad38185610a7a565b9350610ae3818560208601610a8b565b610aec816107d2565b840191505092915050565b6000604082019050610b0c6000830185610732565b8181036020830152610b1e8184610abe565b90509392505050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610b94602683610b27565b9150610b9f82610b38565b604082019050919050565b60006020820190508181036000830152610bc381610b87565b9050919050565b7ff851a44000000000000000000000000000000000000000000000000000000000600082015250565b6000610c006004836109aa565b9150610c0b82610bca565b600482019050919050565b6000610c2182610bf3565b9150819050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610c61602083610b27565b9150610c6c82610c2b565b602082019050919050565b60006020820190508181036000830152610c9081610c54565b905091905056fea2646970667358221220296bd6be17da1c6963d442c26490fb2712f48b5ac20e423b4ca82a8f7c06763c64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xEA3 CODESIZE SUB DUP1 PUSH3 0xEA3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x194 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0x5E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x66 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x1C6 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x15C DUP3 PUSH3 0x12F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x16E DUP2 PUSH3 0x14F JUMP JUMPDEST DUP2 EQ PUSH3 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x18E DUP2 PUSH3 0x163 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1AD JUMPI PUSH3 0x1AC PUSH3 0x12A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1BD DUP5 DUP3 DUP6 ADD PUSH3 0x17D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCCD DUP1 PUSH3 0x1D6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9623609D GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x9623609D EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x99A88EC4 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xF3B7DEAD EQ PUSH2 0x196 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x204E1C7A EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x7EFF275E EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x741 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD2 PUSH2 0x267 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x788 JUMP JUMPDEST PUSH2 0x27B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x112 PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x741 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13D SWAP2 SWAP1 PUSH2 0x90E JUMP JUMPDEST PUSH2 0x31B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x788 JUMP JUMPDEST PUSH2 0x396 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x97D JUMP JUMPDEST PUSH2 0x40D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x491 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x741 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP1 PUSH2 0xA01 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x236 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x25E SWAP2 SWAP1 PUSH2 0xA42 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26F PUSH2 0x525 JUMP JUMPDEST PUSH2 0x279 PUSH1 0x0 PUSH2 0x5A3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x283 PUSH2 0x525 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8F283970 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x741 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x323 PUSH2 0x525 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4F1EF286 CALLVALUE DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35F SWAP3 SWAP2 SWAP1 PUSH2 0xAF7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x38C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x39E PUSH2 0x525 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3659CFE6 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0x741 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x405 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x415 PUSH2 0x525 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x485 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47C SWAP1 PUSH2 0xBAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x48E DUP2 PUSH2 0x5A3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x4B9 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4F4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x508 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x51C SWAP2 SWAP1 PUSH2 0xA42 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52D PUSH2 0x667 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x54B PUSH2 0x2F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x598 SWAP1 PUSH2 0xC77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6AE DUP3 PUSH2 0x683 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C0 DUP3 PUSH2 0x6A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6D0 DUP2 PUSH2 0x6B5 JUMP JUMPDEST DUP2 EQ PUSH2 0x6DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6ED DUP2 PUSH2 0x6C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x709 JUMPI PUSH2 0x708 PUSH2 0x679 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x717 DUP5 DUP3 DUP6 ADD PUSH2 0x6DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x72B DUP3 PUSH2 0x683 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x73B DUP2 PUSH2 0x720 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x756 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x732 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x765 DUP2 PUSH2 0x720 JUMP JUMPDEST DUP2 EQ PUSH2 0x770 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x782 DUP2 PUSH2 0x75C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x79F JUMPI PUSH2 0x79E PUSH2 0x679 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7AD DUP6 DUP3 DUP7 ADD PUSH2 0x6DE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7BE DUP6 DUP3 DUP7 ADD PUSH2 0x773 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x81B DUP3 PUSH2 0x7D2 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x83A JUMPI PUSH2 0x839 PUSH2 0x7E3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x84D PUSH2 0x66F JUMP JUMPDEST SWAP1 POP PUSH2 0x859 DUP3 DUP3 PUSH2 0x812 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x879 JUMPI PUSH2 0x878 PUSH2 0x7E3 JUMP JUMPDEST JUMPDEST PUSH2 0x882 DUP3 PUSH2 0x7D2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B1 PUSH2 0x8AC DUP5 PUSH2 0x85E JUMP JUMPDEST PUSH2 0x843 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x8CD JUMPI PUSH2 0x8CC PUSH2 0x7CD JUMP JUMPDEST JUMPDEST PUSH2 0x8D8 DUP5 DUP3 DUP6 PUSH2 0x88F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8F5 JUMPI PUSH2 0x8F4 PUSH2 0x7C8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x905 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x89E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x927 JUMPI PUSH2 0x926 PUSH2 0x679 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x935 DUP7 DUP3 DUP8 ADD PUSH2 0x6DE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x946 DUP7 DUP3 DUP8 ADD PUSH2 0x773 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x967 JUMPI PUSH2 0x966 PUSH2 0x67E JUMP JUMPDEST JUMPDEST PUSH2 0x973 DUP7 DUP3 DUP8 ADD PUSH2 0x8E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x993 JUMPI PUSH2 0x992 PUSH2 0x679 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9A1 DUP5 DUP3 DUP6 ADD PUSH2 0x773 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9EB PUSH1 0x4 DUP4 PUSH2 0x9AA JUMP JUMPDEST SWAP2 POP PUSH2 0x9F6 DUP3 PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA0C DUP3 PUSH2 0x9DE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA1F DUP2 PUSH2 0x6A3 JUMP JUMPDEST DUP2 EQ PUSH2 0xA2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA3C DUP2 PUSH2 0xA16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA58 JUMPI PUSH2 0xA57 PUSH2 0x679 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA66 DUP5 DUP3 DUP6 ADD PUSH2 0xA2D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAA9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA8E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xAB8 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC9 DUP3 PUSH2 0xA6F JUMP JUMPDEST PUSH2 0xAD3 DUP2 DUP6 PUSH2 0xA7A JUMP JUMPDEST SWAP4 POP PUSH2 0xAE3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA8B JUMP JUMPDEST PUSH2 0xAEC DUP2 PUSH2 0x7D2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB0C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x732 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xB1E DUP2 DUP5 PUSH2 0xABE JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB94 PUSH1 0x26 DUP4 PUSH2 0xB27 JUMP JUMPDEST SWAP2 POP PUSH2 0xB9F DUP3 PUSH2 0xB38 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBC3 DUP2 PUSH2 0xB87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xF851A44000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC00 PUSH1 0x4 DUP4 PUSH2 0x9AA JUMP JUMPDEST SWAP2 POP PUSH2 0xC0B DUP3 PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC21 DUP3 PUSH2 0xBF3 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC61 PUSH1 0x20 DUP4 PUSH2 0xB27 JUMP JUMPDEST SWAP2 POP PUSH2 0xC6C DUP3 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC90 DUP2 PUSH2 0xC54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 PUSH12 0xD6BE17DA1C6963D442C26490 0xFB 0x27 SLT DELEGATECALL DUP12 GAS 0xC2 0xE TIMESTAMP EXTCODESIZE 0x4C 0xA8 0x2A DUP16 PUSH29 0x6763C64736F6C63430008090033000000000000000000000000000000 ","sourceMap":"126:111:13:-:0;;;169:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;169:60:13;126:111;;640:96:9;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;88:117:14:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;126:111:13:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_54":{"entryPoint":1317,"id":54,"parameterSlots":0,"returnSlots":0},"@_msgSender_1130":{"entryPoint":1639,"id":1130,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":1443,"id":111,"parameterSlots":1,"returnSlots":0},"@changeProxyAdmin_632":{"entryPoint":635,"id":632,"parameterSlots":2,"returnSlots":0},"@getProxyAdmin_614":{"entryPoint":1169,"id":614,"parameterSlots":1,"returnSlots":1},"@getProxyImplementation_580":{"entryPoint":467,"id":580,"parameterSlots":1,"returnSlots":1},"@owner_40":{"entryPoint":754,"id":40,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_68":{"entryPoint":615,"id":68,"parameterSlots":0,"returnSlots":0},"@transferOwnership_91":{"entryPoint":1037,"id":91,"parameterSlots":1,"returnSlots":0},"@upgradeAndCall_674":{"entryPoint":795,"id":674,"parameterSlots":3,"returnSlots":0},"@upgrade_650":{"entryPoint":918,"id":650,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":2206,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":1907,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable_fromMemory":{"entryPoint":2605,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":2272,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_TransparentUpgradeableProxy_$823":{"entryPoint":1758,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2429,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payable_fromMemory":{"entryPoint":2626,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_TransparentUpgradeableProxy_$823":{"entryPoint":1779,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_TransparentUpgradeableProxy_$823t_address":{"entryPoint":1928,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_contract$_TransparentUpgradeableProxy_$823t_addresst_bytes_memory_ptr":{"entryPoint":2318,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1842,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":2750,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":2951,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2526,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":3156,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":3059,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":2561,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":3094,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1857,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":2807,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2986,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3191,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":2115,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1647,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":2142,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":2671,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":2682,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2474,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2855,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1824,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":1699,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_TransparentUpgradeableProxy_$823":{"entryPoint":1717,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1667,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":2191,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":2699,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":2066,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x41":{"entryPoint":2019,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1992,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1997,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1662,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1657,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2002,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":2872,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29":{"entryPoint":2485,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":3115,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7":{"entryPoint":3018,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1884,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":2582,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_TransparentUpgradeableProxy_$823":{"entryPoint":1735,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:12652:14","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:14","statements":[{"nodeType":"YulAssignment","src":"57:19:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:14"},"nodeType":"YulFunctionCall","src":"67:9:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:14"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:14","type":""}],"src":"7:75:14"},{"body":{"nodeType":"YulBlock","src":"177:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:14"},"nodeType":"YulFunctionCall","src":"187:12:14"},"nodeType":"YulExpressionStatement","src":"187:12:14"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:14"},{"body":{"nodeType":"YulBlock","src":"300:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:14"},"nodeType":"YulFunctionCall","src":"310:12:14"},"nodeType":"YulExpressionStatement","src":"310:12:14"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:14"},{"body":{"nodeType":"YulBlock","src":"379:81:14","statements":[{"nodeType":"YulAssignment","src":"389:65:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:14"},"nodeType":"YulFunctionCall","src":"400:54:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:14"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:14","type":""}],"src":"334:126:14"},{"body":{"nodeType":"YulBlock","src":"519:51:14","statements":[{"nodeType":"YulAssignment","src":"529:35:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"558:5:14"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"540:17:14"},"nodeType":"YulFunctionCall","src":"540:24:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"529:7:14"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"501:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"511:7:14","type":""}],"src":"466:104:14"},{"body":{"nodeType":"YulBlock","src":"656:59:14","statements":[{"nodeType":"YulAssignment","src":"666:43:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"703:5:14"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"677:25:14"},"nodeType":"YulFunctionCall","src":"677:32:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"666:7:14"}]}]},"name":"cleanup_t_contract$_TransparentUpgradeableProxy_$823","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"638:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"648:7:14","type":""}],"src":"576:139:14"},{"body":{"nodeType":"YulBlock","src":"799:114:14","statements":[{"body":{"nodeType":"YulBlock","src":"891:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"900:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"903:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"893:6:14"},"nodeType":"YulFunctionCall","src":"893:12:14"},"nodeType":"YulExpressionStatement","src":"893:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"822:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"882:5:14"}],"functionName":{"name":"cleanup_t_contract$_TransparentUpgradeableProxy_$823","nodeType":"YulIdentifier","src":"829:52:14"},"nodeType":"YulFunctionCall","src":"829:59:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"819:2:14"},"nodeType":"YulFunctionCall","src":"819:70:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"812:6:14"},"nodeType":"YulFunctionCall","src":"812:78:14"},"nodeType":"YulIf","src":"809:98:14"}]},"name":"validator_revert_t_contract$_TransparentUpgradeableProxy_$823","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"792:5:14","type":""}],"src":"721:192:14"},{"body":{"nodeType":"YulBlock","src":"1006:122:14","statements":[{"nodeType":"YulAssignment","src":"1016:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1038:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1025:12:14"},"nodeType":"YulFunctionCall","src":"1025:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1016:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1116:5:14"}],"functionName":{"name":"validator_revert_t_contract$_TransparentUpgradeableProxy_$823","nodeType":"YulIdentifier","src":"1054:61:14"},"nodeType":"YulFunctionCall","src":"1054:68:14"},"nodeType":"YulExpressionStatement","src":"1054:68:14"}]},"name":"abi_decode_t_contract$_TransparentUpgradeableProxy_$823","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"984:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"992:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1000:5:14","type":""}],"src":"919:209:14"},{"body":{"nodeType":"YulBlock","src":"1235:298:14","statements":[{"body":{"nodeType":"YulBlock","src":"1281:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1283:77:14"},"nodeType":"YulFunctionCall","src":"1283:79:14"},"nodeType":"YulExpressionStatement","src":"1283:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1256:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1265:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1252:3:14"},"nodeType":"YulFunctionCall","src":"1252:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1277:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1248:3:14"},"nodeType":"YulFunctionCall","src":"1248:32:14"},"nodeType":"YulIf","src":"1245:119:14"},{"nodeType":"YulBlock","src":"1374:152:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1389:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"1403:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1393:6:14","type":""}]},{"nodeType":"YulAssignment","src":"1418:98:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1488:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"1499:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1484:3:14"},"nodeType":"YulFunctionCall","src":"1484:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1508:7:14"}],"functionName":{"name":"abi_decode_t_contract$_TransparentUpgradeableProxy_$823","nodeType":"YulIdentifier","src":"1428:55:14"},"nodeType":"YulFunctionCall","src":"1428:88:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1418:6:14"}]}]}]},"name":"abi_decode_tuple_t_contract$_TransparentUpgradeableProxy_$823","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1205:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1216:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1228:6:14","type":""}],"src":"1134:399:14"},{"body":{"nodeType":"YulBlock","src":"1584:51:14","statements":[{"nodeType":"YulAssignment","src":"1594:35:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1623:5:14"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1605:17:14"},"nodeType":"YulFunctionCall","src":"1605:24:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1594:7:14"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1566:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1576:7:14","type":""}],"src":"1539:96:14"},{"body":{"nodeType":"YulBlock","src":"1706:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1723:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1728:17:14"},"nodeType":"YulFunctionCall","src":"1728:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1716:6:14"},"nodeType":"YulFunctionCall","src":"1716:37:14"},"nodeType":"YulExpressionStatement","src":"1716:37:14"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1694:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1701:3:14","type":""}],"src":"1641:118:14"},{"body":{"nodeType":"YulBlock","src":"1863:124:14","statements":[{"nodeType":"YulAssignment","src":"1873:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1885:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1896:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1881:3:14"},"nodeType":"YulFunctionCall","src":"1881:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1873:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1953:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1966:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1977:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1962:3:14"},"nodeType":"YulFunctionCall","src":"1962:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"1909:43:14"},"nodeType":"YulFunctionCall","src":"1909:71:14"},"nodeType":"YulExpressionStatement","src":"1909:71:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1835:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1847:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1858:4:14","type":""}],"src":"1765:222:14"},{"body":{"nodeType":"YulBlock","src":"2036:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"2093:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2102:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2105:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2095:6:14"},"nodeType":"YulFunctionCall","src":"2095:12:14"},"nodeType":"YulExpressionStatement","src":"2095:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2059:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2084:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2066:17:14"},"nodeType":"YulFunctionCall","src":"2066:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2056:2:14"},"nodeType":"YulFunctionCall","src":"2056:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2049:6:14"},"nodeType":"YulFunctionCall","src":"2049:43:14"},"nodeType":"YulIf","src":"2046:63:14"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2029:5:14","type":""}],"src":"1993:122:14"},{"body":{"nodeType":"YulBlock","src":"2173:87:14","statements":[{"nodeType":"YulAssignment","src":"2183:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2205:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2192:12:14"},"nodeType":"YulFunctionCall","src":"2192:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2183:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2248:5:14"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2221:26:14"},"nodeType":"YulFunctionCall","src":"2221:33:14"},"nodeType":"YulExpressionStatement","src":"2221:33:14"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2151:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"2159:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2167:5:14","type":""}],"src":"2121:139:14"},{"body":{"nodeType":"YulBlock","src":"2384:426:14","statements":[{"body":{"nodeType":"YulBlock","src":"2430:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2432:77:14"},"nodeType":"YulFunctionCall","src":"2432:79:14"},"nodeType":"YulExpressionStatement","src":"2432:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2405:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2414:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2401:3:14"},"nodeType":"YulFunctionCall","src":"2401:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2426:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2397:3:14"},"nodeType":"YulFunctionCall","src":"2397:32:14"},"nodeType":"YulIf","src":"2394:119:14"},{"nodeType":"YulBlock","src":"2523:152:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2538:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2552:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2542:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2567:98:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2637:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2648:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2633:3:14"},"nodeType":"YulFunctionCall","src":"2633:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2657:7:14"}],"functionName":{"name":"abi_decode_t_contract$_TransparentUpgradeableProxy_$823","nodeType":"YulIdentifier","src":"2577:55:14"},"nodeType":"YulFunctionCall","src":"2577:88:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2567:6:14"}]}]},{"nodeType":"YulBlock","src":"2685:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2700:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2714:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2704:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2730:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2765:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"2776:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2761:3:14"},"nodeType":"YulFunctionCall","src":"2761:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2785:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2740:20:14"},"nodeType":"YulFunctionCall","src":"2740:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2730:6:14"}]}]}]},"name":"abi_decode_tuple_t_contract$_TransparentUpgradeableProxy_$823t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2346:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2357:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2369:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2377:6:14","type":""}],"src":"2266:544:14"},{"body":{"nodeType":"YulBlock","src":"2905:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2922:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2925:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2915:6:14"},"nodeType":"YulFunctionCall","src":"2915:12:14"},"nodeType":"YulExpressionStatement","src":"2915:12:14"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"2816:117:14"},{"body":{"nodeType":"YulBlock","src":"3028:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3045:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3048:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3038:6:14"},"nodeType":"YulFunctionCall","src":"3038:12:14"},"nodeType":"YulExpressionStatement","src":"3038:12:14"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"2939:117:14"},{"body":{"nodeType":"YulBlock","src":"3110:54:14","statements":[{"nodeType":"YulAssignment","src":"3120:38:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3138:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"3145:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3134:3:14"},"nodeType":"YulFunctionCall","src":"3134:14:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3154:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3150:3:14"},"nodeType":"YulFunctionCall","src":"3150:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3130:3:14"},"nodeType":"YulFunctionCall","src":"3130:28:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3120:6:14"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3093:5:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3103:6:14","type":""}],"src":"3062:102:14"},{"body":{"nodeType":"YulBlock","src":"3198:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3215:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3218:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3208:6:14"},"nodeType":"YulFunctionCall","src":"3208:88:14"},"nodeType":"YulExpressionStatement","src":"3208:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3312:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3315:4:14","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3305:6:14"},"nodeType":"YulFunctionCall","src":"3305:15:14"},"nodeType":"YulExpressionStatement","src":"3305:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3336:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3339:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3329:6:14"},"nodeType":"YulFunctionCall","src":"3329:15:14"},"nodeType":"YulExpressionStatement","src":"3329:15:14"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3170:180:14"},{"body":{"nodeType":"YulBlock","src":"3399:238:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3409:58:14","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3431:6:14"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3461:4:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3439:21:14"},"nodeType":"YulFunctionCall","src":"3439:27:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3427:3:14"},"nodeType":"YulFunctionCall","src":"3427:40:14"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3413:10:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3578:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3580:16:14"},"nodeType":"YulFunctionCall","src":"3580:18:14"},"nodeType":"YulExpressionStatement","src":"3580:18:14"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3521:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"3533:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3518:2:14"},"nodeType":"YulFunctionCall","src":"3518:34:14"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3557:10:14"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3569:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3554:2:14"},"nodeType":"YulFunctionCall","src":"3554:22:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3515:2:14"},"nodeType":"YulFunctionCall","src":"3515:62:14"},"nodeType":"YulIf","src":"3512:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3616:2:14","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3620:10:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3609:6:14"},"nodeType":"YulFunctionCall","src":"3609:22:14"},"nodeType":"YulExpressionStatement","src":"3609:22:14"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3385:6:14","type":""},{"name":"size","nodeType":"YulTypedName","src":"3393:4:14","type":""}],"src":"3356:281:14"},{"body":{"nodeType":"YulBlock","src":"3684:88:14","statements":[{"nodeType":"YulAssignment","src":"3694:30:14","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"3704:18:14"},"nodeType":"YulFunctionCall","src":"3704:20:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3694:6:14"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3753:6:14"},{"name":"size","nodeType":"YulIdentifier","src":"3761:4:14"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"3733:19:14"},"nodeType":"YulFunctionCall","src":"3733:33:14"},"nodeType":"YulExpressionStatement","src":"3733:33:14"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"3668:4:14","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3677:6:14","type":""}],"src":"3643:129:14"},{"body":{"nodeType":"YulBlock","src":"3844:241:14","statements":[{"body":{"nodeType":"YulBlock","src":"3949:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3951:16:14"},"nodeType":"YulFunctionCall","src":"3951:18:14"},"nodeType":"YulExpressionStatement","src":"3951:18:14"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3921:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"3929:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3918:2:14"},"nodeType":"YulFunctionCall","src":"3918:30:14"},"nodeType":"YulIf","src":"3915:56:14"},{"nodeType":"YulAssignment","src":"3981:37:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4011:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3989:21:14"},"nodeType":"YulFunctionCall","src":"3989:29:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3981:4:14"}]},{"nodeType":"YulAssignment","src":"4055:23:14","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4067:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"4073:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4063:3:14"},"nodeType":"YulFunctionCall","src":"4063:15:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4055:4:14"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"3828:6:14","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"3839:4:14","type":""}],"src":"3778:307:14"},{"body":{"nodeType":"YulBlock","src":"4142:103:14","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4165:3:14"},{"name":"src","nodeType":"YulIdentifier","src":"4170:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"4175:6:14"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4152:12:14"},"nodeType":"YulFunctionCall","src":"4152:30:14"},"nodeType":"YulExpressionStatement","src":"4152:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4223:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"4228:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4219:3:14"},"nodeType":"YulFunctionCall","src":"4219:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"4237:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4212:6:14"},"nodeType":"YulFunctionCall","src":"4212:27:14"},"nodeType":"YulExpressionStatement","src":"4212:27:14"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4124:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4129:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"4134:6:14","type":""}],"src":"4091:154:14"},{"body":{"nodeType":"YulBlock","src":"4334:327:14","statements":[{"nodeType":"YulAssignment","src":"4344:74:14","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4410:6:14"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"4369:40:14"},"nodeType":"YulFunctionCall","src":"4369:48:14"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4353:15:14"},"nodeType":"YulFunctionCall","src":"4353:65:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4344:5:14"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4434:5:14"},{"name":"length","nodeType":"YulIdentifier","src":"4441:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4427:6:14"},"nodeType":"YulFunctionCall","src":"4427:21:14"},"nodeType":"YulExpressionStatement","src":"4427:21:14"},{"nodeType":"YulVariableDeclaration","src":"4457:27:14","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4472:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"4479:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4468:3:14"},"nodeType":"YulFunctionCall","src":"4468:16:14"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4461:3:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"4522:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"4524:77:14"},"nodeType":"YulFunctionCall","src":"4524:79:14"},"nodeType":"YulExpressionStatement","src":"4524:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4503:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"4508:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4499:3:14"},"nodeType":"YulFunctionCall","src":"4499:16:14"},{"name":"end","nodeType":"YulIdentifier","src":"4517:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4496:2:14"},"nodeType":"YulFunctionCall","src":"4496:25:14"},"nodeType":"YulIf","src":"4493:112:14"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4638:3:14"},{"name":"dst","nodeType":"YulIdentifier","src":"4643:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"4648:6:14"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"4614:23:14"},"nodeType":"YulFunctionCall","src":"4614:41:14"},"nodeType":"YulExpressionStatement","src":"4614:41:14"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4307:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"4312:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"4320:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4328:5:14","type":""}],"src":"4251:410:14"},{"body":{"nodeType":"YulBlock","src":"4741:277:14","statements":[{"body":{"nodeType":"YulBlock","src":"4790:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"4792:77:14"},"nodeType":"YulFunctionCall","src":"4792:79:14"},"nodeType":"YulExpressionStatement","src":"4792:79:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4769:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"4777:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4765:3:14"},"nodeType":"YulFunctionCall","src":"4765:17:14"},{"name":"end","nodeType":"YulIdentifier","src":"4784:3:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4761:3:14"},"nodeType":"YulFunctionCall","src":"4761:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4754:6:14"},"nodeType":"YulFunctionCall","src":"4754:35:14"},"nodeType":"YulIf","src":"4751:122:14"},{"nodeType":"YulVariableDeclaration","src":"4882:34:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4909:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4896:12:14"},"nodeType":"YulFunctionCall","src":"4896:20:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4886:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4925:87:14","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4985:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"4993:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4981:3:14"},"nodeType":"YulFunctionCall","src":"4981:17:14"},{"name":"length","nodeType":"YulIdentifier","src":"5000:6:14"},{"name":"end","nodeType":"YulIdentifier","src":"5008:3:14"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"4934:46:14"},"nodeType":"YulFunctionCall","src":"4934:78:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4925:5:14"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4719:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"4727:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4735:5:14","type":""}],"src":"4680:338:14"},{"body":{"nodeType":"YulBlock","src":"5168:723:14","statements":[{"body":{"nodeType":"YulBlock","src":"5214:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5216:77:14"},"nodeType":"YulFunctionCall","src":"5216:79:14"},"nodeType":"YulExpressionStatement","src":"5216:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5189:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"5198:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5185:3:14"},"nodeType":"YulFunctionCall","src":"5185:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"5210:2:14","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5181:3:14"},"nodeType":"YulFunctionCall","src":"5181:32:14"},"nodeType":"YulIf","src":"5178:119:14"},{"nodeType":"YulBlock","src":"5307:152:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5322:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5336:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5326:6:14","type":""}]},{"nodeType":"YulAssignment","src":"5351:98:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5421:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5432:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5417:3:14"},"nodeType":"YulFunctionCall","src":"5417:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5441:7:14"}],"functionName":{"name":"abi_decode_t_contract$_TransparentUpgradeableProxy_$823","nodeType":"YulIdentifier","src":"5361:55:14"},"nodeType":"YulFunctionCall","src":"5361:88:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5351:6:14"}]}]},{"nodeType":"YulBlock","src":"5469:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5484:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5498:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5488:6:14","type":""}]},{"nodeType":"YulAssignment","src":"5514:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5549:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5560:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5545:3:14"},"nodeType":"YulFunctionCall","src":"5545:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5569:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5524:20:14"},"nodeType":"YulFunctionCall","src":"5524:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5514:6:14"}]}]},{"nodeType":"YulBlock","src":"5597:287:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5612:46:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5643:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5654:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5639:3:14"},"nodeType":"YulFunctionCall","src":"5639:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5626:12:14"},"nodeType":"YulFunctionCall","src":"5626:32:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5616:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"5705:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"5707:77:14"},"nodeType":"YulFunctionCall","src":"5707:79:14"},"nodeType":"YulExpressionStatement","src":"5707:79:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5677:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"5685:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5674:2:14"},"nodeType":"YulFunctionCall","src":"5674:30:14"},"nodeType":"YulIf","src":"5671:117:14"},{"nodeType":"YulAssignment","src":"5802:72:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5846:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5857:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5842:3:14"},"nodeType":"YulFunctionCall","src":"5842:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5866:7:14"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"5812:29:14"},"nodeType":"YulFunctionCall","src":"5812:62:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5802:6:14"}]}]}]},"name":"abi_decode_tuple_t_contract$_TransparentUpgradeableProxy_$823t_addresst_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5122:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5133:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5145:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5153:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5161:6:14","type":""}],"src":"5024:867:14"},{"body":{"nodeType":"YulBlock","src":"5963:263:14","statements":[{"body":{"nodeType":"YulBlock","src":"6009:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6011:77:14"},"nodeType":"YulFunctionCall","src":"6011:79:14"},"nodeType":"YulExpressionStatement","src":"6011:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5984:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"5993:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5980:3:14"},"nodeType":"YulFunctionCall","src":"5980:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"6005:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5976:3:14"},"nodeType":"YulFunctionCall","src":"5976:32:14"},"nodeType":"YulIf","src":"5973:119:14"},{"nodeType":"YulBlock","src":"6102:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"6117:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"6131:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6121:6:14","type":""}]},{"nodeType":"YulAssignment","src":"6146:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6181:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"6192:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6177:3:14"},"nodeType":"YulFunctionCall","src":"6177:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6201:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6156:20:14"},"nodeType":"YulFunctionCall","src":"6156:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6146:6:14"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5933:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5944:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5956:6:14","type":""}],"src":"5897:329:14"},{"body":{"nodeType":"YulBlock","src":"6345:34:14","statements":[{"nodeType":"YulAssignment","src":"6355:18:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"6370:3:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6355:11:14"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6317:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"6322:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6333:11:14","type":""}],"src":"6232:147:14"},{"body":{"nodeType":"YulBlock","src":"6491:108:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6513:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"6521:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6509:3:14"},"nodeType":"YulFunctionCall","src":"6509:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"6525:66:14","type":"","value":"0x5c60da1b00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6502:6:14"},"nodeType":"YulFunctionCall","src":"6502:90:14"},"nodeType":"YulExpressionStatement","src":"6502:90:14"}]},"name":"store_literal_in_memory_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6483:6:14","type":""}],"src":"6385:214:14"},{"body":{"nodeType":"YulBlock","src":"6768:235:14","statements":[{"nodeType":"YulAssignment","src":"6778:90:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6861:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"6866:1:14","type":"","value":"4"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"6785:75:14"},"nodeType":"YulFunctionCall","src":"6785:83:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6778:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6966:3:14"}],"functionName":{"name":"store_literal_in_memory_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29","nodeType":"YulIdentifier","src":"6877:88:14"},"nodeType":"YulFunctionCall","src":"6877:93:14"},"nodeType":"YulExpressionStatement","src":"6877:93:14"},{"nodeType":"YulAssignment","src":"6979:18:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6990:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"6995:1:14","type":"","value":"4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6986:3:14"},"nodeType":"YulFunctionCall","src":"6986:11:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6979:3:14"}]}]},"name":"abi_encode_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6756:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6764:3:14","type":""}],"src":"6605:398:14"},{"body":{"nodeType":"YulBlock","src":"7197:191:14","statements":[{"nodeType":"YulAssignment","src":"7208:154:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7358:3:14"}],"functionName":{"name":"abi_encode_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"7215:141:14"},"nodeType":"YulFunctionCall","src":"7215:147:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7208:3:14"}]},{"nodeType":"YulAssignment","src":"7372:10:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"7379:3:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7372:3:14"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7184:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7193:3:14","type":""}],"src":"7009:379:14"},{"body":{"nodeType":"YulBlock","src":"7445:87:14","statements":[{"body":{"nodeType":"YulBlock","src":"7510:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7519:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7522:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7512:6:14"},"nodeType":"YulFunctionCall","src":"7512:12:14"},"nodeType":"YulExpressionStatement","src":"7512:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7468:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7501:5:14"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"7475:25:14"},"nodeType":"YulFunctionCall","src":"7475:32:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7465:2:14"},"nodeType":"YulFunctionCall","src":"7465:43:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7458:6:14"},"nodeType":"YulFunctionCall","src":"7458:51:14"},"nodeType":"YulIf","src":"7455:71:14"}]},"name":"validator_revert_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7438:5:14","type":""}],"src":"7394:138:14"},{"body":{"nodeType":"YulBlock","src":"7609:88:14","statements":[{"nodeType":"YulAssignment","src":"7619:22:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7634:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7628:5:14"},"nodeType":"YulFunctionCall","src":"7628:13:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7619:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7685:5:14"}],"functionName":{"name":"validator_revert_t_address_payable","nodeType":"YulIdentifier","src":"7650:34:14"},"nodeType":"YulFunctionCall","src":"7650:41:14"},"nodeType":"YulExpressionStatement","src":"7650:41:14"}]},"name":"abi_decode_t_address_payable_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7587:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"7595:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7603:5:14","type":""}],"src":"7538:159:14"},{"body":{"nodeType":"YulBlock","src":"7788:282:14","statements":[{"body":{"nodeType":"YulBlock","src":"7834:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7836:77:14"},"nodeType":"YulFunctionCall","src":"7836:79:14"},"nodeType":"YulExpressionStatement","src":"7836:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7809:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"7818:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7805:3:14"},"nodeType":"YulFunctionCall","src":"7805:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"7830:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7801:3:14"},"nodeType":"YulFunctionCall","src":"7801:32:14"},"nodeType":"YulIf","src":"7798:119:14"},{"nodeType":"YulBlock","src":"7927:136:14","statements":[{"nodeType":"YulVariableDeclaration","src":"7942:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"7956:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7946:6:14","type":""}]},{"nodeType":"YulAssignment","src":"7971:82:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8025:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"8036:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8021:3:14"},"nodeType":"YulFunctionCall","src":"8021:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8045:7:14"}],"functionName":{"name":"abi_decode_t_address_payable_fromMemory","nodeType":"YulIdentifier","src":"7981:39:14"},"nodeType":"YulFunctionCall","src":"7981:72:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7971:6:14"}]}]}]},"name":"abi_decode_tuple_t_address_payable_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7758:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7769:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7781:6:14","type":""}],"src":"7703:367:14"},{"body":{"nodeType":"YulBlock","src":"8134:40:14","statements":[{"nodeType":"YulAssignment","src":"8145:22:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8161:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8155:5:14"},"nodeType":"YulFunctionCall","src":"8155:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8145:6:14"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8117:5:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8127:6:14","type":""}],"src":"8076:98:14"},{"body":{"nodeType":"YulBlock","src":"8275:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8292:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"8297:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8285:6:14"},"nodeType":"YulFunctionCall","src":"8285:19:14"},"nodeType":"YulExpressionStatement","src":"8285:19:14"},{"nodeType":"YulAssignment","src":"8313:29:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8332:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8337:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8328:3:14"},"nodeType":"YulFunctionCall","src":"8328:14:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8313:11:14"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8247:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"8252:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8263:11:14","type":""}],"src":"8180:168:14"},{"body":{"nodeType":"YulBlock","src":"8403:258:14","statements":[{"nodeType":"YulVariableDeclaration","src":"8413:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"8422:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8417:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"8482:63:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8507:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"8512:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8503:3:14"},"nodeType":"YulFunctionCall","src":"8503:11:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8526:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"8531:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8522:3:14"},"nodeType":"YulFunctionCall","src":"8522:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8516:5:14"},"nodeType":"YulFunctionCall","src":"8516:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8496:6:14"},"nodeType":"YulFunctionCall","src":"8496:39:14"},"nodeType":"YulExpressionStatement","src":"8496:39:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8443:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"8446:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8440:2:14"},"nodeType":"YulFunctionCall","src":"8440:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8454:19:14","statements":[{"nodeType":"YulAssignment","src":"8456:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8465:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"8468:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8461:3:14"},"nodeType":"YulFunctionCall","src":"8461:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8456:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"8436:3:14","statements":[]},"src":"8432:113:14"},{"body":{"nodeType":"YulBlock","src":"8579:76:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8629:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"8634:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8625:3:14"},"nodeType":"YulFunctionCall","src":"8625:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"8643:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8618:6:14"},"nodeType":"YulFunctionCall","src":"8618:27:14"},"nodeType":"YulExpressionStatement","src":"8618:27:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8560:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"8563:6:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8557:2:14"},"nodeType":"YulFunctionCall","src":"8557:13:14"},"nodeType":"YulIf","src":"8554:101:14"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8385:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8390:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"8395:6:14","type":""}],"src":"8354:307:14"},{"body":{"nodeType":"YulBlock","src":"8757:270:14","statements":[{"nodeType":"YulVariableDeclaration","src":"8767:52:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8813:5:14"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8781:31:14"},"nodeType":"YulFunctionCall","src":"8781:38:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8771:6:14","type":""}]},{"nodeType":"YulAssignment","src":"8828:77:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8893:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"8898:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8835:57:14"},"nodeType":"YulFunctionCall","src":"8835:70:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8828:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8940:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"8947:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8936:3:14"},"nodeType":"YulFunctionCall","src":"8936:16:14"},{"name":"pos","nodeType":"YulIdentifier","src":"8954:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"8959:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"8914:21:14"},"nodeType":"YulFunctionCall","src":"8914:52:14"},"nodeType":"YulExpressionStatement","src":"8914:52:14"},{"nodeType":"YulAssignment","src":"8975:46:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8986:3:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9013:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8991:21:14"},"nodeType":"YulFunctionCall","src":"8991:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8982:3:14"},"nodeType":"YulFunctionCall","src":"8982:39:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8975:3:14"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8738:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8745:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8753:3:14","type":""}],"src":"8667:360:14"},{"body":{"nodeType":"YulBlock","src":"9177:275:14","statements":[{"nodeType":"YulAssignment","src":"9187:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9199:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9210:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9195:3:14"},"nodeType":"YulFunctionCall","src":"9195:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9187:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9267:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9280:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9291:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9276:3:14"},"nodeType":"YulFunctionCall","src":"9276:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9223:43:14"},"nodeType":"YulFunctionCall","src":"9223:71:14"},"nodeType":"YulExpressionStatement","src":"9223:71:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9315:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9326:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9311:3:14"},"nodeType":"YulFunctionCall","src":"9311:18:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9335:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"9341:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9331:3:14"},"nodeType":"YulFunctionCall","src":"9331:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9304:6:14"},"nodeType":"YulFunctionCall","src":"9304:48:14"},"nodeType":"YulExpressionStatement","src":"9304:48:14"},{"nodeType":"YulAssignment","src":"9361:84:14","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9431:6:14"},{"name":"tail","nodeType":"YulIdentifier","src":"9440:4:14"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9369:61:14"},"nodeType":"YulFunctionCall","src":"9369:76:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9361:4:14"}]}]},"name":"abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9141:9:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9153:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9161:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9172:4:14","type":""}],"src":"9033:419:14"},{"body":{"nodeType":"YulBlock","src":"9554:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9571:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"9576:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9564:6:14"},"nodeType":"YulFunctionCall","src":"9564:19:14"},"nodeType":"YulExpressionStatement","src":"9564:19:14"},{"nodeType":"YulAssignment","src":"9592:29:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9611:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9616:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9607:3:14"},"nodeType":"YulFunctionCall","src":"9607:14:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9592:11:14"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9526:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"9531:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9542:11:14","type":""}],"src":"9458:169:14"},{"body":{"nodeType":"YulBlock","src":"9739:119:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9761:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"9769:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9757:3:14"},"nodeType":"YulFunctionCall","src":"9757:14:14"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"9773:34:14","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9750:6:14"},"nodeType":"YulFunctionCall","src":"9750:58:14"},"nodeType":"YulExpressionStatement","src":"9750:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9829:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"9837:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9825:3:14"},"nodeType":"YulFunctionCall","src":"9825:15:14"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"9842:8:14","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9818:6:14"},"nodeType":"YulFunctionCall","src":"9818:33:14"},"nodeType":"YulExpressionStatement","src":"9818:33:14"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9731:6:14","type":""}],"src":"9633:225:14"},{"body":{"nodeType":"YulBlock","src":"10010:220:14","statements":[{"nodeType":"YulAssignment","src":"10020:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10086:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"10091:2:14","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10027:58:14"},"nodeType":"YulFunctionCall","src":"10027:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10020:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10192:3:14"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"10103:88:14"},"nodeType":"YulFunctionCall","src":"10103:93:14"},"nodeType":"YulExpressionStatement","src":"10103:93:14"},{"nodeType":"YulAssignment","src":"10205:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10216:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"10221:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10212:3:14"},"nodeType":"YulFunctionCall","src":"10212:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10205:3:14"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9998:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10006:3:14","type":""}],"src":"9864:366:14"},{"body":{"nodeType":"YulBlock","src":"10407:248:14","statements":[{"nodeType":"YulAssignment","src":"10417:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10429:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10440:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10425:3:14"},"nodeType":"YulFunctionCall","src":"10425:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10417:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10464:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10475:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10460:3:14"},"nodeType":"YulFunctionCall","src":"10460:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10483:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"10489:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10479:3:14"},"nodeType":"YulFunctionCall","src":"10479:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10453:6:14"},"nodeType":"YulFunctionCall","src":"10453:47:14"},"nodeType":"YulExpressionStatement","src":"10453:47:14"},{"nodeType":"YulAssignment","src":"10509:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10643:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10517:124:14"},"nodeType":"YulFunctionCall","src":"10517:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10509:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10387:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10402:4:14","type":""}],"src":"10236:419:14"},{"body":{"nodeType":"YulBlock","src":"10767:108:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10789:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"10797:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10785:3:14"},"nodeType":"YulFunctionCall","src":"10785:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"10801:66:14","type":"","value":"0xf851a44000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10778:6:14"},"nodeType":"YulFunctionCall","src":"10778:90:14"},"nodeType":"YulExpressionStatement","src":"10778:90:14"}]},"name":"store_literal_in_memory_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10759:6:14","type":""}],"src":"10661:214:14"},{"body":{"nodeType":"YulBlock","src":"11044:235:14","statements":[{"nodeType":"YulAssignment","src":"11054:90:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11137:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"11142:1:14","type":"","value":"4"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"11061:75:14"},"nodeType":"YulFunctionCall","src":"11061:83:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11054:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11242:3:14"}],"functionName":{"name":"store_literal_in_memory_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7","nodeType":"YulIdentifier","src":"11153:88:14"},"nodeType":"YulFunctionCall","src":"11153:93:14"},"nodeType":"YulExpressionStatement","src":"11153:93:14"},{"nodeType":"YulAssignment","src":"11255:18:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11266:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"11271:1:14","type":"","value":"4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11262:3:14"},"nodeType":"YulFunctionCall","src":"11262:11:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11255:3:14"}]}]},"name":"abi_encode_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11032:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11040:3:14","type":""}],"src":"10881:398:14"},{"body":{"nodeType":"YulBlock","src":"11473:191:14","statements":[{"nodeType":"YulAssignment","src":"11484:154:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11634:3:14"}],"functionName":{"name":"abi_encode_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"11491:141:14"},"nodeType":"YulFunctionCall","src":"11491:147:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11484:3:14"}]},{"nodeType":"YulAssignment","src":"11648:10:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"11655:3:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11648:3:14"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11460:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11469:3:14","type":""}],"src":"11285:379:14"},{"body":{"nodeType":"YulBlock","src":"11776:76:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11798:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"11806:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11794:3:14"},"nodeType":"YulFunctionCall","src":"11794:14:14"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"11810:34:14","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11787:6:14"},"nodeType":"YulFunctionCall","src":"11787:58:14"},"nodeType":"YulExpressionStatement","src":"11787:58:14"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11768:6:14","type":""}],"src":"11670:182:14"},{"body":{"nodeType":"YulBlock","src":"12004:220:14","statements":[{"nodeType":"YulAssignment","src":"12014:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12080:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"12085:2:14","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12021:58:14"},"nodeType":"YulFunctionCall","src":"12021:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12014:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12186:3:14"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"12097:88:14"},"nodeType":"YulFunctionCall","src":"12097:93:14"},"nodeType":"YulExpressionStatement","src":"12097:93:14"},{"nodeType":"YulAssignment","src":"12199:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12210:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"12215:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12206:3:14"},"nodeType":"YulFunctionCall","src":"12206:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12199:3:14"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11992:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12000:3:14","type":""}],"src":"11858:366:14"},{"body":{"nodeType":"YulBlock","src":"12401:248:14","statements":[{"nodeType":"YulAssignment","src":"12411:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12423:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12434:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12419:3:14"},"nodeType":"YulFunctionCall","src":"12419:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12411:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12458:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12469:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12454:3:14"},"nodeType":"YulFunctionCall","src":"12454:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12477:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"12483:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12473:3:14"},"nodeType":"YulFunctionCall","src":"12473:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12447:6:14"},"nodeType":"YulFunctionCall","src":"12447:47:14"},"nodeType":"YulExpressionStatement","src":"12447:47:14"},{"nodeType":"YulAssignment","src":"12503:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12637:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12511:124:14"},"nodeType":"YulFunctionCall","src":"12511:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12503:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12381:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12396:4:14","type":""}],"src":"12230:419:14"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_TransparentUpgradeableProxy_$823(value) -> cleaned {\n        cleaned := cleanup_t_address_payable(value)\n    }\n\n    function validator_revert_t_contract$_TransparentUpgradeableProxy_$823(value) {\n        if iszero(eq(value, cleanup_t_contract$_TransparentUpgradeableProxy_$823(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_TransparentUpgradeableProxy_$823(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_TransparentUpgradeableProxy_$823(value)\n    }\n\n    function abi_decode_tuple_t_contract$_TransparentUpgradeableProxy_$823(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_TransparentUpgradeableProxy_$823(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_contract$_TransparentUpgradeableProxy_$823t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_TransparentUpgradeableProxy_$823(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_contract$_TransparentUpgradeableProxy_$823t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_TransparentUpgradeableProxy_$823(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29(memPtr) {\n\n        mstore(add(memPtr, 0), 0x5c60da1b00000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 4)\n        store_literal_in_memory_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29(pos)\n        end := add(pos, 4)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7(memPtr) {\n\n        mstore(add(memPtr, 0), 0xf851a44000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 4)\n        store_literal_in_memory_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7(pos)\n        end := add(pos, 4)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461012857806399a88ec414610144578063f2fde38b1461016d578063f3b7dead146101965761007b565b8063204e1c7a14610080578063715018a6146100bd5780637eff275e146100d45780638da5cb5b146100fd575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a291906106f3565b6101d3565b6040516100b49190610741565b60405180910390f35b3480156100c957600080fd5b506100d2610267565b005b3480156100e057600080fd5b506100fb60048036038101906100f69190610788565b61027b565b005b34801561010957600080fd5b506101126102f2565b60405161011f9190610741565b60405180910390f35b610142600480360381019061013d919061090e565b61031b565b005b34801561015057600080fd5b5061016b60048036038101906101669190610788565b610396565b005b34801561017957600080fd5b50610194600480360381019061018f919061097d565b61040d565b005b3480156101a257600080fd5b506101bd60048036038101906101b891906106f3565b610491565b6040516101ca9190610741565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff166040516101fb90610a01565b600060405180830381855afa9150503d8060008114610236576040519150601f19603f3d011682016040523d82523d6000602084013e61023b565b606091505b50915091508161024a57600080fd5b8080602001905181019061025e9190610a42565b92505050919050565b61026f610525565b61027960006105a3565b565b610283610525565b8173ffffffffffffffffffffffffffffffffffffffff16638f283970826040518263ffffffff1660e01b81526004016102bc9190610741565b600060405180830381600087803b1580156102d657600080fd5b505af11580156102ea573d6000803e3d6000fd5b505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610323610525565b8273ffffffffffffffffffffffffffffffffffffffff16634f1ef2863484846040518463ffffffff1660e01b815260040161035f929190610af7565b6000604051808303818588803b15801561037857600080fd5b505af115801561038c573d6000803e3d6000fd5b5050505050505050565b61039e610525565b8173ffffffffffffffffffffffffffffffffffffffff16633659cfe6826040518263ffffffff1660e01b81526004016103d79190610741565b600060405180830381600087803b1580156103f157600080fd5b505af1158015610405573d6000803e3d6000fd5b505050505050565b610415610525565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610485576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047c90610baa565b60405180910390fd5b61048e816105a3565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff166040516104b990610c16565b600060405180830381855afa9150503d80600081146104f4576040519150601f19603f3d011682016040523d82523d6000602084013e6104f9565b606091505b50915091508161050857600080fd5b8080602001905181019061051c9190610a42565b92505050919050565b61052d610667565b73ffffffffffffffffffffffffffffffffffffffff1661054b6102f2565b73ffffffffffffffffffffffffffffffffffffffff16146105a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059890610c77565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106ae82610683565b9050919050565b60006106c0826106a3565b9050919050565b6106d0816106b5565b81146106db57600080fd5b50565b6000813590506106ed816106c7565b92915050565b60006020828403121561070957610708610679565b5b6000610717848285016106de565b91505092915050565b600061072b82610683565b9050919050565b61073b81610720565b82525050565b60006020820190506107566000830184610732565b92915050565b61076581610720565b811461077057600080fd5b50565b6000813590506107828161075c565b92915050565b6000806040838503121561079f5761079e610679565b5b60006107ad858286016106de565b92505060206107be85828601610773565b9150509250929050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61081b826107d2565b810181811067ffffffffffffffff8211171561083a576108396107e3565b5b80604052505050565b600061084d61066f565b90506108598282610812565b919050565b600067ffffffffffffffff821115610879576108786107e3565b5b610882826107d2565b9050602081019050919050565b82818337600083830152505050565b60006108b16108ac8461085e565b610843565b9050828152602081018484840111156108cd576108cc6107cd565b5b6108d884828561088f565b509392505050565b600082601f8301126108f5576108f46107c8565b5b813561090584826020860161089e565b91505092915050565b60008060006060848603121561092757610926610679565b5b6000610935868287016106de565b935050602061094686828701610773565b925050604084013567ffffffffffffffff8111156109675761096661067e565b5b610973868287016108e0565b9150509250925092565b60006020828403121561099357610992610679565b5b60006109a184828501610773565b91505092915050565b600081905092915050565b7f5c60da1b00000000000000000000000000000000000000000000000000000000600082015250565b60006109eb6004836109aa565b91506109f6826109b5565b600482019050919050565b6000610a0c826109de565b9150819050919050565b610a1f816106a3565b8114610a2a57600080fd5b50565b600081519050610a3c81610a16565b92915050565b600060208284031215610a5857610a57610679565b5b6000610a6684828501610a2d565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610aa9578082015181840152602081019050610a8e565b83811115610ab8576000848401525b50505050565b6000610ac982610a6f565b610ad38185610a7a565b9350610ae3818560208601610a8b565b610aec816107d2565b840191505092915050565b6000604082019050610b0c6000830185610732565b8181036020830152610b1e8184610abe565b90509392505050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610b94602683610b27565b9150610b9f82610b38565b604082019050919050565b60006020820190508181036000830152610bc381610b87565b9050919050565b7ff851a44000000000000000000000000000000000000000000000000000000000600082015250565b6000610c006004836109aa565b9150610c0b82610bca565b600482019050919050565b6000610c2182610bf3565b9150819050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610c61602083610b27565b9150610c6c82610c2b565b602082019050919050565b60006020820190508181036000830152610c9081610c54565b905091905056fea2646970667358221220296bd6be17da1c6963d442c26490fb2712f48b5ac20e423b4ca82a8f7c06763c64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9623609D GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x9623609D EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x99A88EC4 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xF3B7DEAD EQ PUSH2 0x196 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x204E1C7A EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x7EFF275E EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x741 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD2 PUSH2 0x267 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x788 JUMP JUMPDEST PUSH2 0x27B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x112 PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x741 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13D SWAP2 SWAP1 PUSH2 0x90E JUMP JUMPDEST PUSH2 0x31B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x788 JUMP JUMPDEST PUSH2 0x396 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x97D JUMP JUMPDEST PUSH2 0x40D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x491 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x741 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP1 PUSH2 0xA01 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x236 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x25E SWAP2 SWAP1 PUSH2 0xA42 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26F PUSH2 0x525 JUMP JUMPDEST PUSH2 0x279 PUSH1 0x0 PUSH2 0x5A3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x283 PUSH2 0x525 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8F283970 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x741 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x323 PUSH2 0x525 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4F1EF286 CALLVALUE DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35F SWAP3 SWAP2 SWAP1 PUSH2 0xAF7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x38C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x39E PUSH2 0x525 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3659CFE6 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0x741 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x405 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x415 PUSH2 0x525 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x485 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47C SWAP1 PUSH2 0xBAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x48E DUP2 PUSH2 0x5A3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x4B9 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4F4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x508 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x51C SWAP2 SWAP1 PUSH2 0xA42 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52D PUSH2 0x667 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x54B PUSH2 0x2F2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x598 SWAP1 PUSH2 0xC77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6AE DUP3 PUSH2 0x683 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C0 DUP3 PUSH2 0x6A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6D0 DUP2 PUSH2 0x6B5 JUMP JUMPDEST DUP2 EQ PUSH2 0x6DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6ED DUP2 PUSH2 0x6C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x709 JUMPI PUSH2 0x708 PUSH2 0x679 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x717 DUP5 DUP3 DUP6 ADD PUSH2 0x6DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x72B DUP3 PUSH2 0x683 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x73B DUP2 PUSH2 0x720 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x756 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x732 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x765 DUP2 PUSH2 0x720 JUMP JUMPDEST DUP2 EQ PUSH2 0x770 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x782 DUP2 PUSH2 0x75C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x79F JUMPI PUSH2 0x79E PUSH2 0x679 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7AD DUP6 DUP3 DUP7 ADD PUSH2 0x6DE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7BE DUP6 DUP3 DUP7 ADD PUSH2 0x773 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x81B DUP3 PUSH2 0x7D2 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x83A JUMPI PUSH2 0x839 PUSH2 0x7E3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x84D PUSH2 0x66F JUMP JUMPDEST SWAP1 POP PUSH2 0x859 DUP3 DUP3 PUSH2 0x812 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x879 JUMPI PUSH2 0x878 PUSH2 0x7E3 JUMP JUMPDEST JUMPDEST PUSH2 0x882 DUP3 PUSH2 0x7D2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B1 PUSH2 0x8AC DUP5 PUSH2 0x85E JUMP JUMPDEST PUSH2 0x843 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x8CD JUMPI PUSH2 0x8CC PUSH2 0x7CD JUMP JUMPDEST JUMPDEST PUSH2 0x8D8 DUP5 DUP3 DUP6 PUSH2 0x88F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8F5 JUMPI PUSH2 0x8F4 PUSH2 0x7C8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x905 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x89E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x927 JUMPI PUSH2 0x926 PUSH2 0x679 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x935 DUP7 DUP3 DUP8 ADD PUSH2 0x6DE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x946 DUP7 DUP3 DUP8 ADD PUSH2 0x773 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x967 JUMPI PUSH2 0x966 PUSH2 0x67E JUMP JUMPDEST JUMPDEST PUSH2 0x973 DUP7 DUP3 DUP8 ADD PUSH2 0x8E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x993 JUMPI PUSH2 0x992 PUSH2 0x679 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9A1 DUP5 DUP3 DUP6 ADD PUSH2 0x773 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9EB PUSH1 0x4 DUP4 PUSH2 0x9AA JUMP JUMPDEST SWAP2 POP PUSH2 0x9F6 DUP3 PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA0C DUP3 PUSH2 0x9DE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA1F DUP2 PUSH2 0x6A3 JUMP JUMPDEST DUP2 EQ PUSH2 0xA2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA3C DUP2 PUSH2 0xA16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA58 JUMPI PUSH2 0xA57 PUSH2 0x679 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA66 DUP5 DUP3 DUP6 ADD PUSH2 0xA2D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAA9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA8E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xAB8 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC9 DUP3 PUSH2 0xA6F JUMP JUMPDEST PUSH2 0xAD3 DUP2 DUP6 PUSH2 0xA7A JUMP JUMPDEST SWAP4 POP PUSH2 0xAE3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA8B JUMP JUMPDEST PUSH2 0xAEC DUP2 PUSH2 0x7D2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB0C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x732 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xB1E DUP2 DUP5 PUSH2 0xABE JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB94 PUSH1 0x26 DUP4 PUSH2 0xB27 JUMP JUMPDEST SWAP2 POP PUSH2 0xB9F DUP3 PUSH2 0xB38 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBC3 DUP2 PUSH2 0xB87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xF851A44000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC00 PUSH1 0x4 DUP4 PUSH2 0x9AA JUMP JUMPDEST SWAP2 POP PUSH2 0xC0B DUP3 PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC21 DUP3 PUSH2 0xBF3 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC61 PUSH1 0x20 DUP4 PUSH2 0xB27 JUMP JUMPDEST SWAP2 POP PUSH2 0xC6C DUP3 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC90 DUP2 PUSH2 0xC54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 PUSH12 0xD6BE17DA1C6963D442C26490 0xFB 0x27 SLT DELEGATECALL DUP12 GAS 0xC2 0xE TIMESTAMP EXTCODESIZE 0x4C 0xA8 0x2A DUP16 PUSH29 0x6763C64736F6C63430008090033000000000000000000000000000000 ","sourceMap":"126:111:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;635:437:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;;;;;;;;;;;:::i;:::-;;1825:148:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1201:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2593:244:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2178:149;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2081:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1232:419:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;635:437;731:7;908:12;922:23;957:5;949:25;;:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;907:82;;;;1007:7;999:16;;;;;;1043:10;1032:33;;;;;;;;;;;;:::i;:::-;1025:40;;;;635:437;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1825:148:6:-;1094:13:0;:11;:13::i;:::-;1939:5:6::1;:17;;;1957:8;1939:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1825:148:::0;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2593:244:6:-;1094:13:0;:11;:13::i;:::-;2768:5:6::1;:22;;;2798:9;2809:14;2825:4;2768:62;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;2593:244:::0;;;:::o;2178:149::-;1094:13:0;:11;:13::i;:::-;2289:5:6::1;:15;;;2305:14;2289:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2178:149:::0;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1232:419:6:-;1319:7;1487:12;1501:23;1536:5;1528:25;;:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1486:82;;;;1586:7;1578:16;;;;;;1622:10;1611:33;;;;;;;;;;;;:::i;:::-;1604:40;;;;1232:419;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:9:-;693:7;719:10;712:17;;640:96;:::o;7:75:14:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:104::-;511:7;540:24;558:5;540:24;:::i;:::-;529:35;;466:104;;;:::o;576:139::-;648:7;677:32;703:5;677:32;:::i;:::-;666:43;;576:139;;;:::o;721:192::-;829:59;882:5;829:59;:::i;:::-;822:5;819:70;809:98;;903:1;900;893:12;809:98;721:192;:::o;919:209::-;1000:5;1038:6;1025:20;1016:29;;1054:68;1116:5;1054:68;:::i;:::-;919:209;;;;:::o;1134:399::-;1228:6;1277:2;1265:9;1256:7;1252:23;1248:32;1245:119;;;1283:79;;:::i;:::-;1245:119;1403:1;1428:88;1508:7;1499:6;1488:9;1484:22;1428:88;:::i;:::-;1418:98;;1374:152;1134:399;;;;:::o;1539:96::-;1576:7;1605:24;1623:5;1605:24;:::i;:::-;1594:35;;1539:96;;;:::o;1641:118::-;1728:24;1746:5;1728:24;:::i;:::-;1723:3;1716:37;1641:118;;:::o;1765:222::-;1858:4;1896:2;1885:9;1881:18;1873:26;;1909:71;1977:1;1966:9;1962:17;1953:6;1909:71;:::i;:::-;1765:222;;;;:::o;1993:122::-;2066:24;2084:5;2066:24;:::i;:::-;2059:5;2056:35;2046:63;;2105:1;2102;2095:12;2046:63;1993:122;:::o;2121:139::-;2167:5;2205:6;2192:20;2183:29;;2221:33;2248:5;2221:33;:::i;:::-;2121:139;;;;:::o;2266:544::-;2369:6;2377;2426:2;2414:9;2405:7;2401:23;2397:32;2394:119;;;2432:79;;:::i;:::-;2394:119;2552:1;2577:88;2657:7;2648:6;2637:9;2633:22;2577:88;:::i;:::-;2567:98;;2523:152;2714:2;2740:53;2785:7;2776:6;2765:9;2761:22;2740:53;:::i;:::-;2730:63;;2685:118;2266:544;;;;;:::o;2816:117::-;2925:1;2922;2915:12;2939:117;3048:1;3045;3038:12;3062:102;3103:6;3154:2;3150:7;3145:2;3138:5;3134:14;3130:28;3120:38;;3062:102;;;:::o;3170:180::-;3218:77;3215:1;3208:88;3315:4;3312:1;3305:15;3339:4;3336:1;3329:15;3356:281;3439:27;3461:4;3439:27;:::i;:::-;3431:6;3427:40;3569:6;3557:10;3554:22;3533:18;3521:10;3518:34;3515:62;3512:88;;;3580:18;;:::i;:::-;3512:88;3620:10;3616:2;3609:22;3399:238;3356:281;;:::o;3643:129::-;3677:6;3704:20;;:::i;:::-;3694:30;;3733:33;3761:4;3753:6;3733:33;:::i;:::-;3643:129;;;:::o;3778:307::-;3839:4;3929:18;3921:6;3918:30;3915:56;;;3951:18;;:::i;:::-;3915:56;3989:29;4011:6;3989:29;:::i;:::-;3981:37;;4073:4;4067;4063:15;4055:23;;3778:307;;;:::o;4091:154::-;4175:6;4170:3;4165;4152:30;4237:1;4228:6;4223:3;4219:16;4212:27;4091:154;;;:::o;4251:410::-;4328:5;4353:65;4369:48;4410:6;4369:48;:::i;:::-;4353:65;:::i;:::-;4344:74;;4441:6;4434:5;4427:21;4479:4;4472:5;4468:16;4517:3;4508:6;4503:3;4499:16;4496:25;4493:112;;;4524:79;;:::i;:::-;4493:112;4614:41;4648:6;4643:3;4638;4614:41;:::i;:::-;4334:327;4251:410;;;;;:::o;4680:338::-;4735:5;4784:3;4777:4;4769:6;4765:17;4761:27;4751:122;;4792:79;;:::i;:::-;4751:122;4909:6;4896:20;4934:78;5008:3;5000:6;4993:4;4985:6;4981:17;4934:78;:::i;:::-;4925:87;;4741:277;4680:338;;;;:::o;5024:867::-;5145:6;5153;5161;5210:2;5198:9;5189:7;5185:23;5181:32;5178:119;;;5216:79;;:::i;:::-;5178:119;5336:1;5361:88;5441:7;5432:6;5421:9;5417:22;5361:88;:::i;:::-;5351:98;;5307:152;5498:2;5524:53;5569:7;5560:6;5549:9;5545:22;5524:53;:::i;:::-;5514:63;;5469:118;5654:2;5643:9;5639:18;5626:32;5685:18;5677:6;5674:30;5671:117;;;5707:79;;:::i;:::-;5671:117;5812:62;5866:7;5857:6;5846:9;5842:22;5812:62;:::i;:::-;5802:72;;5597:287;5024:867;;;;;:::o;5897:329::-;5956:6;6005:2;5993:9;5984:7;5980:23;5976:32;5973:119;;;6011:79;;:::i;:::-;5973:119;6131:1;6156:53;6201:7;6192:6;6181:9;6177:22;6156:53;:::i;:::-;6146:63;;6102:117;5897:329;;;;:::o;6232:147::-;6333:11;6370:3;6355:18;;6232:147;;;;:::o;6385:214::-;6525:66;6521:1;6513:6;6509:14;6502:90;6385:214;:::o;6605:398::-;6764:3;6785:83;6866:1;6861:3;6785:83;:::i;:::-;6778:90;;6877:93;6966:3;6877:93;:::i;:::-;6995:1;6990:3;6986:11;6979:18;;6605:398;;;:::o;7009:379::-;7193:3;7215:147;7358:3;7215:147;:::i;:::-;7208:154;;7379:3;7372:10;;7009:379;;;:::o;7394:138::-;7475:32;7501:5;7475:32;:::i;:::-;7468:5;7465:43;7455:71;;7522:1;7519;7512:12;7455:71;7394:138;:::o;7538:159::-;7603:5;7634:6;7628:13;7619:22;;7650:41;7685:5;7650:41;:::i;:::-;7538:159;;;;:::o;7703:367::-;7781:6;7830:2;7818:9;7809:7;7805:23;7801:32;7798:119;;;7836:79;;:::i;:::-;7798:119;7956:1;7981:72;8045:7;8036:6;8025:9;8021:22;7981:72;:::i;:::-;7971:82;;7927:136;7703:367;;;;:::o;8076:98::-;8127:6;8161:5;8155:12;8145:22;;8076:98;;;:::o;8180:168::-;8263:11;8297:6;8292:3;8285:19;8337:4;8332:3;8328:14;8313:29;;8180:168;;;;:::o;8354:307::-;8422:1;8432:113;8446:6;8443:1;8440:13;8432:113;;;8531:1;8526:3;8522:11;8516:18;8512:1;8507:3;8503:11;8496:39;8468:2;8465:1;8461:10;8456:15;;8432:113;;;8563:6;8560:1;8557:13;8554:101;;;8643:1;8634:6;8629:3;8625:16;8618:27;8554:101;8403:258;8354:307;;;:::o;8667:360::-;8753:3;8781:38;8813:5;8781:38;:::i;:::-;8835:70;8898:6;8893:3;8835:70;:::i;:::-;8828:77;;8914:52;8959:6;8954:3;8947:4;8940:5;8936:16;8914:52;:::i;:::-;8991:29;9013:6;8991:29;:::i;:::-;8986:3;8982:39;8975:46;;8757:270;8667:360;;;;:::o;9033:419::-;9172:4;9210:2;9199:9;9195:18;9187:26;;9223:71;9291:1;9280:9;9276:17;9267:6;9223:71;:::i;:::-;9341:9;9335:4;9331:20;9326:2;9315:9;9311:18;9304:48;9369:76;9440:4;9431:6;9369:76;:::i;:::-;9361:84;;9033:419;;;;;:::o;9458:169::-;9542:11;9576:6;9571:3;9564:19;9616:4;9611:3;9607:14;9592:29;;9458:169;;;;:::o;9633:225::-;9773:34;9769:1;9761:6;9757:14;9750:58;9842:8;9837:2;9829:6;9825:15;9818:33;9633:225;:::o;9864:366::-;10006:3;10027:67;10091:2;10086:3;10027:67;:::i;:::-;10020:74;;10103:93;10192:3;10103:93;:::i;:::-;10221:2;10216:3;10212:12;10205:19;;9864:366;;;:::o;10236:419::-;10402:4;10440:2;10429:9;10425:18;10417:26;;10489:9;10483:4;10479:20;10475:1;10464:9;10460:17;10453:47;10517:131;10643:4;10517:131;:::i;:::-;10509:139;;10236:419;;;:::o;10661:214::-;10801:66;10797:1;10789:6;10785:14;10778:90;10661:214;:::o;10881:398::-;11040:3;11061:83;11142:1;11137:3;11061:83;:::i;:::-;11054:90;;11153:93;11242:3;11153:93;:::i;:::-;11271:1;11266:3;11262:11;11255:18;;10881:398;;;:::o;11285:379::-;11469:3;11491:147;11634:3;11491:147;:::i;:::-;11484:154;;11655:3;11648:10;;11285:379;;;:::o;11670:182::-;11810:34;11806:1;11798:6;11794:14;11787:58;11670:182;:::o;11858:366::-;12000:3;12021:67;12085:2;12080:3;12021:67;:::i;:::-;12014:74;;12097:93;12186:3;12097:93;:::i;:::-;12215:2;12210:3;12206:12;12199:19;;11858:366;;;:::o;12230:419::-;12396:4;12434:2;12423:9;12419:18;12411:26;;12483:9;12477:4;12473:20;12469:1;12458:9;12454:17;12447:47;12511:131;12637:4;12511:131;:::i;:::-;12503:139;;12230:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"655400","executionCost":"infinite","totalCost":"infinite"},"external":{"changeProxyAdmin(address,address)":"infinite","getProxyAdmin(address)":"infinite","getProxyImplementation(address)":"infinite","owner()":"2589","renounceOwnership()":"30421","transferOwnership(address)":"30791","upgrade(address,address)":"infinite","upgradeAndCall(address,address,bytes)":"infinite"}},"methodIdentifiers":{"changeProxyAdmin(address,address)":"7eff275e","getProxyAdmin(address)":"f3b7dead","getProxyImplementation(address)":"204e1c7a","owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","upgrade(address,address)":"99a88ec4","upgradeAndCall(address,address,bytes)":"9623609d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract TransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeProxyAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract TransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"getProxyAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract TransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"getProxyImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract TransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract TransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"changeProxyAdmin(address,address)\":{\"details\":\"Changes the admin of `proxy` to `newAdmin`. Requirements: - This contract must be the current admin of `proxy`.\"},\"getProxyAdmin(address)\":{\"details\":\"Returns the current admin of `proxy`. Requirements: - This contract must be the admin of `proxy`.\"},\"getProxyImplementation(address)\":{\"details\":\"Returns the current implementation of `proxy`. Requirements: - This contract must be the admin of `proxy`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgrade(address,address)\":{\"details\":\"Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}. Requirements: - This contract must be the admin of `proxy`.\"},\"upgradeAndCall(address,address,bytes)\":{\"details\":\"Upgrades `proxy` to `implementation` and calls a function on the new implementation. See {TransparentUpgradeableProxy-upgradeToAndCall}. Requirements: - This contract must be the admin of `proxy`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Proxy/BoxProxyAdmin.sol\":\"BoxProxyAdmin\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/ERC1967/ERC1967Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"./ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializing the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        _upgradeToAndCall(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal view virtual override returns (address impl) {\\n        return ERC1967Upgrade._getImplementation();\\n    }\\n}\\n\",\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n *\\n * @custom:oz-upgrades-unsafe-allow delegatecall\\n */\\nabstract contract ERC1967Upgrade {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Emitted when the beacon is upgraded.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            Address.isContract(IBeacon(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(\\n        address newBeacon,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xabf3f59bc0e5423eae45e459dbe92e7052c6983628d39008590edc852a62f94a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/transparent/ProxyAdmin.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./TransparentUpgradeableProxy.sol\\\";\\nimport \\\"../../access/Ownable.sol\\\";\\n\\n/**\\n * @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\\n * explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\\n */\\ncontract ProxyAdmin is Ownable {\\n    /**\\n     * @dev Returns the current implementation of `proxy`.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the admin of `proxy`.\\n     */\\n    function getProxyImplementation(TransparentUpgradeableProxy proxy) public view virtual returns (address) {\\n        // We need to manually run the static call since the getter cannot be flagged as view\\n        // bytes4(keccak256(\\\"implementation()\\\")) == 0x5c60da1b\\n        (bool success, bytes memory returndata) = address(proxy).staticcall(hex\\\"5c60da1b\\\");\\n        require(success);\\n        return abi.decode(returndata, (address));\\n    }\\n\\n    /**\\n     * @dev Returns the current admin of `proxy`.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the admin of `proxy`.\\n     */\\n    function getProxyAdmin(TransparentUpgradeableProxy proxy) public view virtual returns (address) {\\n        // We need to manually run the static call since the getter cannot be flagged as view\\n        // bytes4(keccak256(\\\"admin()\\\")) == 0xf851a440\\n        (bool success, bytes memory returndata) = address(proxy).staticcall(hex\\\"f851a440\\\");\\n        require(success);\\n        return abi.decode(returndata, (address));\\n    }\\n\\n    /**\\n     * @dev Changes the admin of `proxy` to `newAdmin`.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the current admin of `proxy`.\\n     */\\n    function changeProxyAdmin(TransparentUpgradeableProxy proxy, address newAdmin) public virtual onlyOwner {\\n        proxy.changeAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the admin of `proxy`.\\n     */\\n    function upgrade(TransparentUpgradeableProxy proxy, address implementation) public virtual onlyOwner {\\n        proxy.upgradeTo(implementation);\\n    }\\n\\n    /**\\n     * @dev Upgrades `proxy` to `implementation` and calls a function on the new implementation. See\\n     * {TransparentUpgradeableProxy-upgradeToAndCall}.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the admin of `proxy`.\\n     */\\n    function upgradeAndCall(\\n        TransparentUpgradeableProxy proxy,\\n        address implementation,\\n        bytes memory data\\n    ) public payable virtual onlyOwner {\\n        proxy.upgradeToAndCall{value: msg.value}(implementation, data);\\n    }\\n}\\n\",\"keccak256\":\"0x33b8603bfbef7f33d9308b79c79aa3db7eb19525fd1addd764285e834ca275d7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/transparent/TransparentUpgradeableProxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1967/ERC1967Proxy.sol\\\";\\n\\n/**\\n * @dev This contract implements a proxy that is upgradeable by an admin.\\n *\\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\\n * clashing], which can potentially be used in an attack, this contract uses the\\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\\n * things that go hand in hand:\\n *\\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\\n * that call matches one of the admin functions exposed by the proxy itself.\\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\\n * \\\"admin cannot fallback to proxy target\\\".\\n *\\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\\n * to sudden errors when trying to call a function from the proxy implementation.\\n *\\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\\n * you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\\n */\\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\\n    /**\\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\\n     * optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\\n     */\\n    constructor(\\n        address _logic,\\n        address admin_,\\n        bytes memory _data\\n    ) payable ERC1967Proxy(_logic, _data) {\\n        _changeAdmin(admin_);\\n    }\\n\\n    /**\\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\\n     */\\n    modifier ifAdmin() {\\n        if (msg.sender == _getAdmin()) {\\n            _;\\n        } else {\\n            _fallback();\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function admin() external ifAdmin returns (address admin_) {\\n        admin_ = _getAdmin();\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\\n     */\\n    function implementation() external ifAdmin returns (address implementation_) {\\n        implementation_ = _implementation();\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\\n     */\\n    function changeAdmin(address newAdmin) external virtual ifAdmin {\\n        _changeAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\\n     */\\n    function upgradeTo(address newImplementation) external ifAdmin {\\n        _upgradeToAndCall(newImplementation, bytes(\\\"\\\"), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\\n     * proxied contract.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes calldata data) external payable ifAdmin {\\n        _upgradeToAndCall(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _admin() internal view virtual returns (address) {\\n        return _getAdmin();\\n    }\\n\\n    /**\\n     * @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}.\\n     */\\n    function _beforeFallback() internal virtual override {\\n        require(msg.sender != _getAdmin(), \\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\");\\n        super._beforeFallback();\\n    }\\n}\\n\",\"keccak256\":\"0xa6a787e7a901af6511e19aa53e1a00352db215a011d2c7a438d0582dd5da76f9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\"},\"contracts/Proxy/BoxProxyAdmin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.8;\\n\\nimport '@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol';\\n\\ncontract BoxProxyAdmin is ProxyAdmin {\\n    constructor(\\n        address /*owner*/\\n    ) ProxyAdmin() {}\\n     \\n}\\n\",\"keccak256\":\"0x79af2dad506b42301395dd8684bdeb97ee77f6ceecb77ff0e7c62b15784221bc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"contracts/Proxy/BoxProxyAdmin.sol:BoxProxyAdmin","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}